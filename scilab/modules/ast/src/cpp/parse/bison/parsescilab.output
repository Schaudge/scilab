Terminals unused in grammar

    "line break"
    FLEX_ERROR
    "block comment"
    FUNCTIONCALL


Grammar

    0 $accept: program "end of file"

    1 program: expressions
    2        | expressionLineBreak expressions
    3        | expressionLineBreak
    4        | ε

    5 expressions: recursiveExpression
    6            | recursiveExpression expression
    7            | recursiveExpression expression "line comment"
    8            | expression
    9            | expression "line comment"

   10 recursiveExpression: recursiveExpression expression expressionLineBreak
   11                    | recursiveExpression expression "line comment" expressionLineBreak
   12                    | expression "line comment" expressionLineBreak
   13                    | expression expressionLineBreak

   14 expressionLineBreak: ";"
   15                    | ","
   16                    | "end of line"
   17                    | expressionLineBreak ";"
   18                    | expressionLineBreak ","
   19                    | expressionLineBreak "end of line"

   20 expression: functionDeclaration
   21           | functionCall
   22           | variableDeclaration
   23           | argumentsControl
   24           | ifControl
   25           | selectControl
   26           | forControl
   27           | whileControl
   28           | tryControl
   29           | variable
   30           | implicitFunctionCall
   31           | "break"
   32           | "continue"
   33           | returnControl
   34           | "line comment"
   35           | error

   36 implicitFunctionCall: implicitFunctionCall implicitCallable
   37                     | "identifier" implicitCallable

   38 implicitCallable: "identifier"
   39                 | "integer"
   40                 | "number"
   41                 | "float"
   42                 | "string"
   43                 | "$"
   44                 | "%t or %T"
   45                 | "%f or %F"
   46                 | implicitCallable "." "identifier"
   47                 | "path"

   48 functionCall: simpleFunctionCall
   49             | "(" functionCall ")"

   50 simpleFunctionCall: "identifier" "(" functionArgs ")"
   51                   | "identifier" "{" functionArgs "}"
   52                   | "identifier" "(" ")"
   53                   | "identifier" "{" "}"

   54 functionArgs: variable
   55             | functionCall
   56             | ":"
   57             | variableDeclaration
   58             | ","
   59             | "," variable
   60             | "," functionCall
   61             | "," ":"
   62             | "," variableDeclaration
   63             | functionArgs ","
   64             | functionArgs "," variable
   65             | functionArgs "," functionCall
   66             | functionArgs "," ":"
   67             | functionArgs "," variableDeclaration

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

   72 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"

   76 endfunction: "endfunction"
   77            | "end"

   78 functionDeclarationReturns: idList

   79 functionDeclarationArguments: "(" idList ")"
   80                             | "(" ")"
   81                             | ε

   82 idList: idList "," "identifier"
   83       | "identifier"

   84 functionDeclarationBreak: lineEnd
   85                         | ";"
   86                         | ";" "end of line"
   87                         | ","
   88                         | "," "end of line"

   89 functionBody: expressions
   90             | ε

   91 condition: functionCall
   92          | variable

   93 comparison: variable rightComparable
   94           | functionCall rightComparable

   95 rightComparable: "&" variable
   96                | "&" functionCall
   97                | "&" ":"
   98                | "&&" variable
   99                | "&&" functionCall
  100                | "&&" ":"
  101                | "|" variable
  102                | "|" functionCall
  103                | "|" ":"
  104                | "||" variable
  105                | "||" functionCall
  106                | "||" ":"
  107                | "==" variable
  108                | "==" functionCall
  109                | "==" ":"
  110                | "<> or ~=" variable
  111                | "<> or ~=" functionCall
  112                | "<> or ~=" ":"
  113                | ">" variable
  114                | ">" functionCall
  115                | ">" ":"
  116                | "<" variable
  117                | "<" functionCall
  118                | "<" ":"
  119                | ">=" variable
  120                | ">=" functionCall
  121                | ">=" ":"
  122                | "<=" variable
  123                | "<=" functionCall
  124                | "<=" ":"

  125 operation: variable rightOperand
  126          | functionCall rightOperand
  127          | "-" variable
  128          | "-" functionCall
  129          | "+" variable
  130          | "+" functionCall
  131          | variable "** or ^" variable
  132          | variable "** or ^" functionCall
  133          | functionCall "** or ^" variable
  134          | functionCall "** or ^" functionCall
  135          | variable ".^" variable
  136          | variable ".^" functionCall
  137          | functionCall ".^" variable
  138          | functionCall ".^" functionCall
  139          | variable "'"
  140          | variable ".'"
  141          | functionCall "'"
  142          | functionCall ".'"

  143 rightOperand: "+" variable
  144             | "+" functionCall
  145             | "-" variable
  146             | "-" functionCall
  147             | "*" variable
  148             | "*" functionCall
  149             | ".*" variable
  150             | ".*" functionCall
  151             | ".*." variable
  152             | ".*." functionCall
  153             | "*." variable
  154             | "*." functionCall
  155             | "/" variable
  156             | "/" functionCall
  157             | "./" variable
  158             | "./" functionCall
  159             | "./." variable
  160             | "./." functionCall
  161             | "/." variable
  162             | "/." functionCall
  163             | "\\" variable
  164             | "\\" functionCall
  165             | ".\\" variable
  166             | ".\\" functionCall
  167             | ".\\." variable
  168             | ".\\." functionCall
  169             | "\\." variable
  170             | "\\." functionCall

  171 listableBegin: ":" variable
  172              | ":" functionCall

  173 listableEnd: listableBegin ":" variable
  174            | listableBegin ":" functionCall
  175            | listableBegin

  176 variable: "~ or @" variable
  177         | "~ or @" functionCall
  178         | variable "." "identifier"
  179         | variable "." keywords
  180         | variable "." functionCall
  181         | functionCall "." "identifier"
  182         | functionCall "." keywords
  183         | variable listableEnd
  184         | functionCall listableEnd
  185         | lambdaFunctionDeclaration
  186         | matrix
  187         | cell
  188         | operation
  189         | "identifier"
  190         | "integer"
  191         | "number"
  192         | "float"
  193         | "complex number"
  194         | "string"
  195         | "$"
  196         | "%t or %T"
  197         | "%f or %F"
  198         | "(" variable ")"
  199         | "(" variableFields ")"
  200         | comparison
  201         | variable "(" functionArgs ")"
  202         | functionCall "(" functionArgs ")"
  203         | functionCall "(" ")"

  204 variableFields: variableFields "," variable
  205               | variableFields "," functionCall
  206               | variable "," variable
  207               | functionCall "," functionCall
  208               | functionCall "," variable
  209               | variable "," functionCall

  210 cell: "{" matrixOrCellLines "}"
  211     | "{" "end of line" matrixOrCellLines "}"
  212     | "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | "{" matrixOrCellColumns "}"
  215     | "{" "end of line" matrixOrCellColumns "}"
  216     | "{" "end of line" "}"
  217     | "{" "}"

  218 matrix: "[" matrixOrCellLines "]"
  219       | "[" "end of line" matrixOrCellLines "]"
  220       | "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | "[" matrixOrCellColumns "]"
  223       | "[" "end of line" matrixOrCellColumns "]"
  224       | "[" "end of line" "]"
  225       | "[" "]"

  226 matrixOrCellLines: matrixOrCellLines matrixOrCellLine
  227                  | matrixOrCellLine

  228 matrixOrCellLineBreak: ";"
  229                      | "end of line"
  230                      | matrixOrCellLineBreak "end of line"
  231                      | matrixOrCellLineBreak ";"

  232 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak
  233                 | matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak

  234 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns variable
  237                    | matrixOrCellColumns functionCall
  238                    | matrixOrCellColumns "line comment"
  239                    | matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | variable
  241                    | functionCall
  242                    | "line comment"

  243 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak ","
  244                         | matrixOrCellColumnsBreak "spaces"
  245                         | ","
  246                         | "spaces"

  247 variableDeclaration: assignable "=" variable
  248                    | assignable "=" functionCall
  249                    | functionCall "=" variable
  250                    | functionCall "=" functionCall
  251                    | assignable "=" ":"
  252                    | functionCall "=" ":"
  253                    | assignable "=" returnControl
  254                    | functionCall "=" returnControl

  255 assignable: variable "." "identifier"
  256           | variable "." keywords
  257           | variable "." functionCall
  258           | functionCall "." "identifier"
  259           | functionCall "." keywords
  260           | "identifier"
  261           | multipleResults
  262           | variable "(" functionArgs ")"
  263           | functionCall "(" functionArgs ")"

  264 multipleResults: "[" matrixOrCellColumns "]"

  265 argumentsControl: "arguments" "end of line" argumentsDeclarations "end"
  266                 | "arguments" "end of line" "end"

  267 argumentsDeclarations: argumentsDeclarations argumentDeclaration lineEnd
  268                      | argumentsDeclarations "line comment" "end of line"
  269                      | argumentDeclaration lineEnd
  270                      | "line comment" "end of line"

  271 argumentDeclaration: argumentName argumentDimension argumentValidators argumentDefaultValue
  272                    | argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue

  273 argumentName: "identifier"
  274             | "identifier" "." "identifier"

  275 argumentDimension: "(" functionArgs ")"
  276                  | ε

  277 argumentValidators: "{" functionArgs "}"
  278                   | ε

  279 argumentDefaultValue: "=" variable
  280                     | "=" functionCall
  281                     | ε

  282 ifControl: "if" condition then thenBody "end"
  283          | "if" condition then thenBody else elseBody "end"
  284          | "if" condition then thenBody elseIfControl "end"

  285 thenBody: expressions
  286         | ε

  287 elseBody: expressions
  288         | ε

  289 ifConditionBreak: ";"
  290                 | ";" "end of line"
  291                 | ","
  292                 | "," "end of line"
  293                 | "end of line"

  294 then: "then"
  295     | ifConditionBreak "then"
  296     | ifConditionBreak "then" "end of line"
  297     | "then" ifConditionBreak
  298     | ifConditionBreak
  299     | ε

  300 else: "else"
  301     | "else" ","
  302     | "else" ";"
  303     | "else" "end of line"
  304     | "else" "," "end of line"
  305     | "else" ";" "end of line"

  306 elseIfControl: "elseif" condition then thenBody
  307              | "elseif" condition then thenBody else elseBody
  308              | "elseif" condition then thenBody elseIfControl

  309 selectControl: select selectable selectConditionBreak casesControl "end"
  310              | select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | select selectable "line comment" selectConditionBreak casesControl "end"
  312              | select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"

  313 select: "select"
  314       | "switch"

  315 defaultCase: else
  316            | "otherwise"
  317            | "otherwise" ","
  318            | "otherwise" ";"
  319            | "otherwise" "end of line"
  320            | "otherwise" "," "end of line"
  321            | "otherwise" ";" "end of line"

  322 selectable: variable
  323           | functionCall

  324 selectConditionBreak: "end of line"
  325                     | "," "end of line"
  326                     | ";" "end of line"
  327                     | ","
  328                     | ";"

  329 casesControl: "case" variable caseControlBreak caseBody
  330             | "case" functionCall caseControlBreak caseBody
  331             | comments "case" variable caseControlBreak caseBody
  332             | comments "case" functionCall caseControlBreak caseBody
  333             | casesControl "case" variable caseControlBreak caseBody
  334             | casesControl "case" functionCall caseControlBreak caseBody

  335 caseBody: expressions
  336         | ε

  337 caseControlBreak: "then"
  338                 | ","
  339                 | ";"
  340                 | "end of line"
  341                 | "then" "end of line"
  342                 | "," "end of line"
  343                 | ";" "end of line"
  344                 | "then" ","
  345                 | "then" "," "end of line"
  346                 | "then" ";"
  347                 | "then" ";" "end of line"
  348                 | ε

  349 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

  351 forIterator: functionCall
  352            | variable

  353 forConditionBreak: "end of line"
  354                  | ";"
  355                  | ";" "end of line"
  356                  | ","
  357                  | "," "end of line"
  358                  | "do"
  359                  | "do" "end of line"
  360                  | ε

  361 forBody: expressions
  362        | ε

  363 whileControl: "while" condition whileConditionBreak whileBody "end"

  364 whileBody: expressions
  365          | ε

  366 whileConditionBreak: ","
  367                    | ";"
  368                    | "do"
  369                    | "do" ","
  370                    | "do" ";"
  371                    | "then"
  372                    | "then" ","
  373                    | "then" ";"
  374                    | "line comment" "end of line"
  375                    | "end of line"
  376                    | "," "end of line"
  377                    | ";" "end of line"
  378                    | "do" "end of line"
  379                    | "do" "," "end of line"
  380                    | "do" ";" "end of line"
  381                    | "then" "end of line"
  382                    | "then" "," "end of line"
  383                    | "then" ";" "end of line"

  384 tryControl: "try" catchBody "catch" catchBody "end"
  385           | "try" catchBody "end"

  386 catchBody: expressions
  387          | "end of line" expressions
  388          | ";" expressions
  389          | "," expressions
  390          | "end of line"
  391          | ε

  392 returnControl: "return"
  393              | "return" variable
  394              | "return" functionCall

  395 comments: "line comment" "end of line"
  396         | comments "line comment" "end of line"

  397 lineEnd: "end of line"
  398        | "line comment" "end of line"

  399 keywords: "if"
  400         | "then"
  401         | "else"
  402         | "elseif"
  403         | "end"
  404         | "select"
  405         | "switch"
  406         | "otherwise"
  407         | "case"
  408         | "function"
  409         | "endfunction"
  410         | "for"
  411         | "while"
  412         | "do"
  413         | "break"
  414         | "try"
  415         | "catch"
  416         | "return"


Terminals, with rules where they appear

    "end of file" (0) 0
    error (256) 35
    "line break" (258)
    "end of line" (259) 16 19 73 74 75 86 88 211 213 215 216 219 221 223 224 229 230 265 266 268 270 290 292 293 296 303 304 305 319 320 321 324 325 326 340 341 342 343 345 347 353 355 357 359 374 375 376 377 378 379 380 381 382 383 387 390 395 396 397 398
    "spaces" (260) 244 246
    "%t or %T" (261) 44 196
    "%f or %F" (262) 45 197
    "'" (263) 139 141
    "~ or @" (264) 176 177
    "->" (265) 72 73 74 75
    "#" (266) 72 73 74 75
    "$" (267) 43 195
    "," (268) 15 18 58 59 60 61 62 63 64 65 66 67 82 87 88 204 205 206 207 208 209 243 245 291 292 301 304 317 320 325 327 338 342 344 345 356 357 366 369 372 376 379 382 389
    ":" (269) 56 61 66 97 100 103 106 109 112 115 118 121 124 171 172 173 174 251 252
    ";" (270) 14 17 85 86 228 231 289 290 302 305 318 321 326 328 339 343 346 347 354 355 367 370 373 377 380 383 388
    "(" (271) 49 50 52 72 73 74 75 79 80 198 199 201 202 203 262 263 275 350
    ")" (272) 49 50 52 72 73 74 75 79 80 198 199 201 202 203 262 263 275 350
    "[" (273) 69 70 218 219 220 221 222 223 224 225 264
    "]" (274) 69 70 218 219 220 221 222 223 224 225 264
    "{" (275) 51 53 210 211 212 213 214 215 216 217 277
    "}" (276) 51 53 210 211 212 213 214 215 216 217 277
    "." (277) 46 178 179 180 181 182 255 256 257 258 259 274
    ".'" (278) 140 142
    "+" (279) 129 130 143 144
    "-" (280) 127 128 145 146
    "*" (281) 147 148
    ".*" (282) 149 150
    ".*." (283) 151 152
    "*." (284) 153 154
    "/" (285) 155 156
    "./" (286) 157 158
    "/." (287) 161 162
    "./." (288) 159 160
    "\\" (289) 163 164
    ".\\" (290) 165 166
    "\\." (291) 169 170
    ".\\." (292) 167 168
    "** or ^" (293) 131 132 133 134
    ".^" (294) 135 136 137 138
    "==" (295) 107 108 109
    "<> or ~=" (296) 110 111 112
    "<" (297) 116 117 118
    "<=" (298) 122 123 124
    ">" (299) 113 114 115
    ">=" (300) 119 120 121
    "&" (301) 95 96 97
    "&&" (302) 98 99 100
    "|" (303) 101 102 103
    "||" (304) 104 105 106
    "=" (305) 68 69 70 247 248 249 250 251 252 253 254 279 280 349 350
    "arguments" (306) 265 266
    "if" (307) 282 283 284 399
    "then" (308) 294 295 296 297 337 341 344 345 346 347 371 372 373 381 382 383 400
    "else" (309) 300 301 302 303 304 305 401
    "elseif" (310) 306 307 308 402
    "end" (311) 77 265 266 282 283 284 309 310 311 312 349 350 363 384 385 403
    "select" (312) 313 404
    "switch" (313) 314 405
    "case" (314) 329 330 331 332 333 334 407
    "otherwise" (315) 316 317 318 319 320 321 406
    "function" (316) 68 69 70 71 408
    "endfunction" (317) 76 409
    "for" (318) 349 350 410
    "while" (319) 363 411
    "do" (320) 358 359 368 369 370 378 379 380 412
    "break" (321) 31 413
    "continue" (322) 32
    "try" (323) 384 385 414
    "catch" (324) 384 415
    "return" (325) 392 393 394 416
    FLEX_ERROR (326)
    "string" <str> (327) 42 194
    "identifier" <str> (328) 37 38 46 50 51 52 53 68 69 70 71 82 83 178 181 189 255 258 260 272 273 274 349 350
    "integer" <number> (329) 39 190
    "float" <number> (330) 41 192
    "complex number" <number> (331) 193
    "number" <number> (332) 40 191
    "path" <path> (333) 47
    "line comment" <comment> (334) 7 9 11 12 34 238 239 242 268 270 311 312 374 395 396 398
    "block comment" <comment> (335)
    TOPLEVEL (336)
    HIGHLEVEL (337)
    UPLEVEL (338)
    LISTABLE (339)
    CONTROLBREAK (340)
    UMINUS (341)
    UPLUS (342)
    FUNCTIONCALL (343)


Nonterminals, with rules where they appear

    $accept (89)
        on left: 0
    program (90)
        on left: 1 2 3 4
        on right: 0
    expressions <t_seq_exp> (91)
        on left: 5 6 7 8 9
        on right: 1 2 89 285 287 335 361 364 386 387 388 389
    recursiveExpression <t_list_exp> (92)
        on left: 10 11 12 13
        on right: 5 6 7 10 11
    expressionLineBreak <mute> (93)
        on left: 14 15 16 17 18 19
        on right: 2 3 10 11 12 13 17 18 19
    expression <t_exp> (94)
        on left: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 6 7 8 9 10 11 12 13
    implicitFunctionCall <t_call_exp> (95)
        on left: 36 37
        on right: 30 36
    implicitCallable <t_string_exp> (96)
        on left: 38 39 40 41 42 43 44 45 46 47
        on right: 36 37 46
    functionCall <t_call_exp> (97)
        on left: 48 49
        on right: 21 49 55 60 65 91 94 96 99 102 105 108 111 114 117 120 123 126 128 130 132 133 134 136 137 138 141 142 144 146 148 150 152 154 156 158 160 162 164 166 168 170 172 174 177 180 181 182 184 202 203 205 207 208 209 235 237 241 248 249 250 252 254 257 258 259 263 280 323 330 332 334 351 394
    simpleFunctionCall <t_call_exp> (98)
        on left: 50 51 52 53
        on right: 48
    functionArgs <t_list_exp> (99)
        on left: 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 50 51 63 64 65 66 67 201 202 262 263 275 277
    functionDeclaration <t_function_dec> (100)
        on left: 68 69 70 71
        on right: 20
    lambdaFunctionDeclaration <t_function_dec> (101)
        on left: 72 73 74 75
        on right: 185
    endfunction (102)
        on left: 76 77
        on right: 68 69 70 71
    functionDeclarationReturns <t_list_var> (103)
        on left: 78
        on right: 69
    functionDeclarationArguments <t_list_var> (104)
        on left: 79 80 81
        on right: 68 69 70 71 72 73 74 75
    idList <t_list_var> (105)
        on left: 82 83
        on right: 78 79 82
    functionDeclarationBreak (106)
        on left: 84 85 86 87 88
        on right: 68 69 70 71
    functionBody <t_seq_exp> (107)
        on left: 89 90
        on right: 68 69 70 71 72 73 74 75
    condition <t_exp> (108)
        on left: 91 92
        on right: 282 283 284 306 307 308 363
    comparison <t_op_exp> (109)
        on left: 93 94
        on right: 200
    rightComparable <t_op_exp> (110)
        on left: 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124
        on right: 93 94
    operation <t_exp> (111)
        on left: 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142
        on right: 188
    rightOperand <t_op_exp> (112)
        on left: 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170
        on right: 125 126
    listableBegin <t_exp> (113)
        on left: 171 172
        on right: 173 174 175
    listableEnd <t_implicit_list> (114)
        on left: 173 174 175
        on right: 183 184
    variable <t_exp> (115)
        on left: 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 199 200 201 202 203
        on right: 29 54 59 64 92 93 95 98 101 104 107 110 113 116 119 122 125 127 129 131 132 133 135 136 137 139 140 143 145 147 149 151 153 155 157 159 161 163 165 167 169 171 173 176 178 179 180 183 198 201 204 206 208 209 234 236 240 247 249 255 256 257 262 279 322 329 331 333 352 393
    variableFields <t_list_exp> (116)
        on left: 204 205 206 207 208 209
        on right: 199 204 205
    cell <t_cell_exp> (117)
        on left: 210 211 212 213 214 215 216 217
        on right: 187
    matrix <t_matrix_exp> (118)
        on left: 218 219 220 221 222 223 224 225
        on right: 186
    matrixOrCellLines <t_list_mline> (119)
        on left: 226 227
        on right: 210 211 212 213 218 219 220 221 226
    matrixOrCellLineBreak (120)
        on left: 228 229 230 231
        on right: 230 231 232 233
    matrixOrCellLine <t_matrixline_exp> (121)
        on left: 232 233
        on right: 226 227
    matrixOrCellColumns <t_list_exp> (122)
        on left: 234 235 236 237 238 239 240 241 242
        on right: 212 213 214 215 220 221 222 223 232 233 234 235 236 237 238 239 264
    matrixOrCellColumnsBreak (123)
        on left: 243 244 245 246
        on right: 233 234 235 239 243 244
    variableDeclaration <t_assign_exp> (124)
        on left: 247 248 249 250 251 252 253 254
        on right: 22 57 62 67
    assignable <t_exp> (125)
        on left: 255 256 257 258 259 260 261 262 263
        on right: 247 248 251 253
    multipleResults <t_assignlist_exp> (126)
        on left: 264
        on right: 261
    argumentsControl <t_arguments_exp> (127)
        on left: 265 266
        on right: 23
    argumentsDeclarations <t_arguments_exp> (128)
        on left: 267 268 269 270
        on right: 265 267 268
    argumentDeclaration <t_argument_dec> (129)
        on left: 271 272
        on right: 267 269
    argumentName <t_exp> (130)
        on left: 273 274
        on right: 271 272
    argumentDimension <t_exp> (131)
        on left: 275 276
        on right: 271 272
    argumentValidators <t_exp> (132)
        on left: 277 278
        on right: 271 272
    argumentDefaultValue <t_exp> (133)
        on left: 279 280 281
        on right: 271 272
    ifControl <t_if_exp> (134)
        on left: 282 283 284
        on right: 24
    thenBody <t_seq_exp> (135)
        on left: 285 286
        on right: 282 283 284 306 307 308
    elseBody <t_seq_exp> (136)
        on left: 287 288
        on right: 283 307 310 312
    ifConditionBreak (137)
        on left: 289 290 291 292 293
        on right: 295 296 297 298
    then (138)
        on left: 294 295 296 297 298 299
        on right: 282 283 284 306 307 308
    else (139)
        on left: 300 301 302 303 304 305
        on right: 283 307 315
    elseIfControl <t_seq_exp> (140)
        on left: 306 307 308
        on right: 284 308
    selectControl <t_select_exp> (141)
        on left: 309 310 311 312
        on right: 25
    select (142)
        on left: 313 314
        on right: 309 310 311 312
    defaultCase (143)
        on left: 315 316 317 318 319 320 321
        on right: 310 312
    selectable <t_exp> (144)
        on left: 322 323
        on right: 309 310 311 312
    selectConditionBreak (145)
        on left: 324 325 326 327 328
        on right: 309 310 311 312
    casesControl <t_list_case> (146)
        on left: 329 330 331 332 333 334
        on right: 309 310 311 312 333 334
    caseBody <t_seq_exp> (147)
        on left: 335 336
        on right: 329 330 331 332 333 334
    caseControlBreak (148)
        on left: 337 338 339 340 341 342 343 344 345 346 347 348
        on right: 329 330 331 332 333 334
    forControl <t_for_exp> (149)
        on left: 349 350
        on right: 26
    forIterator <t_exp> (150)
        on left: 351 352
        on right: 349 350
    forConditionBreak (151)
        on left: 353 354 355 356 357 358 359 360
        on right: 349 350
    forBody <t_seq_exp> (152)
        on left: 361 362
        on right: 349 350
    whileControl <t_while_exp> (153)
        on left: 363
        on right: 27
    whileBody <t_seq_exp> (154)
        on left: 364 365
        on right: 363
    whileConditionBreak (155)
        on left: 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383
        on right: 363
    tryControl <t_try_exp> (156)
        on left: 384 385
        on right: 28
    catchBody <t_seq_exp> (157)
        on left: 386 387 388 389 390 391
        on right: 384 385
    returnControl <t_return_exp> (158)
        on left: 392 393 394
        on right: 33 253 254
    comments (159)
        on left: 395 396
        on right: 331 332 396
    lineEnd (160)
        on left: 397 398
        on right: 84 267 269
    keywords <t_simple_var> (161)
        on left: 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416
        on right: 179 182 256 259


State 0

    0 $accept: • program "end of file"
    1 program: • expressions
    2        | • expressionLineBreak expressions
    3        | • expressionLineBreak
    4        | ε •  ["end of file"]
    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 2
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 8
    ";"               shift, and go to state 9
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end of file"  reduce using rule 4 (program)

    program                    go to state 33
    expressions                go to state 34
    recursiveExpression        go to state 35
    expressionLineBreak        go to state 36
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 1

   35 expression: error •

    $default  reduce using rule 35 (expression)


State 2

   16 expressionLineBreak: "end of line" •

    $default  reduce using rule 16 (expressionLineBreak)


State 3

  196 variable: "%t or %T" •

    $default  reduce using rule 196 (variable)


State 4

  197 variable: "%f or %F" •

    $default  reduce using rule 197 (variable)


State 5

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  176         | "~ or @" • variable
  177         | • "~ or @" functionCall
  177         | "~ or @" • functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 61
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 62
    cell                       go to state 46
    matrix                     go to state 47


State 6

   72 lambdaFunctionDeclaration: "#" • functionDeclarationArguments "->" "(" functionBody ")"
   73                          | "#" • functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | "#" • functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | "#" • functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   79 functionDeclarationArguments: • "(" idList ")"
   80                             | • "(" ")"
   81                             | ε •  ["->"]

    "("  shift, and go to state 63

    $default  reduce using rule 81 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 64


State 7

  195 variable: "$" •

    $default  reduce using rule 195 (variable)


State 8

   15 expressionLineBreak: "," •

    $default  reduce using rule 15 (expressionLineBreak)


State 9

   14 expressionLineBreak: ";" •

    $default  reduce using rule 14 (expressionLineBreak)


State 10

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   49             | "(" • functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  198         | "(" • variable ")"
  199         | • "(" variableFields ")"
  199         | "(" • variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  204 variableFields: • variableFields "," variable
  205               | • variableFields "," functionCall
  206               | • variable "," variable
  207               | • functionCall "," functionCall
  208               | • functionCall "," variable
  209               | • variable "," functionCall
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 65
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 66
    variableFields             go to state 67
    cell                       go to state 46
    matrix                     go to state 47


State 11

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  218       | "[" • matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  219       | "[" • "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  220       | "[" • matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  221       | "[" • "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  222       | "[" • matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  223       | "[" • "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  224       | "[" • "end of line" "]"
  225       | • "[" "]"
  225       | "[" • "]"
  226 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  227                  | • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"
  264 multipleResults: "[" • matrixOrCellColumns "]"

    "end of line"     shift, and go to state 68
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 69
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLines          go to state 73
    matrixOrCellLine           go to state 74
    matrixOrCellColumns        go to state 75


State 12

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  210     | "{" • matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  211     | "{" • "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  212     | "{" • matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  213     | "{" • "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  214     | "{" • matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  215     | "{" • "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  216     | "{" • "end of line" "}"
  217     | • "{" "}"
  217     | "{" • "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  226 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  227                  | • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "end of line"     shift, and go to state 76
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 77
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLines          go to state 78
    matrixOrCellLine           go to state 74
    matrixOrCellColumns        go to state 79


State 13

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  129          | "+" • variable
  130          | • "+" functionCall
  130          | "+" • functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 80
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 81
    cell                       go to state 46
    matrix                     go to state 47


State 14

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  127          | "-" • variable
  128          | • "-" functionCall
  128          | "-" • functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 82
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 83
    cell                       go to state 46
    matrix                     go to state 47


State 15

  265 argumentsControl: "arguments" • "end of line" argumentsDeclarations "end"
  266                 | "arguments" • "end of line" "end"

    "end of line"  shift, and go to state 84


State 16

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   91 condition: • functionCall
   92          | • variable
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  282 ifControl: "if" • condition then thenBody "end"
  283          | "if" • condition then thenBody else elseBody "end"
  284          | "if" • condition then thenBody elseIfControl "end"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 85
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    condition                  go to state 86
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 87
    cell                       go to state 46
    matrix                     go to state 47


State 17

  313 select: "select" •

    $default  reduce using rule 313 (select)


State 18

  314 select: "switch" •

    $default  reduce using rule 314 (select)


State 19

   68 functionDeclaration: "function" • "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | "function" • "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" • "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "["           shift, and go to state 88
    "identifier"  shift, and go to state 89


State 20

  349 forControl: "for" • "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | "for" • "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "("           shift, and go to state 90
    "identifier"  shift, and go to state 91


State 21

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   91 condition: • functionCall
   92          | • variable
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  363 whileControl: "while" • condition whileConditionBreak whileBody "end"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 85
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    condition                  go to state 92
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 87
    cell                       go to state 46
    matrix                     go to state 47


State 22

   31 expression: "break" •

    $default  reduce using rule 31 (expression)


State 23

   32 expression: "continue" •

    $default  reduce using rule 32 (expression)


State 24

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  384           | "try" • catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  385           | "try" • catchBody "end"
  386 catchBody: • expressions
  387          | • "end of line" expressions
  388          | • ";" expressions
  389          | • "," expressions
  390          | • "end of line"
  391          | ε •  ["end", "catch"]
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 93
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 94
    ";"               shift, and go to state 95
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"    reduce using rule 391 (catchBody)
    "catch"  reduce using rule 391 (catchBody)

    expressions                go to state 96
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    catchBody                  go to state 97
    returnControl              go to state 58


State 25

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  392 returnControl: "return" •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  393              | "return" • variable
  394              | "return" • functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    $default  reduce using rule 392 (returnControl)

    functionCall               go to state 98
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 99
    cell                       go to state 46
    matrix                     go to state 47


State 26

  194 variable: "string" •

    $default  reduce using rule 194 (variable)


State 27

   37 implicitFunctionCall: "identifier" • implicitCallable
   38 implicitCallable: • "identifier"
   39                 | • "integer"
   40                 | • "number"
   41                 | • "float"
   42                 | • "string"
   43                 | • "$"
   44                 | • "%t or %T"
   45                 | • "%f or %F"
   46                 | • implicitCallable "." "identifier"
   47                 | • "path"
   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  189 variable: "identifier" •  ["end of file", "end of line", "'", ",", ":", ";", ")", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  260 assignable: "identifier" •  ["="]

    "%t or %T"    shift, and go to state 100
    "%f or %F"    shift, and go to state 101
    "$"           shift, and go to state 102
    "("           shift, and go to state 103
    "{"           shift, and go to state 104
    "string"      shift, and go to state 105
    "identifier"  shift, and go to state 106
    "integer"     shift, and go to state 107
    "float"       shift, and go to state 108
    "number"      shift, and go to state 109
    "path"        shift, and go to state 110

    "="       reduce using rule 260 (assignable)
    $default  reduce using rule 189 (variable)

    implicitCallable  go to state 111

    Conflict between rule 189 and token "(" resolved as shift (LISTABLE < "(").


State 28

  190 variable: "integer" •

    $default  reduce using rule 190 (variable)


State 29

  192 variable: "float" •

    $default  reduce using rule 192 (variable)


State 30

  193 variable: "complex number" •

    $default  reduce using rule 193 (variable)


State 31

  191 variable: "number" •

    $default  reduce using rule 191 (variable)


State 32

   34 expression: "line comment" •

    $default  reduce using rule 34 (expression)


State 33

    0 $accept: program • "end of file"

    "end of file"  shift, and go to state 112


State 34

    1 program: expressions •

    $default  reduce using rule 1 (program)


State 35

    5 expressions: recursiveExpression •  ["end of file", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
    6            | recursiveExpression • expression
    7            | recursiveExpression • expression "line comment"
   10 recursiveExpression: recursiveExpression • expression expressionLineBreak
   11                    | recursiveExpression • expression "line comment" expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end of file"  reduce using rule 5 (expressions)
    ")"            reduce using rule 5 (expressions)
    "else"         reduce using rule 5 (expressions)
    "elseif"       reduce using rule 5 (expressions)
    "end"          reduce using rule 5 (expressions)
    "case"         reduce using rule 5 (expressions)
    "otherwise"    reduce using rule 5 (expressions)
    "endfunction"  reduce using rule 5 (expressions)
    "catch"        reduce using rule 5 (expressions)

    expression                 go to state 113
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 36

    2 program: expressionLineBreak • expressions
    3        | expressionLineBreak •  ["end of file"]
    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 114
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 115
    ";"               shift, and go to state 116
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end of file"  reduce using rule 3 (program)

    expressions                go to state 117
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 37

    8 expressions: expression •  ["end of file", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
    9            | expression • "line comment"
   12 recursiveExpression: expression • "line comment" expressionLineBreak
   13                    | expression • expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"   shift, and go to state 2
    ","             shift, and go to state 8
    ";"             shift, and go to state 9
    "line comment"  shift, and go to state 118

    $default  reduce using rule 8 (expressions)

    expressionLineBreak  go to state 119


State 38

   30 expression: implicitFunctionCall •  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
   36 implicitFunctionCall: implicitFunctionCall • implicitCallable
   38 implicitCallable: • "identifier"
   39                 | • "integer"
   40                 | • "number"
   41                 | • "float"
   42                 | • "string"
   43                 | • "$"
   44                 | • "%t or %T"
   45                 | • "%f or %F"
   46                 | • implicitCallable "." "identifier"
   47                 | • "path"

    "%t or %T"    shift, and go to state 100
    "%f or %F"    shift, and go to state 101
    "$"           shift, and go to state 102
    "string"      shift, and go to state 105
    "identifier"  shift, and go to state 106
    "integer"     shift, and go to state 107
    "float"       shift, and go to state 108
    "number"      shift, and go to state 109
    "path"        shift, and go to state 110

    $default  reduce using rule 30 (expression)

    implicitCallable  go to state 120


State 39

   21 expression: functionCall •  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  249 variableDeclaration: functionCall • "=" variable
  250                    | functionCall • "=" functionCall
  252                    | functionCall • "=" ":"
  254                    | functionCall • "=" returnControl
  258 assignable: functionCall • "." "identifier"
  259           | functionCall • "." keywords
  263           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 123
    "."         shift, and go to state 124
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151
    "="         shift, and go to state 152

    $default  reduce using rule 21 (expression)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 40

   48 functionCall: simpleFunctionCall •

    $default  reduce using rule 48 (functionCall)


State 41

   20 expression: functionDeclaration •

    $default  reduce using rule 20 (expression)


State 42

  185 variable: lambdaFunctionDeclaration •

    $default  reduce using rule 185 (variable)


State 43

  200 variable: comparison •

    $default  reduce using rule 200 (variable)


State 44

  188 variable: operation •

    $default  reduce using rule 188 (variable)


State 45

   29 expression: variable •  ["end of file", "end of line", ",", ";", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  255 assignable: variable • "." "identifier"
  256           | variable • "." keywords
  257           | variable • "." functionCall
  262           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 158
    "."         shift, and go to state 159
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 29 (expression)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 46

  187 variable: cell •

    $default  reduce using rule 187 (variable)


State 47

  186 variable: matrix •

    $default  reduce using rule 186 (variable)


State 48

   22 expression: variableDeclaration •

    $default  reduce using rule 22 (expression)


State 49

  247 variableDeclaration: assignable • "=" variable
  248                    | assignable • "=" functionCall
  251                    | assignable • "=" ":"
  253                    | assignable • "=" returnControl

    "="  shift, and go to state 166


State 50

  261 assignable: multipleResults •

    $default  reduce using rule 261 (assignable)


State 51

   23 expression: argumentsControl •

    $default  reduce using rule 23 (expression)


State 52

   24 expression: ifControl •

    $default  reduce using rule 24 (expression)


State 53

   25 expression: selectControl •

    $default  reduce using rule 25 (expression)


State 54

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  309 selectControl: select • selectable selectConditionBreak casesControl "end"
  310              | select • selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | select • selectable "line comment" selectConditionBreak casesControl "end"
  312              | select • selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  322 selectable: • variable
  323           | • functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 167
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 168
    cell                       go to state 46
    matrix                     go to state 47
    selectable                 go to state 169


State 55

   26 expression: forControl •

    $default  reduce using rule 26 (expression)


State 56

   27 expression: whileControl •

    $default  reduce using rule 27 (expression)


State 57

   28 expression: tryControl •

    $default  reduce using rule 28 (expression)


State 58

   33 expression: returnControl •

    $default  reduce using rule 33 (expression)


State 59

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  218       | "[" • matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  219       | "[" • "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  220       | "[" • matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  221       | "[" • "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  222       | "[" • matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  223       | "[" • "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  224       | "[" • "end of line" "]"
  225       | • "[" "]"
  225       | "[" • "]"
  226 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  227                  | • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "end of line"     shift, and go to state 68
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 69
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLines          go to state 73
    matrixOrCellLine           go to state 74
    matrixOrCellColumns        go to state 170


State 60

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  189 variable: "identifier" •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "("  shift, and go to state 103
    "{"  shift, and go to state 104

    $default  reduce using rule 189 (variable)

    Conflict between rule 189 and token "(" resolved as shift (LISTABLE < "(").
    Conflict between rule 189 and token "{" resolved as shift (LISTABLE < "{").


State 61

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  177 variable: "~ or @" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  181         | functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "("  shift, and go to state 171
    "."  shift, and go to state 172

    $default  reduce using rule 177 (variable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 177 and token "'" resolved as reduce ("'" < "~ or @").
    Conflict between rule 177 and token ":" resolved as reduce (":" < "~ or @").
    Conflict between rule 177 and token "(" resolved as shift ("~ or @" < "(").
    Conflict between rule 177 and token "." resolved as shift ("~ or @" < ".").
    Conflict between rule 177 and token ".'" resolved as reduce (".'" < "~ or @").
    Conflict between rule 177 and token "+" resolved as reduce ("+" < "~ or @").
    Conflict between rule 177 and token "-" resolved as reduce ("-" < "~ or @").
    Conflict between rule 177 and token "*" resolved as reduce ("*" < "~ or @").
    Conflict between rule 177 and token ".*" resolved as reduce (".*" < "~ or @").
    Conflict between rule 177 and token ".*." resolved as reduce (".*." < "~ or @").
    Conflict between rule 177 and token "*." resolved as reduce ("*." < "~ or @").
    Conflict between rule 177 and token "/" resolved as reduce ("/" < "~ or @").
    Conflict between rule 177 and token "./" resolved as reduce ("./" < "~ or @").
    Conflict between rule 177 and token "/." resolved as reduce ("/." < "~ or @").
    Conflict between rule 177 and token "./." resolved as reduce ("./." < "~ or @").
    Conflict between rule 177 and token "\\" resolved as reduce ("\\" < "~ or @").
    Conflict between rule 177 and token ".\\" resolved as reduce (".\\" < "~ or @").
    Conflict between rule 177 and token "\\." resolved as reduce ("\\." < "~ or @").
    Conflict between rule 177 and token ".\\." resolved as reduce (".\\." < "~ or @").
    Conflict between rule 177 and token "** or ^" resolved as reduce ("** or ^" < "~ or @").
    Conflict between rule 177 and token ".^" resolved as reduce (".^" < "~ or @").
    Conflict between rule 177 and token "==" resolved as reduce ("==" < "~ or @").
    Conflict between rule 177 and token "<> or ~=" resolved as reduce ("<> or ~=" < "~ or @").
    Conflict between rule 177 and token "<" resolved as reduce ("<" < "~ or @").
    Conflict between rule 177 and token "<=" resolved as reduce ("<=" < "~ or @").
    Conflict between rule 177 and token ">" resolved as reduce (">" < "~ or @").
    Conflict between rule 177 and token ">=" resolved as reduce (">=" < "~ or @").
    Conflict between rule 177 and token "&" resolved as reduce ("&" < "~ or @").
    Conflict between rule 177 and token "&&" resolved as reduce ("&&" < "~ or @").
    Conflict between rule 177 and token "|" resolved as reduce ("|" < "~ or @").
    Conflict between rule 177 and token "||" resolved as reduce ("||" < "~ or @").


State 62

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  176 variable: "~ or @" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  178         | variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "("  shift, and go to state 173
    "."  shift, and go to state 174

    $default  reduce using rule 176 (variable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 176 and token "'" resolved as reduce ("'" < "~ or @").
    Conflict between rule 176 and token ":" resolved as reduce (":" < "~ or @").
    Conflict between rule 176 and token "(" resolved as shift ("~ or @" < "(").
    Conflict between rule 176 and token "." resolved as shift ("~ or @" < ".").
    Conflict between rule 176 and token ".'" resolved as reduce (".'" < "~ or @").
    Conflict between rule 176 and token "+" resolved as reduce ("+" < "~ or @").
    Conflict between rule 176 and token "-" resolved as reduce ("-" < "~ or @").
    Conflict between rule 176 and token "*" resolved as reduce ("*" < "~ or @").
    Conflict between rule 176 and token ".*" resolved as reduce (".*" < "~ or @").
    Conflict between rule 176 and token ".*." resolved as reduce (".*." < "~ or @").
    Conflict between rule 176 and token "*." resolved as reduce ("*." < "~ or @").
    Conflict between rule 176 and token "/" resolved as reduce ("/" < "~ or @").
    Conflict between rule 176 and token "./" resolved as reduce ("./" < "~ or @").
    Conflict between rule 176 and token "/." resolved as reduce ("/." < "~ or @").
    Conflict between rule 176 and token "./." resolved as reduce ("./." < "~ or @").
    Conflict between rule 176 and token "\\" resolved as reduce ("\\" < "~ or @").
    Conflict between rule 176 and token ".\\" resolved as reduce (".\\" < "~ or @").
    Conflict between rule 176 and token "\\." resolved as reduce ("\\." < "~ or @").
    Conflict between rule 176 and token ".\\." resolved as reduce (".\\." < "~ or @").
    Conflict between rule 176 and token "** or ^" resolved as reduce ("** or ^" < "~ or @").
    Conflict between rule 176 and token ".^" resolved as reduce (".^" < "~ or @").
    Conflict between rule 176 and token "==" resolved as reduce ("==" < "~ or @").
    Conflict between rule 176 and token "<> or ~=" resolved as reduce ("<> or ~=" < "~ or @").
    Conflict between rule 176 and token "<" resolved as reduce ("<" < "~ or @").
    Conflict between rule 176 and token "<=" resolved as reduce ("<=" < "~ or @").
    Conflict between rule 176 and token ">" resolved as reduce (">" < "~ or @").
    Conflict between rule 176 and token ">=" resolved as reduce (">=" < "~ or @").
    Conflict between rule 176 and token "&" resolved as reduce ("&" < "~ or @").
    Conflict between rule 176 and token "&&" resolved as reduce ("&&" < "~ or @").
    Conflict between rule 176 and token "|" resolved as reduce ("|" < "~ or @").
    Conflict between rule 176 and token "||" resolved as reduce ("||" < "~ or @").


State 63

   79 functionDeclarationArguments: "(" • idList ")"
   80                             | "(" • ")"
   82 idList: • idList "," "identifier"
   83       | • "identifier"

    ")"           shift, and go to state 175
    "identifier"  shift, and go to state 176

    idList  go to state 177


State 64

   72 lambdaFunctionDeclaration: "#" functionDeclarationArguments • "->" "(" functionBody ")"
   73                          | "#" functionDeclarationArguments • "->" "end of line" "(" functionBody ")"
   74                          | "#" functionDeclarationArguments • "->" "(" "end of line" functionBody ")"
   75                          | "#" functionDeclarationArguments • "->" "end of line" "(" "end of line" functionBody ")"

    "->"  shift, and go to state 178


State 65

   49 functionCall: "(" functionCall • ")"
   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  207 variableFields: functionCall • "," functionCall
  208               | functionCall • "," variable

    "'"         shift, and go to state 121
    ","         shift, and go to state 179
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    ")"         shift, and go to state 180
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 66

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  198         | "(" variable • ")"
  201         | variable • "(" functionArgs ")"
  206 variableFields: variable • "," variable
  209               | variable • "," functionCall

    "'"         shift, and go to state 157
    ","         shift, and go to state 181
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    ")"         shift, and go to state 182
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 67

  199 variable: "(" variableFields • ")"
  204 variableFields: variableFields • "," variable
  205               | variableFields • "," functionCall

    ","  shift, and go to state 183
    ")"  shift, and go to state 184


State 68

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  219       | "[" "end of line" • matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  221       | "[" "end of line" • matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  223       | "[" "end of line" • matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  224       | "[" "end of line" • "]"
  225       | • "[" "]"
  226 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  227                  | • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 185
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLines          go to state 186
    matrixOrCellLine           go to state 74
    matrixOrCellColumns        go to state 187


State 69

  225 matrix: "[" "]" •

    $default  reduce using rule 225 (matrix)


State 70

  242 matrixOrCellColumns: "line comment" •

    $default  reduce using rule 242 (matrixOrCellColumns)


State 71

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  241 matrixOrCellColumns: functionCall •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 241 (matrixOrCellColumns)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 241 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 241 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 241 and token "-" resolved as shift (HIGHLEVEL < "-").


State 72

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  240 matrixOrCellColumns: variable •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 240 (matrixOrCellColumns)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 240 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 240 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 240 and token "-" resolved as shift (HIGHLEVEL < "-").


State 73

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  218       | "[" matrixOrCellLines • "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  220       | "[" matrixOrCellLines • matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  226 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 188
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLine           go to state 189
    matrixOrCellColumns        go to state 190


State 74

  227 matrixOrCellLines: matrixOrCellLine •

    $default  reduce using rule 227 (matrixOrCellLines)


State 75

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  222       | "[" matrixOrCellColumns • "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"
  264 multipleResults: "[" matrixOrCellColumns • "]"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 195
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 76

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  211     | "{" "end of line" • matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  213     | "{" "end of line" • matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  215     | "{" "end of line" • matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  216     | "{" "end of line" • "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  226 matrixOrCellLines: • matrixOrCellLines matrixOrCellLine
  227                  | • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 201
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLines          go to state 202
    matrixOrCellLine           go to state 74
    matrixOrCellColumns        go to state 203


State 77

  217 cell: "{" "}" •

    $default  reduce using rule 217 (cell)


State 78

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  210     | "{" matrixOrCellLines • "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  212     | "{" matrixOrCellLines • matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  226 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 204
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLine           go to state 189
    matrixOrCellColumns        go to state 205


State 79

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  214     | "{" matrixOrCellColumns • "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 206
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 80

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  130          | "+" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 130 (operation)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 130 and token "'" resolved as shift (UPLUS < "'").
    Conflict between rule 130 and token ":" resolved as reduce (":" < UPLUS).
    Conflict between rule 130 and token "(" resolved as shift (UPLUS < "(").
    Conflict between rule 130 and token "." resolved as shift (UPLUS < ".").
    Conflict between rule 130 and token ".'" resolved as shift (UPLUS < ".'").
    Conflict between rule 130 and token "+" resolved as reduce ("+" < UPLUS).
    Conflict between rule 130 and token "-" resolved as reduce ("-" < UPLUS).
    Conflict between rule 130 and token "*" resolved as reduce ("*" < UPLUS).
    Conflict between rule 130 and token ".*" resolved as reduce (".*" < UPLUS).
    Conflict between rule 130 and token ".*." resolved as reduce (".*." < UPLUS).
    Conflict between rule 130 and token "*." resolved as reduce ("*." < UPLUS).
    Conflict between rule 130 and token "/" resolved as reduce ("/" < UPLUS).
    Conflict between rule 130 and token "./" resolved as reduce ("./" < UPLUS).
    Conflict between rule 130 and token "/." resolved as reduce ("/." < UPLUS).
    Conflict between rule 130 and token "./." resolved as reduce ("./." < UPLUS).
    Conflict between rule 130 and token "\\" resolved as reduce ("\\" < UPLUS).
    Conflict between rule 130 and token ".\\" resolved as reduce (".\\" < UPLUS).
    Conflict between rule 130 and token "\\." resolved as reduce ("\\." < UPLUS).
    Conflict between rule 130 and token ".\\." resolved as reduce (".\\." < UPLUS).
    Conflict between rule 130 and token "** or ^" resolved as shift (UPLUS < "** or ^").
    Conflict between rule 130 and token ".^" resolved as shift (UPLUS < ".^").
    Conflict between rule 130 and token "==" resolved as reduce ("==" < UPLUS).
    Conflict between rule 130 and token "<> or ~=" resolved as reduce ("<> or ~=" < UPLUS).
    Conflict between rule 130 and token "<" resolved as reduce ("<" < UPLUS).
    Conflict between rule 130 and token "<=" resolved as reduce ("<=" < UPLUS).
    Conflict between rule 130 and token ">" resolved as reduce (">" < UPLUS).
    Conflict between rule 130 and token ">=" resolved as reduce (">=" < UPLUS).
    Conflict between rule 130 and token "&" resolved as reduce ("&" < UPLUS).
    Conflict between rule 130 and token "&&" resolved as reduce ("&&" < UPLUS).
    Conflict between rule 130 and token "|" resolved as reduce ("|" < UPLUS).
    Conflict between rule 130 and token "||" resolved as reduce ("||" < UPLUS).


State 81

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  129          | "+" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 129 (operation)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 129 and token "'" resolved as shift (UPLUS < "'").
    Conflict between rule 129 and token ":" resolved as reduce (":" < UPLUS).
    Conflict between rule 129 and token "(" resolved as shift (UPLUS < "(").
    Conflict between rule 129 and token "." resolved as shift (UPLUS < ".").
    Conflict between rule 129 and token ".'" resolved as shift (UPLUS < ".'").
    Conflict between rule 129 and token "+" resolved as reduce ("+" < UPLUS).
    Conflict between rule 129 and token "-" resolved as reduce ("-" < UPLUS).
    Conflict between rule 129 and token "*" resolved as reduce ("*" < UPLUS).
    Conflict between rule 129 and token ".*" resolved as reduce (".*" < UPLUS).
    Conflict between rule 129 and token ".*." resolved as reduce (".*." < UPLUS).
    Conflict between rule 129 and token "*." resolved as reduce ("*." < UPLUS).
    Conflict between rule 129 and token "/" resolved as reduce ("/" < UPLUS).
    Conflict between rule 129 and token "./" resolved as reduce ("./" < UPLUS).
    Conflict between rule 129 and token "/." resolved as reduce ("/." < UPLUS).
    Conflict between rule 129 and token "./." resolved as reduce ("./." < UPLUS).
    Conflict between rule 129 and token "\\" resolved as reduce ("\\" < UPLUS).
    Conflict between rule 129 and token ".\\" resolved as reduce (".\\" < UPLUS).
    Conflict between rule 129 and token "\\." resolved as reduce ("\\." < UPLUS).
    Conflict between rule 129 and token ".\\." resolved as reduce (".\\." < UPLUS).
    Conflict between rule 129 and token "** or ^" resolved as shift (UPLUS < "** or ^").
    Conflict between rule 129 and token ".^" resolved as shift (UPLUS < ".^").
    Conflict between rule 129 and token "==" resolved as reduce ("==" < UPLUS).
    Conflict between rule 129 and token "<> or ~=" resolved as reduce ("<> or ~=" < UPLUS).
    Conflict between rule 129 and token "<" resolved as reduce ("<" < UPLUS).
    Conflict between rule 129 and token "<=" resolved as reduce ("<=" < UPLUS).
    Conflict between rule 129 and token ">" resolved as reduce (">" < UPLUS).
    Conflict between rule 129 and token ">=" resolved as reduce (">=" < UPLUS).
    Conflict between rule 129 and token "&" resolved as reduce ("&" < UPLUS).
    Conflict between rule 129 and token "&&" resolved as reduce ("&&" < UPLUS).
    Conflict between rule 129 and token "|" resolved as reduce ("|" < UPLUS).
    Conflict between rule 129 and token "||" resolved as reduce ("||" < UPLUS).


State 82

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  128          | "-" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 128 (operation)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 128 and token "'" resolved as shift (UMINUS < "'").
    Conflict between rule 128 and token ":" resolved as reduce (":" < UMINUS).
    Conflict between rule 128 and token "(" resolved as shift (UMINUS < "(").
    Conflict between rule 128 and token "." resolved as shift (UMINUS < ".").
    Conflict between rule 128 and token ".'" resolved as shift (UMINUS < ".'").
    Conflict between rule 128 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 128 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 128 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 128 and token ".*" resolved as reduce (".*" < UMINUS).
    Conflict between rule 128 and token ".*." resolved as reduce (".*." < UMINUS).
    Conflict between rule 128 and token "*." resolved as reduce ("*." < UMINUS).
    Conflict between rule 128 and token "/" resolved as reduce ("/" < UMINUS).
    Conflict between rule 128 and token "./" resolved as reduce ("./" < UMINUS).
    Conflict between rule 128 and token "/." resolved as reduce ("/." < UMINUS).
    Conflict between rule 128 and token "./." resolved as reduce ("./." < UMINUS).
    Conflict between rule 128 and token "\\" resolved as reduce ("\\" < UMINUS).
    Conflict between rule 128 and token ".\\" resolved as reduce (".\\" < UMINUS).
    Conflict between rule 128 and token "\\." resolved as reduce ("\\." < UMINUS).
    Conflict between rule 128 and token ".\\." resolved as reduce (".\\." < UMINUS).
    Conflict between rule 128 and token "** or ^" resolved as shift (UMINUS < "** or ^").
    Conflict between rule 128 and token ".^" resolved as shift (UMINUS < ".^").
    Conflict between rule 128 and token "==" resolved as reduce ("==" < UMINUS).
    Conflict between rule 128 and token "<> or ~=" resolved as reduce ("<> or ~=" < UMINUS).
    Conflict between rule 128 and token "<" resolved as reduce ("<" < UMINUS).
    Conflict between rule 128 and token "<=" resolved as reduce ("<=" < UMINUS).
    Conflict between rule 128 and token ">" resolved as reduce (">" < UMINUS).
    Conflict between rule 128 and token ">=" resolved as reduce (">=" < UMINUS).
    Conflict between rule 128 and token "&" resolved as reduce ("&" < UMINUS).
    Conflict between rule 128 and token "&&" resolved as reduce ("&&" < UMINUS).
    Conflict between rule 128 and token "|" resolved as reduce ("|" < UMINUS).
    Conflict between rule 128 and token "||" resolved as reduce ("||" < UMINUS).


State 83

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  127          | "-" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 127 (operation)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 127 and token "'" resolved as shift (UMINUS < "'").
    Conflict between rule 127 and token ":" resolved as reduce (":" < UMINUS).
    Conflict between rule 127 and token "(" resolved as shift (UMINUS < "(").
    Conflict between rule 127 and token "." resolved as shift (UMINUS < ".").
    Conflict between rule 127 and token ".'" resolved as shift (UMINUS < ".'").
    Conflict between rule 127 and token "+" resolved as reduce ("+" < UMINUS).
    Conflict between rule 127 and token "-" resolved as reduce ("-" < UMINUS).
    Conflict between rule 127 and token "*" resolved as reduce ("*" < UMINUS).
    Conflict between rule 127 and token ".*" resolved as reduce (".*" < UMINUS).
    Conflict between rule 127 and token ".*." resolved as reduce (".*." < UMINUS).
    Conflict between rule 127 and token "*." resolved as reduce ("*." < UMINUS).
    Conflict between rule 127 and token "/" resolved as reduce ("/" < UMINUS).
    Conflict between rule 127 and token "./" resolved as reduce ("./" < UMINUS).
    Conflict between rule 127 and token "/." resolved as reduce ("/." < UMINUS).
    Conflict between rule 127 and token "./." resolved as reduce ("./." < UMINUS).
    Conflict between rule 127 and token "\\" resolved as reduce ("\\" < UMINUS).
    Conflict between rule 127 and token ".\\" resolved as reduce (".\\" < UMINUS).
    Conflict between rule 127 and token "\\." resolved as reduce ("\\." < UMINUS).
    Conflict between rule 127 and token ".\\." resolved as reduce (".\\." < UMINUS).
    Conflict between rule 127 and token "** or ^" resolved as shift (UMINUS < "** or ^").
    Conflict between rule 127 and token ".^" resolved as shift (UMINUS < ".^").
    Conflict between rule 127 and token "==" resolved as reduce ("==" < UMINUS).
    Conflict between rule 127 and token "<> or ~=" resolved as reduce ("<> or ~=" < UMINUS).
    Conflict between rule 127 and token "<" resolved as reduce ("<" < UMINUS).
    Conflict between rule 127 and token "<=" resolved as reduce ("<=" < UMINUS).
    Conflict between rule 127 and token ">" resolved as reduce (">" < UMINUS).
    Conflict between rule 127 and token ">=" resolved as reduce (">=" < UMINUS).
    Conflict between rule 127 and token "&" resolved as reduce ("&" < UMINUS).
    Conflict between rule 127 and token "&&" resolved as reduce ("&&" < UMINUS).
    Conflict between rule 127 and token "|" resolved as reduce ("|" < UMINUS).
    Conflict between rule 127 and token "||" resolved as reduce ("||" < UMINUS).


State 84

  265 argumentsControl: "arguments" "end of line" • argumentsDeclarations "end"
  266                 | "arguments" "end of line" • "end"
  267 argumentsDeclarations: • argumentsDeclarations argumentDeclaration lineEnd
  268                      | • argumentsDeclarations "line comment" "end of line"
  269                      | • argumentDeclaration lineEnd
  270                      | • "line comment" "end of line"
  271 argumentDeclaration: • argumentName argumentDimension argumentValidators argumentDefaultValue
  272                    | • argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue
  273 argumentName: • "identifier"
  274             | • "identifier" "." "identifier"

    "end"           shift, and go to state 207
    "identifier"    shift, and go to state 208
    "line comment"  shift, and go to state 209

    argumentsDeclarations  go to state 210
    argumentDeclaration    go to state 211
    argumentName           go to state 212


State 85

   91 condition: functionCall •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "{", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 91 (condition)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 91 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 91 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 91 and token "-" resolved as shift (HIGHLEVEL < "-").


State 86

  282 ifControl: "if" condition • then thenBody "end"
  283          | "if" condition • then thenBody else elseBody "end"
  284          | "if" condition • then thenBody elseIfControl "end"
  289 ifConditionBreak: • ";"
  290                 | • ";" "end of line"
  291                 | • ","
  292                 | • "," "end of line"
  293                 | • "end of line"
  294 then: • "then"
  295     | • ifConditionBreak "then"
  296     | • ifConditionBreak "then" "end of line"
  297     | • "then" ifConditionBreak
  298     | • ifConditionBreak
  299     | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 213
    ","            shift, and go to state 214
    ";"            shift, and go to state 215
    "then"         shift, and go to state 216

    $default  reduce using rule 299 (then)

    ifConditionBreak  go to state 217
    then              go to state 218


State 87

   92 condition: variable •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "{", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 92 (condition)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 92 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 92 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 92 and token "-" resolved as shift (HIGHLEVEL < "-").


State 88

   69 functionDeclaration: "function" "[" • functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" "[" • "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   78 functionDeclarationReturns: • idList
   82 idList: • idList "," "identifier"
   83       | • "identifier"

    "]"           shift, and go to state 219
    "identifier"  shift, and go to state 176

    functionDeclarationReturns  go to state 220
    idList                      go to state 221


State 89

   68 functionDeclaration: "function" "identifier" • "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   79 functionDeclarationArguments: • "(" idList ")"
   80                             | • "(" ")"
   81                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 63
    "="  shift, and go to state 222

    $default  reduce using rule 81 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 223


State 90

  350 forControl: "for" "(" • "identifier" "=" forIterator ")" forConditionBreak forBody "end"

    "identifier"  shift, and go to state 224


State 91

  349 forControl: "for" "identifier" • "=" forIterator forConditionBreak forBody "end"

    "="  shift, and go to state 225


State 92

  363 whileControl: "while" condition • whileConditionBreak whileBody "end"
  366 whileConditionBreak: • ","
  367                    | • ";"
  368                    | • "do"
  369                    | • "do" ","
  370                    | • "do" ";"
  371                    | • "then"
  372                    | • "then" ","
  373                    | • "then" ";"
  374                    | • "line comment" "end of line"
  375                    | • "end of line"
  376                    | • "," "end of line"
  377                    | • ";" "end of line"
  378                    | • "do" "end of line"
  379                    | • "do" "," "end of line"
  380                    | • "do" ";" "end of line"
  381                    | • "then" "end of line"
  382                    | • "then" "," "end of line"
  383                    | • "then" ";" "end of line"

    "end of line"   shift, and go to state 226
    ","             shift, and go to state 227
    ";"             shift, and go to state 228
    "then"          shift, and go to state 229
    "do"            shift, and go to state 230
    "line comment"  shift, and go to state 231

    whileConditionBreak  go to state 232


State 93

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  387 catchBody: "end of line" • expressions
  390          | "end of line" •  ["end", "catch"]
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"    reduce using rule 390 (catchBody)
    "catch"  reduce using rule 390 (catchBody)

    expressions                go to state 233
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 94

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  389 catchBody: "," • expressions
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    expressions                go to state 234
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 95

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  388 catchBody: ";" • expressions
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    expressions                go to state 235
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 96

  386 catchBody: expressions •

    $default  reduce using rule 386 (catchBody)


State 97

  384 tryControl: "try" catchBody • "catch" catchBody "end"
  385           | "try" catchBody • "end"

    "end"    shift, and go to state 236
    "catch"  shift, and go to state 237


State 98

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  394 returnControl: "return" functionCall •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 394 (returnControl)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 99

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  393 returnControl: "return" variable •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 393 (returnControl)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 100

   44 implicitCallable: "%t or %T" •

    $default  reduce using rule 44 (implicitCallable)


State 101

   45 implicitCallable: "%f or %F" •

    $default  reduce using rule 45 (implicitCallable)


State 102

   43 implicitCallable: "$" •

    $default  reduce using rule 43 (implicitCallable)


State 103

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   50                   | "identifier" "(" • functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   52                   | "identifier" "(" • ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    ")"               shift, and go to state 240
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 243
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 104

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   51                   | "identifier" "{" • functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   53                   | "identifier" "{" • "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "}"               shift, and go to state 246
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 247
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 105

   42 implicitCallable: "string" •

    $default  reduce using rule 42 (implicitCallable)


State 106

   38 implicitCallable: "identifier" •

    $default  reduce using rule 38 (implicitCallable)


State 107

   39 implicitCallable: "integer" •

    $default  reduce using rule 39 (implicitCallable)


State 108

   41 implicitCallable: "float" •

    $default  reduce using rule 41 (implicitCallable)


State 109

   40 implicitCallable: "number" •

    $default  reduce using rule 40 (implicitCallable)


State 110

   47 implicitCallable: "path" •

    $default  reduce using rule 47 (implicitCallable)


State 111

   37 implicitFunctionCall: "identifier" implicitCallable •  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   46 implicitCallable: implicitCallable • "." "identifier"

    "."  shift, and go to state 248

    $default  reduce using rule 37 (implicitFunctionCall)


State 112

    0 $accept: program "end of file" •

    $default  accept


State 113

    6 expressions: recursiveExpression expression •  ["end of file", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
    7            | recursiveExpression expression • "line comment"
   10 recursiveExpression: recursiveExpression expression • expressionLineBreak
   11                    | recursiveExpression expression • "line comment" expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"   shift, and go to state 2
    ","             shift, and go to state 8
    ";"             shift, and go to state 9
    "line comment"  shift, and go to state 249

    $default  reduce using rule 6 (expressions)

    expressionLineBreak  go to state 250


State 114

   19 expressionLineBreak: expressionLineBreak "end of line" •

    $default  reduce using rule 19 (expressionLineBreak)


State 115

   18 expressionLineBreak: expressionLineBreak "," •

    $default  reduce using rule 18 (expressionLineBreak)


State 116

   17 expressionLineBreak: expressionLineBreak ";" •

    $default  reduce using rule 17 (expressionLineBreak)


State 117

    2 program: expressionLineBreak expressions •

    $default  reduce using rule 2 (program)


State 118

    9 expressions: expression "line comment" •  ["end of file", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
   12 recursiveExpression: expression "line comment" • expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"  shift, and go to state 2
    ","            shift, and go to state 8
    ";"            shift, and go to state 9

    $default  reduce using rule 9 (expressions)

    expressionLineBreak  go to state 251


State 119

   13 recursiveExpression: expression expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", ")", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 114
    ","            shift, and go to state 115
    ";"            shift, and go to state 116

    $default  reduce using rule 13 (recursiveExpression)


State 120

   36 implicitFunctionCall: implicitFunctionCall implicitCallable •  ["end of file", "end of line", "%t or %T", "%f or %F", "$", ",", ";", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "string", "identifier", "integer", "float", "number", "path", "line comment"]
   46 implicitCallable: implicitCallable • "." "identifier"

    "."  shift, and go to state 248

    $default  reduce using rule 36 (implicitFunctionCall)


State 121

  141 operation: functionCall "'" •

    $default  reduce using rule 141 (operation)


State 122

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  171 listableBegin: ":" • variable
  172              | ":" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 252
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 253
    cell                       go to state 46
    matrix                     go to state 47


State 123

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  202         | functionCall "(" • functionArgs ")"
  203         | • functionCall "(" ")"
  203         | functionCall "(" • ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  263           | functionCall "(" • functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    ")"               shift, and go to state 254
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 255
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 124

  181 variable: functionCall "." • "identifier"
  182         | functionCall "." • keywords
  258 assignable: functionCall "." • "identifier"
  259           | functionCall "." • keywords
  399 keywords: • "if"
  400         | • "then"
  401         | • "else"
  402         | • "elseif"
  403         | • "end"
  404         | • "select"
  405         | • "switch"
  406         | • "otherwise"
  407         | • "case"
  408         | • "function"
  409         | • "endfunction"
  410         | • "for"
  411         | • "while"
  412         | • "do"
  413         | • "break"
  414         | • "try"
  415         | • "catch"
  416         | • "return"

    "if"           shift, and go to state 256
    "then"         shift, and go to state 257
    "else"         shift, and go to state 258
    "elseif"       shift, and go to state 259
    "end"          shift, and go to state 260
    "select"       shift, and go to state 261
    "switch"       shift, and go to state 262
    "case"         shift, and go to state 263
    "otherwise"    shift, and go to state 264
    "function"     shift, and go to state 265
    "endfunction"  shift, and go to state 266
    "for"          shift, and go to state 267
    "while"        shift, and go to state 268
    "do"           shift, and go to state 269
    "break"        shift, and go to state 270
    "try"          shift, and go to state 271
    "catch"        shift, and go to state 272
    "return"       shift, and go to state 273
    "identifier"   shift, and go to state 274

    keywords  go to state 275


State 125

  142 operation: functionCall ".'" •

    $default  reduce using rule 142 (operation)


State 126

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  143 rightOperand: "+" • variable
  144             | "+" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 276
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 277
    cell                       go to state 46
    matrix                     go to state 47


State 127

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  145 rightOperand: "-" • variable
  146             | "-" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 278
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 279
    cell                       go to state 46
    matrix                     go to state 47


State 128

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  147 rightOperand: "*" • variable
  148             | "*" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 280
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 281
    cell                       go to state 46
    matrix                     go to state 47


State 129

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  149 rightOperand: ".*" • variable
  150             | ".*" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 282
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 283
    cell                       go to state 46
    matrix                     go to state 47


State 130

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  151 rightOperand: ".*." • variable
  152             | ".*." • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 284
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 285
    cell                       go to state 46
    matrix                     go to state 47


State 131

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  153 rightOperand: "*." • variable
  154             | "*." • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 286
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 287
    cell                       go to state 46
    matrix                     go to state 47


State 132

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  155 rightOperand: "/" • variable
  156             | "/" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 288
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 289
    cell                       go to state 46
    matrix                     go to state 47


State 133

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  157 rightOperand: "./" • variable
  158             | "./" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 290
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 291
    cell                       go to state 46
    matrix                     go to state 47


State 134

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  161 rightOperand: "/." • variable
  162             | "/." • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 292
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 293
    cell                       go to state 46
    matrix                     go to state 47


State 135

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  159 rightOperand: "./." • variable
  160             | "./." • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 294
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 295
    cell                       go to state 46
    matrix                     go to state 47


State 136

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  163 rightOperand: "\\" • variable
  164             | "\\" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 296
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 297
    cell                       go to state 46
    matrix                     go to state 47


State 137

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  165 rightOperand: ".\\" • variable
  166             | ".\\" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 298
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 299
    cell                       go to state 46
    matrix                     go to state 47


State 138

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  169 rightOperand: "\\." • variable
  170             | "\\." • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 300
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 301
    cell                       go to state 46
    matrix                     go to state 47


State 139

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  167 rightOperand: ".\\." • variable
  168             | ".\\." • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 302
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 303
    cell                       go to state 46
    matrix                     go to state 47


State 140

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  133          | functionCall "** or ^" • variable
  134          | • functionCall "** or ^" functionCall
  134          | functionCall "** or ^" • functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 304
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 305
    cell                       go to state 46
    matrix                     go to state 47


State 141

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  137          | functionCall ".^" • variable
  138          | • functionCall ".^" functionCall
  138          | functionCall ".^" • functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 306
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 307
    cell                       go to state 46
    matrix                     go to state 47


State 142

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  107 rightComparable: "==" • variable
  108                | "==" • functionCall
  109                | "==" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 308
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 309
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 310
    cell                       go to state 46
    matrix                     go to state 47


State 143

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  110 rightComparable: "<> or ~=" • variable
  111                | "<> or ~=" • functionCall
  112                | "<> or ~=" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 311
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 312
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 313
    cell                       go to state 46
    matrix                     go to state 47


State 144

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  116 rightComparable: "<" • variable
  117                | "<" • functionCall
  118                | "<" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 314
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 315
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 316
    cell                       go to state 46
    matrix                     go to state 47


State 145

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  122 rightComparable: "<=" • variable
  123                | "<=" • functionCall
  124                | "<=" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 317
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 318
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 319
    cell                       go to state 46
    matrix                     go to state 47


State 146

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  113 rightComparable: ">" • variable
  114                | ">" • functionCall
  115                | ">" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 320
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 321
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 322
    cell                       go to state 46
    matrix                     go to state 47


State 147

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  119 rightComparable: ">=" • variable
  120                | ">=" • functionCall
  121                | ">=" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 323
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 324
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 325
    cell                       go to state 46
    matrix                     go to state 47


State 148

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
   95 rightComparable: "&" • variable
   96                | "&" • functionCall
   97                | "&" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 326
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 327
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 328
    cell                       go to state 46
    matrix                     go to state 47


State 149

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
   98 rightComparable: "&&" • variable
   99                | "&&" • functionCall
  100                | "&&" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 329
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 330
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 331
    cell                       go to state 46
    matrix                     go to state 47


State 150

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  101 rightComparable: "|" • variable
  102                | "|" • functionCall
  103                | "|" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 332
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 333
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 334
    cell                       go to state 46
    matrix                     go to state 47


State 151

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  104 rightComparable: "||" • variable
  105                | "||" • functionCall
  106                | "||" • ":"
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 335
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 336
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 337
    cell                       go to state 46
    matrix                     go to state 47


State 152

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  249 variableDeclaration: functionCall "=" • variable
  250                    | functionCall "=" • functionCall
  252                    | functionCall "=" • ":"
  254                    | functionCall "=" • returnControl
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 338
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 339
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 340
    cell                       go to state 46
    matrix                     go to state 47
    returnControl              go to state 341


State 153

   94 comparison: functionCall rightComparable •

    $default  reduce using rule 94 (comparison)


State 154

  126 operation: functionCall rightOperand •

    $default  reduce using rule 126 (operation)


State 155

  173 listableEnd: listableBegin • ":" variable
  174            | listableBegin • ":" functionCall
  175            | listableBegin •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "#", "$", ",", ";", "(", ")", "[", "]", "{", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    ":"  shift, and go to state 342

    $default  reduce using rule 175 (listableEnd)

    Conflict between rule 175 and token ":" resolved as shift (LISTABLE < ":").


State 156

  184 variable: functionCall listableEnd •

    $default  reduce using rule 184 (variable)


State 157

  139 operation: variable "'" •

    $default  reduce using rule 139 (operation)


State 158

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  201         | variable "(" • functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  262           | variable "(" • functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 343
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 159

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
  178 variable: variable "." • "identifier"
  179         | variable "." • keywords
  180         | variable "." • functionCall
  255 assignable: variable "." • "identifier"
  256           | variable "." • keywords
  257           | variable "." • functionCall
  399 keywords: • "if"
  400         | • "then"
  401         | • "else"
  402         | • "elseif"
  403         | • "end"
  404         | • "select"
  405         | • "switch"
  406         | • "otherwise"
  407         | • "case"
  408         | • "function"
  409         | • "endfunction"
  410         | • "for"
  411         | • "while"
  412         | • "do"
  413         | • "break"
  414         | • "try"
  415         | • "catch"
  416         | • "return"

    "("            shift, and go to state 344
    "if"           shift, and go to state 256
    "then"         shift, and go to state 257
    "else"         shift, and go to state 258
    "elseif"       shift, and go to state 259
    "end"          shift, and go to state 260
    "select"       shift, and go to state 261
    "switch"       shift, and go to state 262
    "case"         shift, and go to state 263
    "otherwise"    shift, and go to state 264
    "function"     shift, and go to state 265
    "endfunction"  shift, and go to state 266
    "for"          shift, and go to state 267
    "while"        shift, and go to state 268
    "do"           shift, and go to state 269
    "break"        shift, and go to state 270
    "try"          shift, and go to state 271
    "catch"        shift, and go to state 272
    "return"       shift, and go to state 273
    "identifier"   shift, and go to state 345

    functionCall        go to state 346
    simpleFunctionCall  go to state 40
    keywords            go to state 347


State 160

  140 operation: variable ".'" •

    $default  reduce using rule 140 (operation)


State 161

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  131          | variable "** or ^" • variable
  132          | • variable "** or ^" functionCall
  132          | variable "** or ^" • functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 348
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 349
    cell                       go to state 46
    matrix                     go to state 47


State 162

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  135          | variable ".^" • variable
  136          | • variable ".^" functionCall
  136          | variable ".^" • functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 350
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 351
    cell                       go to state 46
    matrix                     go to state 47


State 163

   93 comparison: variable rightComparable •

    $default  reduce using rule 93 (comparison)


State 164

  125 operation: variable rightOperand •

    $default  reduce using rule 125 (operation)


State 165

  183 variable: variable listableEnd •

    $default  reduce using rule 183 (variable)


State 166

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: assignable "=" • variable
  248                    | assignable "=" • functionCall
  251                    | assignable "=" • ":"
  253                    | assignable "=" • returnControl
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 352
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 353
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 354
    cell                       go to state 46
    matrix                     go to state 47
    returnControl              go to state 355


State 167

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  323 selectable: functionCall •  ["end of line", ",", ";", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 323 (selectable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 168

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  322 selectable: variable •  ["end of line", ",", ";", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 322 (selectable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 169

  309 selectControl: select selectable • selectConditionBreak casesControl "end"
  310              | select selectable • selectConditionBreak casesControl defaultCase elseBody "end"
  311              | select selectable • "line comment" selectConditionBreak casesControl "end"
  312              | select selectable • "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  324 selectConditionBreak: • "end of line"
  325                     | • "," "end of line"
  326                     | • ";" "end of line"
  327                     | • ","
  328                     | • ";"

    "end of line"   shift, and go to state 356
    ","             shift, and go to state 357
    ";"             shift, and go to state 358
    "line comment"  shift, and go to state 359

    selectConditionBreak  go to state 360


State 170

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  222       | "[" matrixOrCellColumns • "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 361
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 171

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  202         | functionCall "(" • functionArgs ")"
  203         | • functionCall "(" ")"
  203         | functionCall "(" • ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    ")"               shift, and go to state 254
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 362
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 172

  181 variable: functionCall "." • "identifier"
  182         | functionCall "." • keywords
  399 keywords: • "if"
  400         | • "then"
  401         | • "else"
  402         | • "elseif"
  403         | • "end"
  404         | • "select"
  405         | • "switch"
  406         | • "otherwise"
  407         | • "case"
  408         | • "function"
  409         | • "endfunction"
  410         | • "for"
  411         | • "while"
  412         | • "do"
  413         | • "break"
  414         | • "try"
  415         | • "catch"
  416         | • "return"

    "if"           shift, and go to state 256
    "then"         shift, and go to state 257
    "else"         shift, and go to state 258
    "elseif"       shift, and go to state 259
    "end"          shift, and go to state 260
    "select"       shift, and go to state 261
    "switch"       shift, and go to state 262
    "case"         shift, and go to state 263
    "otherwise"    shift, and go to state 264
    "function"     shift, and go to state 265
    "endfunction"  shift, and go to state 266
    "for"          shift, and go to state 267
    "while"        shift, and go to state 268
    "do"           shift, and go to state 269
    "break"        shift, and go to state 270
    "try"          shift, and go to state 271
    "catch"        shift, and go to state 272
    "return"       shift, and go to state 273
    "identifier"   shift, and go to state 363

    keywords  go to state 364


State 173

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  201         | variable "(" • functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 365
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 174

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
  178 variable: variable "." • "identifier"
  179         | variable "." • keywords
  180         | variable "." • functionCall
  399 keywords: • "if"
  400         | • "then"
  401         | • "else"
  402         | • "elseif"
  403         | • "end"
  404         | • "select"
  405         | • "switch"
  406         | • "otherwise"
  407         | • "case"
  408         | • "function"
  409         | • "endfunction"
  410         | • "for"
  411         | • "while"
  412         | • "do"
  413         | • "break"
  414         | • "try"
  415         | • "catch"
  416         | • "return"

    "("            shift, and go to state 344
    "if"           shift, and go to state 256
    "then"         shift, and go to state 257
    "else"         shift, and go to state 258
    "elseif"       shift, and go to state 259
    "end"          shift, and go to state 260
    "select"       shift, and go to state 261
    "switch"       shift, and go to state 262
    "case"         shift, and go to state 263
    "otherwise"    shift, and go to state 264
    "function"     shift, and go to state 265
    "endfunction"  shift, and go to state 266
    "for"          shift, and go to state 267
    "while"        shift, and go to state 268
    "do"           shift, and go to state 269
    "break"        shift, and go to state 270
    "try"          shift, and go to state 271
    "catch"        shift, and go to state 272
    "return"       shift, and go to state 273
    "identifier"   shift, and go to state 366

    functionCall        go to state 367
    simpleFunctionCall  go to state 40
    keywords            go to state 368


State 175

   80 functionDeclarationArguments: "(" ")" •

    $default  reduce using rule 80 (functionDeclarationArguments)


State 176

   83 idList: "identifier" •

    $default  reduce using rule 83 (idList)


State 177

   79 functionDeclarationArguments: "(" idList • ")"
   82 idList: idList • "," "identifier"

    ","  shift, and go to state 369
    ")"  shift, and go to state 370


State 178

   72 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" • "(" functionBody ")"
   73                          | "#" functionDeclarationArguments "->" • "end of line" "(" functionBody ")"
   74                          | "#" functionDeclarationArguments "->" • "(" "end of line" functionBody ")"
   75                          | "#" functionDeclarationArguments "->" • "end of line" "(" "end of line" functionBody ")"

    "end of line"  shift, and go to state 371
    "("            shift, and go to state 372


State 179

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  207 variableFields: functionCall "," • functionCall
  208               | functionCall "," • variable
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 373
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 374
    cell                       go to state 46
    matrix                     go to state 47


State 180

   49 functionCall: "(" functionCall ")" •

    $default  reduce using rule 49 (functionCall)


State 181

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  206 variableFields: variable "," • variable
  209               | variable "," • functionCall
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 375
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 376
    cell                       go to state 46
    matrix                     go to state 47


State 182

  198 variable: "(" variable ")" •

    $default  reduce using rule 198 (variable)


State 183

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  204 variableFields: variableFields "," • variable
  205               | variableFields "," • functionCall
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 377
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 378
    cell                       go to state 46
    matrix                     go to state 47


State 184

  199 variable: "(" variableFields ")" •

    $default  reduce using rule 199 (variable)


State 185

  224 matrix: "[" "end of line" "]" •

    $default  reduce using rule 224 (matrix)


State 186

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  219       | "[" "end of line" matrixOrCellLines • "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  221       | "[" "end of line" matrixOrCellLines • matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  226 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 379
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLine           go to state 189
    matrixOrCellColumns        go to state 380


State 187

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  223       | "[" "end of line" matrixOrCellColumns • "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 381
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 188

  218 matrix: "[" matrixOrCellLines "]" •

    $default  reduce using rule 218 (matrix)


State 189

  226 matrixOrCellLines: matrixOrCellLines matrixOrCellLine •

    $default  reduce using rule 226 (matrixOrCellLines)


State 190

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  220       | "[" matrixOrCellLines matrixOrCellColumns • "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 382
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 191

  229 matrixOrCellLineBreak: "end of line" •

    $default  reduce using rule 229 (matrixOrCellLineBreak)


State 192

  246 matrixOrCellColumnsBreak: "spaces" •

    $default  reduce using rule 246 (matrixOrCellColumnsBreak)


State 193

  245 matrixOrCellColumnsBreak: "," •

    $default  reduce using rule 245 (matrixOrCellColumnsBreak)


State 194

  228 matrixOrCellLineBreak: ";" •

    $default  reduce using rule 228 (matrixOrCellLineBreak)


State 195

  222 matrix: "[" matrixOrCellColumns "]" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  264 multipleResults: "[" matrixOrCellColumns "]" •  ["="]

    "="       reduce using rule 264 (multipleResults)
    $default  reduce using rule 222 (matrix)


State 196

  238 matrixOrCellColumns: matrixOrCellColumns "line comment" •

    $default  reduce using rule 238 (matrixOrCellColumns)


State 197

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  237 matrixOrCellColumns: matrixOrCellColumns functionCall •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 237 (matrixOrCellColumns)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 237 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 237 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 237 and token "-" resolved as shift (HIGHLEVEL < "-").


State 198

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  236 matrixOrCellColumns: matrixOrCellColumns variable •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 236 (matrixOrCellColumns)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 236 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 236 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 236 and token "-" resolved as shift (HIGHLEVEL < "-").


State 199

  230 matrixOrCellLineBreak: matrixOrCellLineBreak • "end of line"
  231                      | matrixOrCellLineBreak • ";"
  232 matrixOrCellLine: matrixOrCellColumns matrixOrCellLineBreak •  ["%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 383
    ";"            shift, and go to state 384

    $default  reduce using rule 232 (matrixOrCellLine)


State 200

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  233 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak • matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak • variable
  235                    | matrixOrCellColumns matrixOrCellColumnsBreak • functionCall
  239                    | matrixOrCellColumns matrixOrCellColumnsBreak • "line comment"
  243 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak • ","
  244                         | matrixOrCellColumnsBreak • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 385
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 386
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 387

    functionCall               go to state 388
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 389
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 390


State 201

  216 cell: "{" "end of line" "}" •

    $default  reduce using rule 216 (cell)


State 202

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  211     | "{" "end of line" matrixOrCellLines • "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  213     | "{" "end of line" matrixOrCellLines • matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  226 matrixOrCellLines: matrixOrCellLines • matrixOrCellLine
  232 matrixOrCellLine: • matrixOrCellColumns matrixOrCellLineBreak
  233                 | • matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: • matrixOrCellColumns matrixOrCellColumnsBreak variable
  235                    | • matrixOrCellColumns matrixOrCellColumnsBreak functionCall
  236                    | • matrixOrCellColumns variable
  237                    | • matrixOrCellColumns functionCall
  238                    | • matrixOrCellColumns "line comment"
  239                    | • matrixOrCellColumns matrixOrCellColumnsBreak "line comment"
  240                    | • variable
  241                    | • functionCall
  242                    | • "line comment"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 391
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 70

    functionCall               go to state 71
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 72
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLine           go to state 189
    matrixOrCellColumns        go to state 392


State 203

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  215     | "{" "end of line" matrixOrCellColumns • "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 393
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 204

  210 cell: "{" matrixOrCellLines "}" •

    $default  reduce using rule 210 (cell)


State 205

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  212     | "{" matrixOrCellLines matrixOrCellColumns • "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 394
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 206

  214 cell: "{" matrixOrCellColumns "}" •

    $default  reduce using rule 214 (cell)


State 207

  266 argumentsControl: "arguments" "end of line" "end" •

    $default  reduce using rule 266 (argumentsControl)


State 208

  273 argumentName: "identifier" •  ["end of line", "(", "{", "=", "identifier", "line comment"]
  274             | "identifier" • "." "identifier"

    "."  shift, and go to state 395

    $default  reduce using rule 273 (argumentName)


State 209

  270 argumentsDeclarations: "line comment" • "end of line"

    "end of line"  shift, and go to state 396


State 210

  265 argumentsControl: "arguments" "end of line" argumentsDeclarations • "end"
  267 argumentsDeclarations: argumentsDeclarations • argumentDeclaration lineEnd
  268                      | argumentsDeclarations • "line comment" "end of line"
  271 argumentDeclaration: • argumentName argumentDimension argumentValidators argumentDefaultValue
  272                    | • argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue
  273 argumentName: • "identifier"
  274             | • "identifier" "." "identifier"

    "end"           shift, and go to state 397
    "identifier"    shift, and go to state 208
    "line comment"  shift, and go to state 398

    argumentDeclaration  go to state 399
    argumentName         go to state 212


State 211

  269 argumentsDeclarations: argumentDeclaration • lineEnd
  397 lineEnd: • "end of line"
  398        | • "line comment" "end of line"

    "end of line"   shift, and go to state 400
    "line comment"  shift, and go to state 401

    lineEnd  go to state 402


State 212

  271 argumentDeclaration: argumentName • argumentDimension argumentValidators argumentDefaultValue
  272                    | argumentName • argumentDimension "identifier" argumentValidators argumentDefaultValue
  275 argumentDimension: • "(" functionArgs ")"
  276                  | ε •  ["end of line", "{", "=", "identifier", "line comment"]

    "("  shift, and go to state 403

    $default  reduce using rule 276 (argumentDimension)

    argumentDimension  go to state 404


State 213

  293 ifConditionBreak: "end of line" •

    $default  reduce using rule 293 (ifConditionBreak)


State 214

  291 ifConditionBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  292                 | "," • "end of line"

    "end of line"  shift, and go to state 405

    $default  reduce using rule 291 (ifConditionBreak)


State 215

  289 ifConditionBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  290                 | ";" • "end of line"

    "end of line"  shift, and go to state 406

    $default  reduce using rule 289 (ifConditionBreak)


State 216

  289 ifConditionBreak: • ";"
  290                 | • ";" "end of line"
  291                 | • ","
  292                 | • "," "end of line"
  293                 | • "end of line"
  294 then: "then" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  297     | "then" • ifConditionBreak

    "end of line"  shift, and go to state 213
    ","            shift, and go to state 214
    ";"            shift, and go to state 215

    $default  reduce using rule 294 (then)

    ifConditionBreak  go to state 407


State 217

  295 then: ifConditionBreak • "then"
  296     | ifConditionBreak • "then" "end of line"
  298     | ifConditionBreak •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "then"  shift, and go to state 408

    $default  reduce using rule 298 (then)


State 218

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  282          | "if" condition then • thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  283          | "if" condition then • thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  284          | "if" condition then • thenBody elseIfControl "end"
  285 thenBody: • expressions
  286         | ε •  ["else", "elseif", "end"]
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"    reduce using rule 286 (thenBody)
    "elseif"  reduce using rule 286 (thenBody)
    "end"     reduce using rule 286 (thenBody)

    expressions                go to state 409
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    thenBody                   go to state 410
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 219

   70 functionDeclaration: "function" "[" "]" • "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "="  shift, and go to state 411


State 220

   69 functionDeclaration: "function" "[" functionDeclarationReturns • "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "]"  shift, and go to state 412


State 221

   78 functionDeclarationReturns: idList •  ["]"]
   82 idList: idList • "," "identifier"

    ","  shift, and go to state 369

    $default  reduce using rule 78 (functionDeclarationReturns)


State 222

   68 functionDeclaration: "function" "identifier" "=" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "identifier"  shift, and go to state 413


State 223

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   84 functionDeclarationBreak: • lineEnd
   85                         | • ";"
   86                         | • ";" "end of line"
   87                         | • ","
   88                         | • "," "end of line"
  397 lineEnd: • "end of line"
  398        | • "line comment" "end of line"

    "end of line"   shift, and go to state 400
    ","             shift, and go to state 414
    ";"             shift, and go to state 415
    "line comment"  shift, and go to state 401

    functionDeclarationBreak  go to state 416
    lineEnd                   go to state 417


State 224

  350 forControl: "for" "(" "identifier" • "=" forIterator ")" forConditionBreak forBody "end"

    "="  shift, and go to state 418


State 225

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  349 forControl: "for" "identifier" "=" • forIterator forConditionBreak forBody "end"
  351 forIterator: • functionCall
  352            | • variable

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 419
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 420
    cell                       go to state 46
    matrix                     go to state 47
    forIterator                go to state 421


State 226

  375 whileConditionBreak: "end of line" •

    $default  reduce using rule 375 (whileConditionBreak)


State 227

  366 whileConditionBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  376                    | "," • "end of line"

    "end of line"  shift, and go to state 422

    $default  reduce using rule 366 (whileConditionBreak)


State 228

  367 whileConditionBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  377                    | ";" • "end of line"

    "end of line"  shift, and go to state 423

    $default  reduce using rule 367 (whileConditionBreak)


State 229

  371 whileConditionBreak: "then" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  372                    | "then" • ","
  373                    | "then" • ";"
  381                    | "then" • "end of line"
  382                    | "then" • "," "end of line"
  383                    | "then" • ";" "end of line"

    "end of line"  shift, and go to state 424
    ","            shift, and go to state 425
    ";"            shift, and go to state 426

    $default  reduce using rule 371 (whileConditionBreak)


State 230

  368 whileConditionBreak: "do" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  369                    | "do" • ","
  370                    | "do" • ";"
  378                    | "do" • "end of line"
  379                    | "do" • "," "end of line"
  380                    | "do" • ";" "end of line"

    "end of line"  shift, and go to state 427
    ","            shift, and go to state 428
    ";"            shift, and go to state 429

    $default  reduce using rule 368 (whileConditionBreak)


State 231

  374 whileConditionBreak: "line comment" • "end of line"

    "end of line"  shift, and go to state 430


State 232

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  363             | "while" condition whileConditionBreak • whileBody "end"
  364 whileBody: • expressions
  365          | ε •  ["end"]
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 365 (whileBody)

    expressions                go to state 431
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    whileBody                  go to state 432
    tryControl                 go to state 57
    returnControl              go to state 58


State 233

  387 catchBody: "end of line" expressions •

    $default  reduce using rule 387 (catchBody)


State 234

  389 catchBody: "," expressions •

    $default  reduce using rule 389 (catchBody)


State 235

  388 catchBody: ";" expressions •

    $default  reduce using rule 388 (catchBody)


State 236

  385 tryControl: "try" catchBody "end" •

    $default  reduce using rule 385 (tryControl)


State 237

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  384           | "try" catchBody "catch" • catchBody "end"
  385           | • "try" catchBody "end"
  386 catchBody: • expressions
  387          | • "end of line" expressions
  388          | • ";" expressions
  389          | • "," expressions
  390          | • "end of line"
  391          | ε •  ["end"]
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 93
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 94
    ";"               shift, and go to state 95
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 391 (catchBody)

    expressions                go to state 96
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    catchBody                  go to state 433
    returnControl              go to state 58


State 238

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   58 functionArgs: "," •  [",", ")", "}"]
   59             | "," • variable
   60             | "," • functionCall
   61             | "," • ":"
   62             | "," • variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 434
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    $default  reduce using rule 58 (functionArgs)

    functionCall               go to state 435
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 436
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 437
    assignable                 go to state 49
    multipleResults            go to state 50


State 239

   56 functionArgs: ":" •

    $default  reduce using rule 56 (functionArgs)


State 240

   52 simpleFunctionCall: "identifier" "(" ")" •

    $default  reduce using rule 52 (simpleFunctionCall)


State 241

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  189 variable: "identifier" •  ["'", ",", ":", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||"]
  260 assignable: "identifier" •  ["="]

    "("  shift, and go to state 103
    "{"  shift, and go to state 104

    "="       reduce using rule 260 (assignable)
    $default  reduce using rule 189 (variable)

    Conflict between rule 189 and token "(" resolved as shift (LISTABLE < "(").


State 242

   55 functionArgs: functionCall •  [",", ")", "}"]
   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  249 variableDeclaration: functionCall • "=" variable
  250                    | functionCall • "=" functionCall
  252                    | functionCall • "=" ":"
  254                    | functionCall • "=" returnControl
  258 assignable: functionCall • "." "identifier"
  259           | functionCall • "." keywords
  263           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 123
    "."         shift, and go to state 124
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151
    "="         shift, and go to state 152

    $default  reduce using rule 55 (functionArgs)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 243

   50 simpleFunctionCall: "identifier" "(" functionArgs • ")"
   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration

    ","  shift, and go to state 438
    ")"  shift, and go to state 439


State 244

   54 functionArgs: variable •  [",", ")", "}"]
   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  255 assignable: variable • "." "identifier"
  256           | variable • "." keywords
  257           | variable • "." functionCall
  262           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 158
    "."         shift, and go to state 159
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 54 (functionArgs)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 245

   57 functionArgs: variableDeclaration •

    $default  reduce using rule 57 (functionArgs)


State 246

   53 simpleFunctionCall: "identifier" "{" "}" •

    $default  reduce using rule 53 (simpleFunctionCall)


State 247

   51 simpleFunctionCall: "identifier" "{" functionArgs • "}"
   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration

    ","  shift, and go to state 438
    "}"  shift, and go to state 440


State 248

   46 implicitCallable: implicitCallable "." • "identifier"

    "identifier"  shift, and go to state 441


State 249

    7 expressions: recursiveExpression expression "line comment" •  ["end of file", ")", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch"]
   11 recursiveExpression: recursiveExpression expression "line comment" • expressionLineBreak
   14 expressionLineBreak: • ";"
   15                    | • ","
   16                    | • "end of line"
   17                    | • expressionLineBreak ";"
   18                    | • expressionLineBreak ","
   19                    | • expressionLineBreak "end of line"

    "end of line"  shift, and go to state 2
    ","            shift, and go to state 8
    ";"            shift, and go to state 9

    $default  reduce using rule 7 (expressions)

    expressionLineBreak  go to state 442


State 250

   10 recursiveExpression: recursiveExpression expression expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", ")", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 114
    ","            shift, and go to state 115
    ";"            shift, and go to state 116

    $default  reduce using rule 10 (recursiveExpression)


State 251

   12 recursiveExpression: expression "line comment" expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", ")", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 114
    ","            shift, and go to state 115
    ";"            shift, and go to state 116

    $default  reduce using rule 12 (recursiveExpression)


State 252

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  172              | ":" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 172 (listableBegin)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 172 and token "'" resolved as shift (":" < "'").
    Conflict between rule 172 and token ":" resolved as reduce (%left ":").
    Conflict between rule 172 and token "(" resolved as shift (":" < "(").
    Conflict between rule 172 and token "." resolved as shift (":" < ".").
    Conflict between rule 172 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 172 and token "+" resolved as shift (":" < "+").
    Conflict between rule 172 and token "-" resolved as shift (":" < "-").
    Conflict between rule 172 and token "*" resolved as shift (":" < "*").
    Conflict between rule 172 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 172 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 172 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 172 and token "/" resolved as shift (":" < "/").
    Conflict between rule 172 and token "./" resolved as shift (":" < "./").
    Conflict between rule 172 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 172 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 172 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 172 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 172 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 172 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 172 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 172 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 172 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 172 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 172 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 172 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 172 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 172 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 172 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 172 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 172 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 172 and token "||" resolved as reduce ("||" < ":").


State 253

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  171              | ":" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 171 (listableBegin)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 171 and token "'" resolved as shift (":" < "'").
    Conflict between rule 171 and token ":" resolved as reduce (%left ":").
    Conflict between rule 171 and token "(" resolved as shift (":" < "(").
    Conflict between rule 171 and token "." resolved as shift (":" < ".").
    Conflict between rule 171 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 171 and token "+" resolved as shift (":" < "+").
    Conflict between rule 171 and token "-" resolved as shift (":" < "-").
    Conflict between rule 171 and token "*" resolved as shift (":" < "*").
    Conflict between rule 171 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 171 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 171 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 171 and token "/" resolved as shift (":" < "/").
    Conflict between rule 171 and token "./" resolved as shift (":" < "./").
    Conflict between rule 171 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 171 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 171 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 171 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 171 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 171 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 171 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 171 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 171 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 171 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 171 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 171 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 171 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 171 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 171 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 171 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 171 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 171 and token "||" resolved as reduce ("||" < ":").


State 254

  203 variable: functionCall "(" ")" •

    $default  reduce using rule 203 (variable)


State 255

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  202 variable: functionCall "(" functionArgs • ")"
  263 assignable: functionCall "(" functionArgs • ")"

    ","  shift, and go to state 438
    ")"  shift, and go to state 443


State 256

  399 keywords: "if" •

    $default  reduce using rule 399 (keywords)


State 257

  400 keywords: "then" •

    $default  reduce using rule 400 (keywords)


State 258

  401 keywords: "else" •

    $default  reduce using rule 401 (keywords)


State 259

  402 keywords: "elseif" •

    $default  reduce using rule 402 (keywords)


State 260

  403 keywords: "end" •

    $default  reduce using rule 403 (keywords)


State 261

  404 keywords: "select" •

    $default  reduce using rule 404 (keywords)


State 262

  405 keywords: "switch" •

    $default  reduce using rule 405 (keywords)


State 263

  407 keywords: "case" •

    $default  reduce using rule 407 (keywords)


State 264

  406 keywords: "otherwise" •

    $default  reduce using rule 406 (keywords)


State 265

  408 keywords: "function" •

    $default  reduce using rule 408 (keywords)


State 266

  409 keywords: "endfunction" •

    $default  reduce using rule 409 (keywords)


State 267

  410 keywords: "for" •

    $default  reduce using rule 410 (keywords)


State 268

  411 keywords: "while" •

    $default  reduce using rule 411 (keywords)


State 269

  412 keywords: "do" •

    $default  reduce using rule 412 (keywords)


State 270

  413 keywords: "break" •

    $default  reduce using rule 413 (keywords)


State 271

  414 keywords: "try" •

    $default  reduce using rule 414 (keywords)


State 272

  415 keywords: "catch" •

    $default  reduce using rule 415 (keywords)


State 273

  416 keywords: "return" •

    $default  reduce using rule 416 (keywords)


State 274

  181 variable: functionCall "." "identifier" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  258 assignable: functionCall "." "identifier" •  ["="]

    "="       reduce using rule 258 (assignable)
    $default  reduce using rule 181 (variable)


State 275

  182 variable: functionCall "." keywords •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  259 assignable: functionCall "." keywords •  ["="]

    "="       reduce using rule 259 (assignable)
    $default  reduce using rule 182 (variable)


State 276

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  144             | "+" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 144 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 144 and token "'" resolved as shift ("+" < "'").
    Conflict between rule 144 and token ":" resolved as reduce (":" < "+").
    Conflict between rule 144 and token "(" resolved as shift ("+" < "(").
    Conflict between rule 144 and token "." resolved as shift ("+" < ".").
    Conflict between rule 144 and token ".'" resolved as shift ("+" < ".'").
    Conflict between rule 144 and token "+" resolved as reduce (%left "+").
    Conflict between rule 144 and token "-" resolved as reduce (%left "-").
    Conflict between rule 144 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 144 and token ".*" resolved as shift ("+" < ".*").
    Conflict between rule 144 and token ".*." resolved as shift ("+" < ".*.").
    Conflict between rule 144 and token "*." resolved as shift ("+" < "*.").
    Conflict between rule 144 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 144 and token "./" resolved as shift ("+" < "./").
    Conflict between rule 144 and token "/." resolved as shift ("+" < "/.").
    Conflict between rule 144 and token "./." resolved as shift ("+" < "./.").
    Conflict between rule 144 and token "\\" resolved as shift ("+" < "\\").
    Conflict between rule 144 and token ".\\" resolved as shift ("+" < ".\\").
    Conflict between rule 144 and token "\\." resolved as shift ("+" < "\\.").
    Conflict between rule 144 and token ".\\." resolved as shift ("+" < ".\\.").
    Conflict between rule 144 and token "** or ^" resolved as shift ("+" < "** or ^").
    Conflict between rule 144 and token ".^" resolved as shift ("+" < ".^").
    Conflict between rule 144 and token "==" resolved as reduce ("==" < "+").
    Conflict between rule 144 and token "<> or ~=" resolved as reduce ("<> or ~=" < "+").
    Conflict between rule 144 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 144 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 144 and token ">" resolved as reduce (">" < "+").
    Conflict between rule 144 and token ">=" resolved as reduce (">=" < "+").
    Conflict between rule 144 and token "&" resolved as reduce ("&" < "+").
    Conflict between rule 144 and token "&&" resolved as reduce ("&&" < "+").
    Conflict between rule 144 and token "|" resolved as reduce ("|" < "+").
    Conflict between rule 144 and token "||" resolved as reduce ("||" < "+").


State 277

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  143             | "+" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 143 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 143 and token "'" resolved as shift ("+" < "'").
    Conflict between rule 143 and token ":" resolved as reduce (":" < "+").
    Conflict between rule 143 and token "(" resolved as shift ("+" < "(").
    Conflict between rule 143 and token "." resolved as shift ("+" < ".").
    Conflict between rule 143 and token ".'" resolved as shift ("+" < ".'").
    Conflict between rule 143 and token "+" resolved as reduce (%left "+").
    Conflict between rule 143 and token "-" resolved as reduce (%left "-").
    Conflict between rule 143 and token "*" resolved as shift ("+" < "*").
    Conflict between rule 143 and token ".*" resolved as shift ("+" < ".*").
    Conflict between rule 143 and token ".*." resolved as shift ("+" < ".*.").
    Conflict between rule 143 and token "*." resolved as shift ("+" < "*.").
    Conflict between rule 143 and token "/" resolved as shift ("+" < "/").
    Conflict between rule 143 and token "./" resolved as shift ("+" < "./").
    Conflict between rule 143 and token "/." resolved as shift ("+" < "/.").
    Conflict between rule 143 and token "./." resolved as shift ("+" < "./.").
    Conflict between rule 143 and token "\\" resolved as shift ("+" < "\\").
    Conflict between rule 143 and token ".\\" resolved as shift ("+" < ".\\").
    Conflict between rule 143 and token "\\." resolved as shift ("+" < "\\.").
    Conflict between rule 143 and token ".\\." resolved as shift ("+" < ".\\.").
    Conflict between rule 143 and token "** or ^" resolved as shift ("+" < "** or ^").
    Conflict between rule 143 and token ".^" resolved as shift ("+" < ".^").
    Conflict between rule 143 and token "==" resolved as reduce ("==" < "+").
    Conflict between rule 143 and token "<> or ~=" resolved as reduce ("<> or ~=" < "+").
    Conflict between rule 143 and token "<" resolved as reduce ("<" < "+").
    Conflict between rule 143 and token "<=" resolved as reduce ("<=" < "+").
    Conflict between rule 143 and token ">" resolved as reduce (">" < "+").
    Conflict between rule 143 and token ">=" resolved as reduce (">=" < "+").
    Conflict between rule 143 and token "&" resolved as reduce ("&" < "+").
    Conflict between rule 143 and token "&&" resolved as reduce ("&&" < "+").
    Conflict between rule 143 and token "|" resolved as reduce ("|" < "+").
    Conflict between rule 143 and token "||" resolved as reduce ("||" < "+").


State 278

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  146             | "-" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 146 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 146 and token "'" resolved as shift ("-" < "'").
    Conflict between rule 146 and token ":" resolved as reduce (":" < "-").
    Conflict between rule 146 and token "(" resolved as shift ("-" < "(").
    Conflict between rule 146 and token "." resolved as shift ("-" < ".").
    Conflict between rule 146 and token ".'" resolved as shift ("-" < ".'").
    Conflict between rule 146 and token "+" resolved as reduce (%left "+").
    Conflict between rule 146 and token "-" resolved as reduce (%left "-").
    Conflict between rule 146 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 146 and token ".*" resolved as shift ("-" < ".*").
    Conflict between rule 146 and token ".*." resolved as shift ("-" < ".*.").
    Conflict between rule 146 and token "*." resolved as shift ("-" < "*.").
    Conflict between rule 146 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 146 and token "./" resolved as shift ("-" < "./").
    Conflict between rule 146 and token "/." resolved as shift ("-" < "/.").
    Conflict between rule 146 and token "./." resolved as shift ("-" < "./.").
    Conflict between rule 146 and token "\\" resolved as shift ("-" < "\\").
    Conflict between rule 146 and token ".\\" resolved as shift ("-" < ".\\").
    Conflict between rule 146 and token "\\." resolved as shift ("-" < "\\.").
    Conflict between rule 146 and token ".\\." resolved as shift ("-" < ".\\.").
    Conflict between rule 146 and token "** or ^" resolved as shift ("-" < "** or ^").
    Conflict between rule 146 and token ".^" resolved as shift ("-" < ".^").
    Conflict between rule 146 and token "==" resolved as reduce ("==" < "-").
    Conflict between rule 146 and token "<> or ~=" resolved as reduce ("<> or ~=" < "-").
    Conflict between rule 146 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 146 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 146 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 146 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 146 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 146 and token "&&" resolved as reduce ("&&" < "-").
    Conflict between rule 146 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 146 and token "||" resolved as reduce ("||" < "-").


State 279

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  145             | "-" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 145 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 145 and token "'" resolved as shift ("-" < "'").
    Conflict between rule 145 and token ":" resolved as reduce (":" < "-").
    Conflict between rule 145 and token "(" resolved as shift ("-" < "(").
    Conflict between rule 145 and token "." resolved as shift ("-" < ".").
    Conflict between rule 145 and token ".'" resolved as shift ("-" < ".'").
    Conflict between rule 145 and token "+" resolved as reduce (%left "+").
    Conflict between rule 145 and token "-" resolved as reduce (%left "-").
    Conflict between rule 145 and token "*" resolved as shift ("-" < "*").
    Conflict between rule 145 and token ".*" resolved as shift ("-" < ".*").
    Conflict between rule 145 and token ".*." resolved as shift ("-" < ".*.").
    Conflict between rule 145 and token "*." resolved as shift ("-" < "*.").
    Conflict between rule 145 and token "/" resolved as shift ("-" < "/").
    Conflict between rule 145 and token "./" resolved as shift ("-" < "./").
    Conflict between rule 145 and token "/." resolved as shift ("-" < "/.").
    Conflict between rule 145 and token "./." resolved as shift ("-" < "./.").
    Conflict between rule 145 and token "\\" resolved as shift ("-" < "\\").
    Conflict between rule 145 and token ".\\" resolved as shift ("-" < ".\\").
    Conflict between rule 145 and token "\\." resolved as shift ("-" < "\\.").
    Conflict between rule 145 and token ".\\." resolved as shift ("-" < ".\\.").
    Conflict between rule 145 and token "** or ^" resolved as shift ("-" < "** or ^").
    Conflict between rule 145 and token ".^" resolved as shift ("-" < ".^").
    Conflict between rule 145 and token "==" resolved as reduce ("==" < "-").
    Conflict between rule 145 and token "<> or ~=" resolved as reduce ("<> or ~=" < "-").
    Conflict between rule 145 and token "<" resolved as reduce ("<" < "-").
    Conflict between rule 145 and token "<=" resolved as reduce ("<=" < "-").
    Conflict between rule 145 and token ">" resolved as reduce (">" < "-").
    Conflict between rule 145 and token ">=" resolved as reduce (">=" < "-").
    Conflict between rule 145 and token "&" resolved as reduce ("&" < "-").
    Conflict between rule 145 and token "&&" resolved as reduce ("&&" < "-").
    Conflict between rule 145 and token "|" resolved as reduce ("|" < "-").
    Conflict between rule 145 and token "||" resolved as reduce ("||" < "-").


State 280

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  148             | "*" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 148 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 148 and token "'" resolved as shift ("*" < "'").
    Conflict between rule 148 and token ":" resolved as reduce (":" < "*").
    Conflict between rule 148 and token "(" resolved as shift ("*" < "(").
    Conflict between rule 148 and token "." resolved as shift ("*" < ".").
    Conflict between rule 148 and token ".'" resolved as shift ("*" < ".'").
    Conflict between rule 148 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 148 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 148 and token "*" resolved as reduce (%left "*").
    Conflict between rule 148 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 148 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 148 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 148 and token "/" resolved as reduce (%left "/").
    Conflict between rule 148 and token "./" resolved as reduce (%left "./").
    Conflict between rule 148 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 148 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 148 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 148 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 148 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 148 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 148 and token "** or ^" resolved as shift ("*" < "** or ^").
    Conflict between rule 148 and token ".^" resolved as shift ("*" < ".^").
    Conflict between rule 148 and token "==" resolved as reduce ("==" < "*").
    Conflict between rule 148 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*").
    Conflict between rule 148 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 148 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 148 and token ">" resolved as reduce (">" < "*").
    Conflict between rule 148 and token ">=" resolved as reduce (">=" < "*").
    Conflict between rule 148 and token "&" resolved as reduce ("&" < "*").
    Conflict between rule 148 and token "&&" resolved as reduce ("&&" < "*").
    Conflict between rule 148 and token "|" resolved as reduce ("|" < "*").
    Conflict between rule 148 and token "||" resolved as reduce ("||" < "*").


State 281

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  147             | "*" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 147 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 147 and token "'" resolved as shift ("*" < "'").
    Conflict between rule 147 and token ":" resolved as reduce (":" < "*").
    Conflict between rule 147 and token "(" resolved as shift ("*" < "(").
    Conflict between rule 147 and token "." resolved as shift ("*" < ".").
    Conflict between rule 147 and token ".'" resolved as shift ("*" < ".'").
    Conflict between rule 147 and token "+" resolved as reduce ("+" < "*").
    Conflict between rule 147 and token "-" resolved as reduce ("-" < "*").
    Conflict between rule 147 and token "*" resolved as reduce (%left "*").
    Conflict between rule 147 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 147 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 147 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 147 and token "/" resolved as reduce (%left "/").
    Conflict between rule 147 and token "./" resolved as reduce (%left "./").
    Conflict between rule 147 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 147 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 147 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 147 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 147 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 147 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 147 and token "** or ^" resolved as shift ("*" < "** or ^").
    Conflict between rule 147 and token ".^" resolved as shift ("*" < ".^").
    Conflict between rule 147 and token "==" resolved as reduce ("==" < "*").
    Conflict between rule 147 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*").
    Conflict between rule 147 and token "<" resolved as reduce ("<" < "*").
    Conflict between rule 147 and token "<=" resolved as reduce ("<=" < "*").
    Conflict between rule 147 and token ">" resolved as reduce (">" < "*").
    Conflict between rule 147 and token ">=" resolved as reduce (">=" < "*").
    Conflict between rule 147 and token "&" resolved as reduce ("&" < "*").
    Conflict between rule 147 and token "&&" resolved as reduce ("&&" < "*").
    Conflict between rule 147 and token "|" resolved as reduce ("|" < "*").
    Conflict between rule 147 and token "||" resolved as reduce ("||" < "*").


State 282

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  150             | ".*" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 150 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 150 and token "'" resolved as shift (".*" < "'").
    Conflict between rule 150 and token ":" resolved as reduce (":" < ".*").
    Conflict between rule 150 and token "(" resolved as shift (".*" < "(").
    Conflict between rule 150 and token "." resolved as shift (".*" < ".").
    Conflict between rule 150 and token ".'" resolved as shift (".*" < ".'").
    Conflict between rule 150 and token "+" resolved as reduce ("+" < ".*").
    Conflict between rule 150 and token "-" resolved as reduce ("-" < ".*").
    Conflict between rule 150 and token "*" resolved as reduce (%left "*").
    Conflict between rule 150 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 150 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 150 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 150 and token "/" resolved as reduce (%left "/").
    Conflict between rule 150 and token "./" resolved as reduce (%left "./").
    Conflict between rule 150 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 150 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 150 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 150 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 150 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 150 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 150 and token "** or ^" resolved as shift (".*" < "** or ^").
    Conflict between rule 150 and token ".^" resolved as shift (".*" < ".^").
    Conflict between rule 150 and token "==" resolved as reduce ("==" < ".*").
    Conflict between rule 150 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*").
    Conflict between rule 150 and token "<" resolved as reduce ("<" < ".*").
    Conflict between rule 150 and token "<=" resolved as reduce ("<=" < ".*").
    Conflict between rule 150 and token ">" resolved as reduce (">" < ".*").
    Conflict between rule 150 and token ">=" resolved as reduce (">=" < ".*").
    Conflict between rule 150 and token "&" resolved as reduce ("&" < ".*").
    Conflict between rule 150 and token "&&" resolved as reduce ("&&" < ".*").
    Conflict between rule 150 and token "|" resolved as reduce ("|" < ".*").
    Conflict between rule 150 and token "||" resolved as reduce ("||" < ".*").


State 283

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  149             | ".*" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 149 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 149 and token "'" resolved as shift (".*" < "'").
    Conflict between rule 149 and token ":" resolved as reduce (":" < ".*").
    Conflict between rule 149 and token "(" resolved as shift (".*" < "(").
    Conflict between rule 149 and token "." resolved as shift (".*" < ".").
    Conflict between rule 149 and token ".'" resolved as shift (".*" < ".'").
    Conflict between rule 149 and token "+" resolved as reduce ("+" < ".*").
    Conflict between rule 149 and token "-" resolved as reduce ("-" < ".*").
    Conflict between rule 149 and token "*" resolved as reduce (%left "*").
    Conflict between rule 149 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 149 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 149 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 149 and token "/" resolved as reduce (%left "/").
    Conflict between rule 149 and token "./" resolved as reduce (%left "./").
    Conflict between rule 149 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 149 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 149 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 149 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 149 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 149 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 149 and token "** or ^" resolved as shift (".*" < "** or ^").
    Conflict between rule 149 and token ".^" resolved as shift (".*" < ".^").
    Conflict between rule 149 and token "==" resolved as reduce ("==" < ".*").
    Conflict between rule 149 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*").
    Conflict between rule 149 and token "<" resolved as reduce ("<" < ".*").
    Conflict between rule 149 and token "<=" resolved as reduce ("<=" < ".*").
    Conflict between rule 149 and token ">" resolved as reduce (">" < ".*").
    Conflict between rule 149 and token ">=" resolved as reduce (">=" < ".*").
    Conflict between rule 149 and token "&" resolved as reduce ("&" < ".*").
    Conflict between rule 149 and token "&&" resolved as reduce ("&&" < ".*").
    Conflict between rule 149 and token "|" resolved as reduce ("|" < ".*").
    Conflict between rule 149 and token "||" resolved as reduce ("||" < ".*").


State 284

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  152             | ".*." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 152 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 152 and token "'" resolved as shift (".*." < "'").
    Conflict between rule 152 and token ":" resolved as reduce (":" < ".*.").
    Conflict between rule 152 and token "(" resolved as shift (".*." < "(").
    Conflict between rule 152 and token "." resolved as shift (".*." < ".").
    Conflict between rule 152 and token ".'" resolved as shift (".*." < ".'").
    Conflict between rule 152 and token "+" resolved as reduce ("+" < ".*.").
    Conflict between rule 152 and token "-" resolved as reduce ("-" < ".*.").
    Conflict between rule 152 and token "*" resolved as reduce (%left "*").
    Conflict between rule 152 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 152 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 152 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 152 and token "/" resolved as reduce (%left "/").
    Conflict between rule 152 and token "./" resolved as reduce (%left "./").
    Conflict between rule 152 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 152 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 152 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 152 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 152 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 152 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 152 and token "** or ^" resolved as shift (".*." < "** or ^").
    Conflict between rule 152 and token ".^" resolved as shift (".*." < ".^").
    Conflict between rule 152 and token "==" resolved as reduce ("==" < ".*.").
    Conflict between rule 152 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*.").
    Conflict between rule 152 and token "<" resolved as reduce ("<" < ".*.").
    Conflict between rule 152 and token "<=" resolved as reduce ("<=" < ".*.").
    Conflict between rule 152 and token ">" resolved as reduce (">" < ".*.").
    Conflict between rule 152 and token ">=" resolved as reduce (">=" < ".*.").
    Conflict between rule 152 and token "&" resolved as reduce ("&" < ".*.").
    Conflict between rule 152 and token "&&" resolved as reduce ("&&" < ".*.").
    Conflict between rule 152 and token "|" resolved as reduce ("|" < ".*.").
    Conflict between rule 152 and token "||" resolved as reduce ("||" < ".*.").


State 285

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  151             | ".*." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 151 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 151 and token "'" resolved as shift (".*." < "'").
    Conflict between rule 151 and token ":" resolved as reduce (":" < ".*.").
    Conflict between rule 151 and token "(" resolved as shift (".*." < "(").
    Conflict between rule 151 and token "." resolved as shift (".*." < ".").
    Conflict between rule 151 and token ".'" resolved as shift (".*." < ".'").
    Conflict between rule 151 and token "+" resolved as reduce ("+" < ".*.").
    Conflict between rule 151 and token "-" resolved as reduce ("-" < ".*.").
    Conflict between rule 151 and token "*" resolved as reduce (%left "*").
    Conflict between rule 151 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 151 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 151 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 151 and token "/" resolved as reduce (%left "/").
    Conflict between rule 151 and token "./" resolved as reduce (%left "./").
    Conflict between rule 151 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 151 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 151 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 151 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 151 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 151 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 151 and token "** or ^" resolved as shift (".*." < "** or ^").
    Conflict between rule 151 and token ".^" resolved as shift (".*." < ".^").
    Conflict between rule 151 and token "==" resolved as reduce ("==" < ".*.").
    Conflict between rule 151 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".*.").
    Conflict between rule 151 and token "<" resolved as reduce ("<" < ".*.").
    Conflict between rule 151 and token "<=" resolved as reduce ("<=" < ".*.").
    Conflict between rule 151 and token ">" resolved as reduce (">" < ".*.").
    Conflict between rule 151 and token ">=" resolved as reduce (">=" < ".*.").
    Conflict between rule 151 and token "&" resolved as reduce ("&" < ".*.").
    Conflict between rule 151 and token "&&" resolved as reduce ("&&" < ".*.").
    Conflict between rule 151 and token "|" resolved as reduce ("|" < ".*.").
    Conflict between rule 151 and token "||" resolved as reduce ("||" < ".*.").


State 286

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  154             | "*." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 154 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 154 and token "'" resolved as shift ("*." < "'").
    Conflict between rule 154 and token ":" resolved as reduce (":" < "*.").
    Conflict between rule 154 and token "(" resolved as shift ("*." < "(").
    Conflict between rule 154 and token "." resolved as shift ("*." < ".").
    Conflict between rule 154 and token ".'" resolved as shift ("*." < ".'").
    Conflict between rule 154 and token "+" resolved as reduce ("+" < "*.").
    Conflict between rule 154 and token "-" resolved as reduce ("-" < "*.").
    Conflict between rule 154 and token "*" resolved as reduce (%left "*").
    Conflict between rule 154 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 154 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 154 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 154 and token "/" resolved as reduce (%left "/").
    Conflict between rule 154 and token "./" resolved as reduce (%left "./").
    Conflict between rule 154 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 154 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 154 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 154 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 154 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 154 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 154 and token "** or ^" resolved as shift ("*." < "** or ^").
    Conflict between rule 154 and token ".^" resolved as shift ("*." < ".^").
    Conflict between rule 154 and token "==" resolved as reduce ("==" < "*.").
    Conflict between rule 154 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*.").
    Conflict between rule 154 and token "<" resolved as reduce ("<" < "*.").
    Conflict between rule 154 and token "<=" resolved as reduce ("<=" < "*.").
    Conflict between rule 154 and token ">" resolved as reduce (">" < "*.").
    Conflict between rule 154 and token ">=" resolved as reduce (">=" < "*.").
    Conflict between rule 154 and token "&" resolved as reduce ("&" < "*.").
    Conflict between rule 154 and token "&&" resolved as reduce ("&&" < "*.").
    Conflict between rule 154 and token "|" resolved as reduce ("|" < "*.").
    Conflict between rule 154 and token "||" resolved as reduce ("||" < "*.").


State 287

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  153             | "*." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 153 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 153 and token "'" resolved as shift ("*." < "'").
    Conflict between rule 153 and token ":" resolved as reduce (":" < "*.").
    Conflict between rule 153 and token "(" resolved as shift ("*." < "(").
    Conflict between rule 153 and token "." resolved as shift ("*." < ".").
    Conflict between rule 153 and token ".'" resolved as shift ("*." < ".'").
    Conflict between rule 153 and token "+" resolved as reduce ("+" < "*.").
    Conflict between rule 153 and token "-" resolved as reduce ("-" < "*.").
    Conflict between rule 153 and token "*" resolved as reduce (%left "*").
    Conflict between rule 153 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 153 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 153 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 153 and token "/" resolved as reduce (%left "/").
    Conflict between rule 153 and token "./" resolved as reduce (%left "./").
    Conflict between rule 153 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 153 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 153 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 153 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 153 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 153 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 153 and token "** or ^" resolved as shift ("*." < "** or ^").
    Conflict between rule 153 and token ".^" resolved as shift ("*." < ".^").
    Conflict between rule 153 and token "==" resolved as reduce ("==" < "*.").
    Conflict between rule 153 and token "<> or ~=" resolved as reduce ("<> or ~=" < "*.").
    Conflict between rule 153 and token "<" resolved as reduce ("<" < "*.").
    Conflict between rule 153 and token "<=" resolved as reduce ("<=" < "*.").
    Conflict between rule 153 and token ">" resolved as reduce (">" < "*.").
    Conflict between rule 153 and token ">=" resolved as reduce (">=" < "*.").
    Conflict between rule 153 and token "&" resolved as reduce ("&" < "*.").
    Conflict between rule 153 and token "&&" resolved as reduce ("&&" < "*.").
    Conflict between rule 153 and token "|" resolved as reduce ("|" < "*.").
    Conflict between rule 153 and token "||" resolved as reduce ("||" < "*.").


State 288

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  156             | "/" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 156 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 156 and token "'" resolved as shift ("/" < "'").
    Conflict between rule 156 and token ":" resolved as reduce (":" < "/").
    Conflict between rule 156 and token "(" resolved as shift ("/" < "(").
    Conflict between rule 156 and token "." resolved as shift ("/" < ".").
    Conflict between rule 156 and token ".'" resolved as shift ("/" < ".'").
    Conflict between rule 156 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 156 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 156 and token "*" resolved as reduce (%left "*").
    Conflict between rule 156 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 156 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 156 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 156 and token "/" resolved as reduce (%left "/").
    Conflict between rule 156 and token "./" resolved as reduce (%left "./").
    Conflict between rule 156 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 156 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 156 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 156 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 156 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 156 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 156 and token "** or ^" resolved as shift ("/" < "** or ^").
    Conflict between rule 156 and token ".^" resolved as shift ("/" < ".^").
    Conflict between rule 156 and token "==" resolved as reduce ("==" < "/").
    Conflict between rule 156 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/").
    Conflict between rule 156 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 156 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 156 and token ">" resolved as reduce (">" < "/").
    Conflict between rule 156 and token ">=" resolved as reduce (">=" < "/").
    Conflict between rule 156 and token "&" resolved as reduce ("&" < "/").
    Conflict between rule 156 and token "&&" resolved as reduce ("&&" < "/").
    Conflict between rule 156 and token "|" resolved as reduce ("|" < "/").
    Conflict between rule 156 and token "||" resolved as reduce ("||" < "/").


State 289

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  155             | "/" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 155 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 155 and token "'" resolved as shift ("/" < "'").
    Conflict between rule 155 and token ":" resolved as reduce (":" < "/").
    Conflict between rule 155 and token "(" resolved as shift ("/" < "(").
    Conflict between rule 155 and token "." resolved as shift ("/" < ".").
    Conflict between rule 155 and token ".'" resolved as shift ("/" < ".'").
    Conflict between rule 155 and token "+" resolved as reduce ("+" < "/").
    Conflict between rule 155 and token "-" resolved as reduce ("-" < "/").
    Conflict between rule 155 and token "*" resolved as reduce (%left "*").
    Conflict between rule 155 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 155 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 155 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 155 and token "/" resolved as reduce (%left "/").
    Conflict between rule 155 and token "./" resolved as reduce (%left "./").
    Conflict between rule 155 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 155 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 155 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 155 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 155 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 155 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 155 and token "** or ^" resolved as shift ("/" < "** or ^").
    Conflict between rule 155 and token ".^" resolved as shift ("/" < ".^").
    Conflict between rule 155 and token "==" resolved as reduce ("==" < "/").
    Conflict between rule 155 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/").
    Conflict between rule 155 and token "<" resolved as reduce ("<" < "/").
    Conflict between rule 155 and token "<=" resolved as reduce ("<=" < "/").
    Conflict between rule 155 and token ">" resolved as reduce (">" < "/").
    Conflict between rule 155 and token ">=" resolved as reduce (">=" < "/").
    Conflict between rule 155 and token "&" resolved as reduce ("&" < "/").
    Conflict between rule 155 and token "&&" resolved as reduce ("&&" < "/").
    Conflict between rule 155 and token "|" resolved as reduce ("|" < "/").
    Conflict between rule 155 and token "||" resolved as reduce ("||" < "/").


State 290

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  158             | "./" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 158 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 158 and token "'" resolved as shift ("./" < "'").
    Conflict between rule 158 and token ":" resolved as reduce (":" < "./").
    Conflict between rule 158 and token "(" resolved as shift ("./" < "(").
    Conflict between rule 158 and token "." resolved as shift ("./" < ".").
    Conflict between rule 158 and token ".'" resolved as shift ("./" < ".'").
    Conflict between rule 158 and token "+" resolved as reduce ("+" < "./").
    Conflict between rule 158 and token "-" resolved as reduce ("-" < "./").
    Conflict between rule 158 and token "*" resolved as reduce (%left "*").
    Conflict between rule 158 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 158 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 158 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 158 and token "/" resolved as reduce (%left "/").
    Conflict between rule 158 and token "./" resolved as reduce (%left "./").
    Conflict between rule 158 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 158 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 158 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 158 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 158 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 158 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 158 and token "** or ^" resolved as shift ("./" < "** or ^").
    Conflict between rule 158 and token ".^" resolved as shift ("./" < ".^").
    Conflict between rule 158 and token "==" resolved as reduce ("==" < "./").
    Conflict between rule 158 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./").
    Conflict between rule 158 and token "<" resolved as reduce ("<" < "./").
    Conflict between rule 158 and token "<=" resolved as reduce ("<=" < "./").
    Conflict between rule 158 and token ">" resolved as reduce (">" < "./").
    Conflict between rule 158 and token ">=" resolved as reduce (">=" < "./").
    Conflict between rule 158 and token "&" resolved as reduce ("&" < "./").
    Conflict between rule 158 and token "&&" resolved as reduce ("&&" < "./").
    Conflict between rule 158 and token "|" resolved as reduce ("|" < "./").
    Conflict between rule 158 and token "||" resolved as reduce ("||" < "./").


State 291

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  157             | "./" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 157 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 157 and token "'" resolved as shift ("./" < "'").
    Conflict between rule 157 and token ":" resolved as reduce (":" < "./").
    Conflict between rule 157 and token "(" resolved as shift ("./" < "(").
    Conflict between rule 157 and token "." resolved as shift ("./" < ".").
    Conflict between rule 157 and token ".'" resolved as shift ("./" < ".'").
    Conflict between rule 157 and token "+" resolved as reduce ("+" < "./").
    Conflict between rule 157 and token "-" resolved as reduce ("-" < "./").
    Conflict between rule 157 and token "*" resolved as reduce (%left "*").
    Conflict between rule 157 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 157 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 157 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 157 and token "/" resolved as reduce (%left "/").
    Conflict between rule 157 and token "./" resolved as reduce (%left "./").
    Conflict between rule 157 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 157 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 157 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 157 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 157 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 157 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 157 and token "** or ^" resolved as shift ("./" < "** or ^").
    Conflict between rule 157 and token ".^" resolved as shift ("./" < ".^").
    Conflict between rule 157 and token "==" resolved as reduce ("==" < "./").
    Conflict between rule 157 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./").
    Conflict between rule 157 and token "<" resolved as reduce ("<" < "./").
    Conflict between rule 157 and token "<=" resolved as reduce ("<=" < "./").
    Conflict between rule 157 and token ">" resolved as reduce (">" < "./").
    Conflict between rule 157 and token ">=" resolved as reduce (">=" < "./").
    Conflict between rule 157 and token "&" resolved as reduce ("&" < "./").
    Conflict between rule 157 and token "&&" resolved as reduce ("&&" < "./").
    Conflict between rule 157 and token "|" resolved as reduce ("|" < "./").
    Conflict between rule 157 and token "||" resolved as reduce ("||" < "./").


State 292

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  162             | "/." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 162 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 162 and token "'" resolved as shift ("/." < "'").
    Conflict between rule 162 and token ":" resolved as reduce (":" < "/.").
    Conflict between rule 162 and token "(" resolved as shift ("/." < "(").
    Conflict between rule 162 and token "." resolved as shift ("/." < ".").
    Conflict between rule 162 and token ".'" resolved as shift ("/." < ".'").
    Conflict between rule 162 and token "+" resolved as reduce ("+" < "/.").
    Conflict between rule 162 and token "-" resolved as reduce ("-" < "/.").
    Conflict between rule 162 and token "*" resolved as reduce (%left "*").
    Conflict between rule 162 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 162 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 162 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 162 and token "/" resolved as reduce (%left "/").
    Conflict between rule 162 and token "./" resolved as reduce (%left "./").
    Conflict between rule 162 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 162 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 162 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 162 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 162 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 162 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 162 and token "** or ^" resolved as shift ("/." < "** or ^").
    Conflict between rule 162 and token ".^" resolved as shift ("/." < ".^").
    Conflict between rule 162 and token "==" resolved as reduce ("==" < "/.").
    Conflict between rule 162 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/.").
    Conflict between rule 162 and token "<" resolved as reduce ("<" < "/.").
    Conflict between rule 162 and token "<=" resolved as reduce ("<=" < "/.").
    Conflict between rule 162 and token ">" resolved as reduce (">" < "/.").
    Conflict between rule 162 and token ">=" resolved as reduce (">=" < "/.").
    Conflict between rule 162 and token "&" resolved as reduce ("&" < "/.").
    Conflict between rule 162 and token "&&" resolved as reduce ("&&" < "/.").
    Conflict between rule 162 and token "|" resolved as reduce ("|" < "/.").
    Conflict between rule 162 and token "||" resolved as reduce ("||" < "/.").


State 293

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  161             | "/." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 161 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 161 and token "'" resolved as shift ("/." < "'").
    Conflict between rule 161 and token ":" resolved as reduce (":" < "/.").
    Conflict between rule 161 and token "(" resolved as shift ("/." < "(").
    Conflict between rule 161 and token "." resolved as shift ("/." < ".").
    Conflict between rule 161 and token ".'" resolved as shift ("/." < ".'").
    Conflict between rule 161 and token "+" resolved as reduce ("+" < "/.").
    Conflict between rule 161 and token "-" resolved as reduce ("-" < "/.").
    Conflict between rule 161 and token "*" resolved as reduce (%left "*").
    Conflict between rule 161 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 161 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 161 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 161 and token "/" resolved as reduce (%left "/").
    Conflict between rule 161 and token "./" resolved as reduce (%left "./").
    Conflict between rule 161 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 161 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 161 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 161 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 161 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 161 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 161 and token "** or ^" resolved as shift ("/." < "** or ^").
    Conflict between rule 161 and token ".^" resolved as shift ("/." < ".^").
    Conflict between rule 161 and token "==" resolved as reduce ("==" < "/.").
    Conflict between rule 161 and token "<> or ~=" resolved as reduce ("<> or ~=" < "/.").
    Conflict between rule 161 and token "<" resolved as reduce ("<" < "/.").
    Conflict between rule 161 and token "<=" resolved as reduce ("<=" < "/.").
    Conflict between rule 161 and token ">" resolved as reduce (">" < "/.").
    Conflict between rule 161 and token ">=" resolved as reduce (">=" < "/.").
    Conflict between rule 161 and token "&" resolved as reduce ("&" < "/.").
    Conflict between rule 161 and token "&&" resolved as reduce ("&&" < "/.").
    Conflict between rule 161 and token "|" resolved as reduce ("|" < "/.").
    Conflict between rule 161 and token "||" resolved as reduce ("||" < "/.").


State 294

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  160             | "./." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 160 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 160 and token "'" resolved as shift ("./." < "'").
    Conflict between rule 160 and token ":" resolved as reduce (":" < "./.").
    Conflict between rule 160 and token "(" resolved as shift ("./." < "(").
    Conflict between rule 160 and token "." resolved as shift ("./." < ".").
    Conflict between rule 160 and token ".'" resolved as shift ("./." < ".'").
    Conflict between rule 160 and token "+" resolved as reduce ("+" < "./.").
    Conflict between rule 160 and token "-" resolved as reduce ("-" < "./.").
    Conflict between rule 160 and token "*" resolved as reduce (%left "*").
    Conflict between rule 160 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 160 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 160 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 160 and token "/" resolved as reduce (%left "/").
    Conflict between rule 160 and token "./" resolved as reduce (%left "./").
    Conflict between rule 160 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 160 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 160 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 160 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 160 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 160 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 160 and token "** or ^" resolved as shift ("./." < "** or ^").
    Conflict between rule 160 and token ".^" resolved as shift ("./." < ".^").
    Conflict between rule 160 and token "==" resolved as reduce ("==" < "./.").
    Conflict between rule 160 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./.").
    Conflict between rule 160 and token "<" resolved as reduce ("<" < "./.").
    Conflict between rule 160 and token "<=" resolved as reduce ("<=" < "./.").
    Conflict between rule 160 and token ">" resolved as reduce (">" < "./.").
    Conflict between rule 160 and token ">=" resolved as reduce (">=" < "./.").
    Conflict between rule 160 and token "&" resolved as reduce ("&" < "./.").
    Conflict between rule 160 and token "&&" resolved as reduce ("&&" < "./.").
    Conflict between rule 160 and token "|" resolved as reduce ("|" < "./.").
    Conflict between rule 160 and token "||" resolved as reduce ("||" < "./.").


State 295

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  159             | "./." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 159 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 159 and token "'" resolved as shift ("./." < "'").
    Conflict between rule 159 and token ":" resolved as reduce (":" < "./.").
    Conflict between rule 159 and token "(" resolved as shift ("./." < "(").
    Conflict between rule 159 and token "." resolved as shift ("./." < ".").
    Conflict between rule 159 and token ".'" resolved as shift ("./." < ".'").
    Conflict between rule 159 and token "+" resolved as reduce ("+" < "./.").
    Conflict between rule 159 and token "-" resolved as reduce ("-" < "./.").
    Conflict between rule 159 and token "*" resolved as reduce (%left "*").
    Conflict between rule 159 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 159 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 159 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 159 and token "/" resolved as reduce (%left "/").
    Conflict between rule 159 and token "./" resolved as reduce (%left "./").
    Conflict between rule 159 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 159 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 159 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 159 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 159 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 159 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 159 and token "** or ^" resolved as shift ("./." < "** or ^").
    Conflict between rule 159 and token ".^" resolved as shift ("./." < ".^").
    Conflict between rule 159 and token "==" resolved as reduce ("==" < "./.").
    Conflict between rule 159 and token "<> or ~=" resolved as reduce ("<> or ~=" < "./.").
    Conflict between rule 159 and token "<" resolved as reduce ("<" < "./.").
    Conflict between rule 159 and token "<=" resolved as reduce ("<=" < "./.").
    Conflict between rule 159 and token ">" resolved as reduce (">" < "./.").
    Conflict between rule 159 and token ">=" resolved as reduce (">=" < "./.").
    Conflict between rule 159 and token "&" resolved as reduce ("&" < "./.").
    Conflict between rule 159 and token "&&" resolved as reduce ("&&" < "./.").
    Conflict between rule 159 and token "|" resolved as reduce ("|" < "./.").
    Conflict between rule 159 and token "||" resolved as reduce ("||" < "./.").


State 296

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  164             | "\\" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 164 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 164 and token "'" resolved as shift ("\\" < "'").
    Conflict between rule 164 and token ":" resolved as reduce (":" < "\\").
    Conflict between rule 164 and token "(" resolved as shift ("\\" < "(").
    Conflict between rule 164 and token "." resolved as shift ("\\" < ".").
    Conflict between rule 164 and token ".'" resolved as shift ("\\" < ".'").
    Conflict between rule 164 and token "+" resolved as reduce ("+" < "\\").
    Conflict between rule 164 and token "-" resolved as reduce ("-" < "\\").
    Conflict between rule 164 and token "*" resolved as reduce (%left "*").
    Conflict between rule 164 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 164 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 164 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 164 and token "/" resolved as reduce (%left "/").
    Conflict between rule 164 and token "./" resolved as reduce (%left "./").
    Conflict between rule 164 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 164 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 164 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 164 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 164 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 164 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 164 and token "** or ^" resolved as shift ("\\" < "** or ^").
    Conflict between rule 164 and token ".^" resolved as shift ("\\" < ".^").
    Conflict between rule 164 and token "==" resolved as reduce ("==" < "\\").
    Conflict between rule 164 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\").
    Conflict between rule 164 and token "<" resolved as reduce ("<" < "\\").
    Conflict between rule 164 and token "<=" resolved as reduce ("<=" < "\\").
    Conflict between rule 164 and token ">" resolved as reduce (">" < "\\").
    Conflict between rule 164 and token ">=" resolved as reduce (">=" < "\\").
    Conflict between rule 164 and token "&" resolved as reduce ("&" < "\\").
    Conflict between rule 164 and token "&&" resolved as reduce ("&&" < "\\").
    Conflict between rule 164 and token "|" resolved as reduce ("|" < "\\").
    Conflict between rule 164 and token "||" resolved as reduce ("||" < "\\").


State 297

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  163             | "\\" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 163 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 163 and token "'" resolved as shift ("\\" < "'").
    Conflict between rule 163 and token ":" resolved as reduce (":" < "\\").
    Conflict between rule 163 and token "(" resolved as shift ("\\" < "(").
    Conflict between rule 163 and token "." resolved as shift ("\\" < ".").
    Conflict between rule 163 and token ".'" resolved as shift ("\\" < ".'").
    Conflict between rule 163 and token "+" resolved as reduce ("+" < "\\").
    Conflict between rule 163 and token "-" resolved as reduce ("-" < "\\").
    Conflict between rule 163 and token "*" resolved as reduce (%left "*").
    Conflict between rule 163 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 163 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 163 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 163 and token "/" resolved as reduce (%left "/").
    Conflict between rule 163 and token "./" resolved as reduce (%left "./").
    Conflict between rule 163 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 163 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 163 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 163 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 163 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 163 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 163 and token "** or ^" resolved as shift ("\\" < "** or ^").
    Conflict between rule 163 and token ".^" resolved as shift ("\\" < ".^").
    Conflict between rule 163 and token "==" resolved as reduce ("==" < "\\").
    Conflict between rule 163 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\").
    Conflict between rule 163 and token "<" resolved as reduce ("<" < "\\").
    Conflict between rule 163 and token "<=" resolved as reduce ("<=" < "\\").
    Conflict between rule 163 and token ">" resolved as reduce (">" < "\\").
    Conflict between rule 163 and token ">=" resolved as reduce (">=" < "\\").
    Conflict between rule 163 and token "&" resolved as reduce ("&" < "\\").
    Conflict between rule 163 and token "&&" resolved as reduce ("&&" < "\\").
    Conflict between rule 163 and token "|" resolved as reduce ("|" < "\\").
    Conflict between rule 163 and token "||" resolved as reduce ("||" < "\\").


State 298

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  166             | ".\\" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 166 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 166 and token "'" resolved as shift (".\\" < "'").
    Conflict between rule 166 and token ":" resolved as reduce (":" < ".\\").
    Conflict between rule 166 and token "(" resolved as shift (".\\" < "(").
    Conflict between rule 166 and token "." resolved as shift (".\\" < ".").
    Conflict between rule 166 and token ".'" resolved as shift (".\\" < ".'").
    Conflict between rule 166 and token "+" resolved as reduce ("+" < ".\\").
    Conflict between rule 166 and token "-" resolved as reduce ("-" < ".\\").
    Conflict between rule 166 and token "*" resolved as reduce (%left "*").
    Conflict between rule 166 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 166 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 166 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 166 and token "/" resolved as reduce (%left "/").
    Conflict between rule 166 and token "./" resolved as reduce (%left "./").
    Conflict between rule 166 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 166 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 166 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 166 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 166 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 166 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 166 and token "** or ^" resolved as shift (".\\" < "** or ^").
    Conflict between rule 166 and token ".^" resolved as shift (".\\" < ".^").
    Conflict between rule 166 and token "==" resolved as reduce ("==" < ".\\").
    Conflict between rule 166 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\").
    Conflict between rule 166 and token "<" resolved as reduce ("<" < ".\\").
    Conflict between rule 166 and token "<=" resolved as reduce ("<=" < ".\\").
    Conflict between rule 166 and token ">" resolved as reduce (">" < ".\\").
    Conflict between rule 166 and token ">=" resolved as reduce (">=" < ".\\").
    Conflict between rule 166 and token "&" resolved as reduce ("&" < ".\\").
    Conflict between rule 166 and token "&&" resolved as reduce ("&&" < ".\\").
    Conflict between rule 166 and token "|" resolved as reduce ("|" < ".\\").
    Conflict between rule 166 and token "||" resolved as reduce ("||" < ".\\").


State 299

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  165             | ".\\" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 165 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 165 and token "'" resolved as shift (".\\" < "'").
    Conflict between rule 165 and token ":" resolved as reduce (":" < ".\\").
    Conflict between rule 165 and token "(" resolved as shift (".\\" < "(").
    Conflict between rule 165 and token "." resolved as shift (".\\" < ".").
    Conflict between rule 165 and token ".'" resolved as shift (".\\" < ".'").
    Conflict between rule 165 and token "+" resolved as reduce ("+" < ".\\").
    Conflict between rule 165 and token "-" resolved as reduce ("-" < ".\\").
    Conflict between rule 165 and token "*" resolved as reduce (%left "*").
    Conflict between rule 165 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 165 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 165 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 165 and token "/" resolved as reduce (%left "/").
    Conflict between rule 165 and token "./" resolved as reduce (%left "./").
    Conflict between rule 165 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 165 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 165 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 165 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 165 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 165 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 165 and token "** or ^" resolved as shift (".\\" < "** or ^").
    Conflict between rule 165 and token ".^" resolved as shift (".\\" < ".^").
    Conflict between rule 165 and token "==" resolved as reduce ("==" < ".\\").
    Conflict between rule 165 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\").
    Conflict between rule 165 and token "<" resolved as reduce ("<" < ".\\").
    Conflict between rule 165 and token "<=" resolved as reduce ("<=" < ".\\").
    Conflict between rule 165 and token ">" resolved as reduce (">" < ".\\").
    Conflict between rule 165 and token ">=" resolved as reduce (">=" < ".\\").
    Conflict between rule 165 and token "&" resolved as reduce ("&" < ".\\").
    Conflict between rule 165 and token "&&" resolved as reduce ("&&" < ".\\").
    Conflict between rule 165 and token "|" resolved as reduce ("|" < ".\\").
    Conflict between rule 165 and token "||" resolved as reduce ("||" < ".\\").


State 300

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  170             | "\\." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 170 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 170 and token "'" resolved as shift ("\\." < "'").
    Conflict between rule 170 and token ":" resolved as reduce (":" < "\\.").
    Conflict between rule 170 and token "(" resolved as shift ("\\." < "(").
    Conflict between rule 170 and token "." resolved as shift ("\\." < ".").
    Conflict between rule 170 and token ".'" resolved as shift ("\\." < ".'").
    Conflict between rule 170 and token "+" resolved as reduce ("+" < "\\.").
    Conflict between rule 170 and token "-" resolved as reduce ("-" < "\\.").
    Conflict between rule 170 and token "*" resolved as reduce (%left "*").
    Conflict between rule 170 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 170 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 170 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 170 and token "/" resolved as reduce (%left "/").
    Conflict between rule 170 and token "./" resolved as reduce (%left "./").
    Conflict between rule 170 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 170 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 170 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 170 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 170 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 170 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 170 and token "** or ^" resolved as shift ("\\." < "** or ^").
    Conflict between rule 170 and token ".^" resolved as shift ("\\." < ".^").
    Conflict between rule 170 and token "==" resolved as reduce ("==" < "\\.").
    Conflict between rule 170 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\.").
    Conflict between rule 170 and token "<" resolved as reduce ("<" < "\\.").
    Conflict between rule 170 and token "<=" resolved as reduce ("<=" < "\\.").
    Conflict between rule 170 and token ">" resolved as reduce (">" < "\\.").
    Conflict between rule 170 and token ">=" resolved as reduce (">=" < "\\.").
    Conflict between rule 170 and token "&" resolved as reduce ("&" < "\\.").
    Conflict between rule 170 and token "&&" resolved as reduce ("&&" < "\\.").
    Conflict between rule 170 and token "|" resolved as reduce ("|" < "\\.").
    Conflict between rule 170 and token "||" resolved as reduce ("||" < "\\.").


State 301

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  169             | "\\." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 169 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 169 and token "'" resolved as shift ("\\." < "'").
    Conflict between rule 169 and token ":" resolved as reduce (":" < "\\.").
    Conflict between rule 169 and token "(" resolved as shift ("\\." < "(").
    Conflict between rule 169 and token "." resolved as shift ("\\." < ".").
    Conflict between rule 169 and token ".'" resolved as shift ("\\." < ".'").
    Conflict between rule 169 and token "+" resolved as reduce ("+" < "\\.").
    Conflict between rule 169 and token "-" resolved as reduce ("-" < "\\.").
    Conflict between rule 169 and token "*" resolved as reduce (%left "*").
    Conflict between rule 169 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 169 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 169 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 169 and token "/" resolved as reduce (%left "/").
    Conflict between rule 169 and token "./" resolved as reduce (%left "./").
    Conflict between rule 169 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 169 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 169 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 169 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 169 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 169 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 169 and token "** or ^" resolved as shift ("\\." < "** or ^").
    Conflict between rule 169 and token ".^" resolved as shift ("\\." < ".^").
    Conflict between rule 169 and token "==" resolved as reduce ("==" < "\\.").
    Conflict between rule 169 and token "<> or ~=" resolved as reduce ("<> or ~=" < "\\.").
    Conflict between rule 169 and token "<" resolved as reduce ("<" < "\\.").
    Conflict between rule 169 and token "<=" resolved as reduce ("<=" < "\\.").
    Conflict between rule 169 and token ">" resolved as reduce (">" < "\\.").
    Conflict between rule 169 and token ">=" resolved as reduce (">=" < "\\.").
    Conflict between rule 169 and token "&" resolved as reduce ("&" < "\\.").
    Conflict between rule 169 and token "&&" resolved as reduce ("&&" < "\\.").
    Conflict between rule 169 and token "|" resolved as reduce ("|" < "\\.").
    Conflict between rule 169 and token "||" resolved as reduce ("||" < "\\.").


State 302

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  168             | ".\\." functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 168 (rightOperand)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 168 and token "'" resolved as shift (".\\." < "'").
    Conflict between rule 168 and token ":" resolved as reduce (":" < ".\\.").
    Conflict between rule 168 and token "(" resolved as shift (".\\." < "(").
    Conflict between rule 168 and token "." resolved as shift (".\\." < ".").
    Conflict between rule 168 and token ".'" resolved as shift (".\\." < ".'").
    Conflict between rule 168 and token "+" resolved as reduce ("+" < ".\\.").
    Conflict between rule 168 and token "-" resolved as reduce ("-" < ".\\.").
    Conflict between rule 168 and token "*" resolved as reduce (%left "*").
    Conflict between rule 168 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 168 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 168 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 168 and token "/" resolved as reduce (%left "/").
    Conflict between rule 168 and token "./" resolved as reduce (%left "./").
    Conflict between rule 168 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 168 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 168 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 168 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 168 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 168 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 168 and token "** or ^" resolved as shift (".\\." < "** or ^").
    Conflict between rule 168 and token ".^" resolved as shift (".\\." < ".^").
    Conflict between rule 168 and token "==" resolved as reduce ("==" < ".\\.").
    Conflict between rule 168 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\.").
    Conflict between rule 168 and token "<" resolved as reduce ("<" < ".\\.").
    Conflict between rule 168 and token "<=" resolved as reduce ("<=" < ".\\.").
    Conflict between rule 168 and token ">" resolved as reduce (">" < ".\\.").
    Conflict between rule 168 and token ">=" resolved as reduce (">=" < ".\\.").
    Conflict between rule 168 and token "&" resolved as reduce ("&" < ".\\.").
    Conflict between rule 168 and token "&&" resolved as reduce ("&&" < ".\\.").
    Conflict between rule 168 and token "|" resolved as reduce ("|" < ".\\.").
    Conflict between rule 168 and token "||" resolved as reduce ("||" < ".\\.").


State 303

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  167             | ".\\." variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 167 (rightOperand)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 167 and token "'" resolved as shift (".\\." < "'").
    Conflict between rule 167 and token ":" resolved as reduce (":" < ".\\.").
    Conflict between rule 167 and token "(" resolved as shift (".\\." < "(").
    Conflict between rule 167 and token "." resolved as shift (".\\." < ".").
    Conflict between rule 167 and token ".'" resolved as shift (".\\." < ".'").
    Conflict between rule 167 and token "+" resolved as reduce ("+" < ".\\.").
    Conflict between rule 167 and token "-" resolved as reduce ("-" < ".\\.").
    Conflict between rule 167 and token "*" resolved as reduce (%left "*").
    Conflict between rule 167 and token ".*" resolved as reduce (%left ".*").
    Conflict between rule 167 and token ".*." resolved as reduce (%left ".*.").
    Conflict between rule 167 and token "*." resolved as reduce (%left "*.").
    Conflict between rule 167 and token "/" resolved as reduce (%left "/").
    Conflict between rule 167 and token "./" resolved as reduce (%left "./").
    Conflict between rule 167 and token "/." resolved as reduce (%left "/.").
    Conflict between rule 167 and token "./." resolved as reduce (%left "./.").
    Conflict between rule 167 and token "\\" resolved as reduce (%left "\\").
    Conflict between rule 167 and token ".\\" resolved as reduce (%left ".\\").
    Conflict between rule 167 and token "\\." resolved as reduce (%left "\\.").
    Conflict between rule 167 and token ".\\." resolved as reduce (%left ".\\.").
    Conflict between rule 167 and token "** or ^" resolved as shift (".\\." < "** or ^").
    Conflict between rule 167 and token ".^" resolved as shift (".\\." < ".^").
    Conflict between rule 167 and token "==" resolved as reduce ("==" < ".\\.").
    Conflict between rule 167 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".\\.").
    Conflict between rule 167 and token "<" resolved as reduce ("<" < ".\\.").
    Conflict between rule 167 and token "<=" resolved as reduce ("<=" < ".\\.").
    Conflict between rule 167 and token ">" resolved as reduce (">" < ".\\.").
    Conflict between rule 167 and token ">=" resolved as reduce (">=" < ".\\.").
    Conflict between rule 167 and token "&" resolved as reduce ("&" < ".\\.").
    Conflict between rule 167 and token "&&" resolved as reduce ("&&" < ".\\.").
    Conflict between rule 167 and token "|" resolved as reduce ("|" < ".\\.").
    Conflict between rule 167 and token "||" resolved as reduce ("||" < ".\\.").


State 304

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  134          | functionCall "** or ^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 134 (operation)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 134 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 134 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 134 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 134 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 134 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 134 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 134 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 134 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 134 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 134 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 134 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 134 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 134 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 134 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 134 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 134 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 134 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 134 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 134 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 134 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 134 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 134 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 134 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 134 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 134 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 134 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 134 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 134 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 134 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 134 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 134 and token "||" resolved as reduce ("||" < "** or ^").


State 305

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  133          | functionCall "** or ^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 133 (operation)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 133 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 133 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 133 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 133 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 133 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 133 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 133 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 133 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 133 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 133 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 133 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 133 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 133 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 133 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 133 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 133 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 133 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 133 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 133 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 133 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 133 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 133 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 133 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 133 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 133 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 133 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 133 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 133 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 133 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 133 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 133 and token "||" resolved as reduce ("||" < "** or ^").


State 306

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  138          | functionCall ".^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 138 (operation)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 138 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 138 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 138 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 138 and token "." resolved as shift (".^" < ".").
    Conflict between rule 138 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 138 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 138 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 138 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 138 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 138 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 138 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 138 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 138 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 138 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 138 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 138 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 138 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 138 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 138 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 138 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 138 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 138 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 138 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 138 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 138 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 138 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 138 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 138 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 138 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 138 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 138 and token "||" resolved as reduce ("||" < ".^").


State 307

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  137          | functionCall ".^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 137 (operation)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 137 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 137 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 137 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 137 and token "." resolved as shift (".^" < ".").
    Conflict between rule 137 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 137 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 137 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 137 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 137 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 137 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 137 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 137 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 137 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 137 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 137 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 137 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 137 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 137 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 137 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 137 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 137 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 137 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 137 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 137 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 137 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 137 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 137 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 137 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 137 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 137 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 137 and token "||" resolved as reduce ("||" < ".^").


State 308

  109 rightComparable: "==" ":" •

    $default  reduce using rule 109 (rightComparable)


State 309

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  108                | "==" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    ":"        shift, and go to state 122
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 108 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 108 and token "'" resolved as shift ("==" < "'").
    Conflict between rule 108 and token ":" resolved as shift ("==" < ":").
    Conflict between rule 108 and token "(" resolved as shift ("==" < "(").
    Conflict between rule 108 and token "." resolved as shift ("==" < ".").
    Conflict between rule 108 and token ".'" resolved as shift ("==" < ".'").
    Conflict between rule 108 and token "+" resolved as shift ("==" < "+").
    Conflict between rule 108 and token "-" resolved as shift ("==" < "-").
    Conflict between rule 108 and token "*" resolved as shift ("==" < "*").
    Conflict between rule 108 and token ".*" resolved as shift ("==" < ".*").
    Conflict between rule 108 and token ".*." resolved as shift ("==" < ".*.").
    Conflict between rule 108 and token "*." resolved as shift ("==" < "*.").
    Conflict between rule 108 and token "/" resolved as shift ("==" < "/").
    Conflict between rule 108 and token "./" resolved as shift ("==" < "./").
    Conflict between rule 108 and token "/." resolved as shift ("==" < "/.").
    Conflict between rule 108 and token "./." resolved as shift ("==" < "./.").
    Conflict between rule 108 and token "\\" resolved as shift ("==" < "\\").
    Conflict between rule 108 and token ".\\" resolved as shift ("==" < ".\\").
    Conflict between rule 108 and token "\\." resolved as shift ("==" < "\\.").
    Conflict between rule 108 and token ".\\." resolved as shift ("==" < ".\\.").
    Conflict between rule 108 and token "** or ^" resolved as shift ("==" < "** or ^").
    Conflict between rule 108 and token ".^" resolved as shift ("==" < ".^").
    Conflict between rule 108 and token "==" resolved as reduce (%left "==").
    Conflict between rule 108 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 108 and token "<" resolved as reduce (%left "<").
    Conflict between rule 108 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 108 and token ">" resolved as reduce (%left ">").
    Conflict between rule 108 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 108 and token "&" resolved as reduce ("&" < "==").
    Conflict between rule 108 and token "&&" resolved as reduce ("&&" < "==").
    Conflict between rule 108 and token "|" resolved as reduce ("|" < "==").
    Conflict between rule 108 and token "||" resolved as reduce ("||" < "==").


State 310

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  107                | "==" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    ":"        shift, and go to state 122
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 107 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 107 and token "'" resolved as shift ("==" < "'").
    Conflict between rule 107 and token ":" resolved as shift ("==" < ":").
    Conflict between rule 107 and token "(" resolved as shift ("==" < "(").
    Conflict between rule 107 and token "." resolved as shift ("==" < ".").
    Conflict between rule 107 and token ".'" resolved as shift ("==" < ".'").
    Conflict between rule 107 and token "+" resolved as shift ("==" < "+").
    Conflict between rule 107 and token "-" resolved as shift ("==" < "-").
    Conflict between rule 107 and token "*" resolved as shift ("==" < "*").
    Conflict between rule 107 and token ".*" resolved as shift ("==" < ".*").
    Conflict between rule 107 and token ".*." resolved as shift ("==" < ".*.").
    Conflict between rule 107 and token "*." resolved as shift ("==" < "*.").
    Conflict between rule 107 and token "/" resolved as shift ("==" < "/").
    Conflict between rule 107 and token "./" resolved as shift ("==" < "./").
    Conflict between rule 107 and token "/." resolved as shift ("==" < "/.").
    Conflict between rule 107 and token "./." resolved as shift ("==" < "./.").
    Conflict between rule 107 and token "\\" resolved as shift ("==" < "\\").
    Conflict between rule 107 and token ".\\" resolved as shift ("==" < ".\\").
    Conflict between rule 107 and token "\\." resolved as shift ("==" < "\\.").
    Conflict between rule 107 and token ".\\." resolved as shift ("==" < ".\\.").
    Conflict between rule 107 and token "** or ^" resolved as shift ("==" < "** or ^").
    Conflict between rule 107 and token ".^" resolved as shift ("==" < ".^").
    Conflict between rule 107 and token "==" resolved as reduce (%left "==").
    Conflict between rule 107 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 107 and token "<" resolved as reduce (%left "<").
    Conflict between rule 107 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 107 and token ">" resolved as reduce (%left ">").
    Conflict between rule 107 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 107 and token "&" resolved as reduce ("&" < "==").
    Conflict between rule 107 and token "&&" resolved as reduce ("&&" < "==").
    Conflict between rule 107 and token "|" resolved as reduce ("|" < "==").
    Conflict between rule 107 and token "||" resolved as reduce ("||" < "==").


State 311

  112 rightComparable: "<> or ~=" ":" •

    $default  reduce using rule 112 (rightComparable)


State 312

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  111                | "<> or ~=" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    ":"        shift, and go to state 122
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 111 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 111 and token "'" resolved as shift ("<> or ~=" < "'").
    Conflict between rule 111 and token ":" resolved as shift ("<> or ~=" < ":").
    Conflict between rule 111 and token "(" resolved as shift ("<> or ~=" < "(").
    Conflict between rule 111 and token "." resolved as shift ("<> or ~=" < ".").
    Conflict between rule 111 and token ".'" resolved as shift ("<> or ~=" < ".'").
    Conflict between rule 111 and token "+" resolved as shift ("<> or ~=" < "+").
    Conflict between rule 111 and token "-" resolved as shift ("<> or ~=" < "-").
    Conflict between rule 111 and token "*" resolved as shift ("<> or ~=" < "*").
    Conflict between rule 111 and token ".*" resolved as shift ("<> or ~=" < ".*").
    Conflict between rule 111 and token ".*." resolved as shift ("<> or ~=" < ".*.").
    Conflict between rule 111 and token "*." resolved as shift ("<> or ~=" < "*.").
    Conflict between rule 111 and token "/" resolved as shift ("<> or ~=" < "/").
    Conflict between rule 111 and token "./" resolved as shift ("<> or ~=" < "./").
    Conflict between rule 111 and token "/." resolved as shift ("<> or ~=" < "/.").
    Conflict between rule 111 and token "./." resolved as shift ("<> or ~=" < "./.").
    Conflict between rule 111 and token "\\" resolved as shift ("<> or ~=" < "\\").
    Conflict between rule 111 and token ".\\" resolved as shift ("<> or ~=" < ".\\").
    Conflict between rule 111 and token "\\." resolved as shift ("<> or ~=" < "\\.").
    Conflict between rule 111 and token ".\\." resolved as shift ("<> or ~=" < ".\\.").
    Conflict between rule 111 and token "** or ^" resolved as shift ("<> or ~=" < "** or ^").
    Conflict between rule 111 and token ".^" resolved as shift ("<> or ~=" < ".^").
    Conflict between rule 111 and token "==" resolved as reduce (%left "==").
    Conflict between rule 111 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 111 and token "<" resolved as reduce (%left "<").
    Conflict between rule 111 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 111 and token ">" resolved as reduce (%left ">").
    Conflict between rule 111 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 111 and token "&" resolved as reduce ("&" < "<> or ~=").
    Conflict between rule 111 and token "&&" resolved as reduce ("&&" < "<> or ~=").
    Conflict between rule 111 and token "|" resolved as reduce ("|" < "<> or ~=").
    Conflict between rule 111 and token "||" resolved as reduce ("||" < "<> or ~=").


State 313

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  110                | "<> or ~=" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    ":"        shift, and go to state 122
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 110 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 110 and token "'" resolved as shift ("<> or ~=" < "'").
    Conflict between rule 110 and token ":" resolved as shift ("<> or ~=" < ":").
    Conflict between rule 110 and token "(" resolved as shift ("<> or ~=" < "(").
    Conflict between rule 110 and token "." resolved as shift ("<> or ~=" < ".").
    Conflict between rule 110 and token ".'" resolved as shift ("<> or ~=" < ".'").
    Conflict between rule 110 and token "+" resolved as shift ("<> or ~=" < "+").
    Conflict between rule 110 and token "-" resolved as shift ("<> or ~=" < "-").
    Conflict between rule 110 and token "*" resolved as shift ("<> or ~=" < "*").
    Conflict between rule 110 and token ".*" resolved as shift ("<> or ~=" < ".*").
    Conflict between rule 110 and token ".*." resolved as shift ("<> or ~=" < ".*.").
    Conflict between rule 110 and token "*." resolved as shift ("<> or ~=" < "*.").
    Conflict between rule 110 and token "/" resolved as shift ("<> or ~=" < "/").
    Conflict between rule 110 and token "./" resolved as shift ("<> or ~=" < "./").
    Conflict between rule 110 and token "/." resolved as shift ("<> or ~=" < "/.").
    Conflict between rule 110 and token "./." resolved as shift ("<> or ~=" < "./.").
    Conflict between rule 110 and token "\\" resolved as shift ("<> or ~=" < "\\").
    Conflict between rule 110 and token ".\\" resolved as shift ("<> or ~=" < ".\\").
    Conflict between rule 110 and token "\\." resolved as shift ("<> or ~=" < "\\.").
    Conflict between rule 110 and token ".\\." resolved as shift ("<> or ~=" < ".\\.").
    Conflict between rule 110 and token "** or ^" resolved as shift ("<> or ~=" < "** or ^").
    Conflict between rule 110 and token ".^" resolved as shift ("<> or ~=" < ".^").
    Conflict between rule 110 and token "==" resolved as reduce (%left "==").
    Conflict between rule 110 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 110 and token "<" resolved as reduce (%left "<").
    Conflict between rule 110 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 110 and token ">" resolved as reduce (%left ">").
    Conflict between rule 110 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 110 and token "&" resolved as reduce ("&" < "<> or ~=").
    Conflict between rule 110 and token "&&" resolved as reduce ("&&" < "<> or ~=").
    Conflict between rule 110 and token "|" resolved as reduce ("|" < "<> or ~=").
    Conflict between rule 110 and token "||" resolved as reduce ("||" < "<> or ~=").


State 314

  118 rightComparable: "<" ":" •

    $default  reduce using rule 118 (rightComparable)


State 315

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  117                | "<" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    ":"        shift, and go to state 122
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 117 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 117 and token "'" resolved as shift ("<" < "'").
    Conflict between rule 117 and token ":" resolved as shift ("<" < ":").
    Conflict between rule 117 and token "(" resolved as shift ("<" < "(").
    Conflict between rule 117 and token "." resolved as shift ("<" < ".").
    Conflict between rule 117 and token ".'" resolved as shift ("<" < ".'").
    Conflict between rule 117 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 117 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 117 and token "*" resolved as shift ("<" < "*").
    Conflict between rule 117 and token ".*" resolved as shift ("<" < ".*").
    Conflict between rule 117 and token ".*." resolved as shift ("<" < ".*.").
    Conflict between rule 117 and token "*." resolved as shift ("<" < "*.").
    Conflict between rule 117 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 117 and token "./" resolved as shift ("<" < "./").
    Conflict between rule 117 and token "/." resolved as shift ("<" < "/.").
    Conflict between rule 117 and token "./." resolved as shift ("<" < "./.").
    Conflict between rule 117 and token "\\" resolved as shift ("<" < "\\").
    Conflict between rule 117 and token ".\\" resolved as shift ("<" < ".\\").
    Conflict between rule 117 and token "\\." resolved as shift ("<" < "\\.").
    Conflict between rule 117 and token ".\\." resolved as shift ("<" < ".\\.").
    Conflict between rule 117 and token "** or ^" resolved as shift ("<" < "** or ^").
    Conflict between rule 117 and token ".^" resolved as shift ("<" < ".^").
    Conflict between rule 117 and token "==" resolved as reduce (%left "==").
    Conflict between rule 117 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 117 and token "<" resolved as reduce (%left "<").
    Conflict between rule 117 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 117 and token ">" resolved as reduce (%left ">").
    Conflict between rule 117 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 117 and token "&" resolved as reduce ("&" < "<").
    Conflict between rule 117 and token "&&" resolved as reduce ("&&" < "<").
    Conflict between rule 117 and token "|" resolved as reduce ("|" < "<").
    Conflict between rule 117 and token "||" resolved as reduce ("||" < "<").


State 316

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  116                | "<" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    ":"        shift, and go to state 122
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 116 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 116 and token "'" resolved as shift ("<" < "'").
    Conflict between rule 116 and token ":" resolved as shift ("<" < ":").
    Conflict between rule 116 and token "(" resolved as shift ("<" < "(").
    Conflict between rule 116 and token "." resolved as shift ("<" < ".").
    Conflict between rule 116 and token ".'" resolved as shift ("<" < ".'").
    Conflict between rule 116 and token "+" resolved as shift ("<" < "+").
    Conflict between rule 116 and token "-" resolved as shift ("<" < "-").
    Conflict between rule 116 and token "*" resolved as shift ("<" < "*").
    Conflict between rule 116 and token ".*" resolved as shift ("<" < ".*").
    Conflict between rule 116 and token ".*." resolved as shift ("<" < ".*.").
    Conflict between rule 116 and token "*." resolved as shift ("<" < "*.").
    Conflict between rule 116 and token "/" resolved as shift ("<" < "/").
    Conflict between rule 116 and token "./" resolved as shift ("<" < "./").
    Conflict between rule 116 and token "/." resolved as shift ("<" < "/.").
    Conflict between rule 116 and token "./." resolved as shift ("<" < "./.").
    Conflict between rule 116 and token "\\" resolved as shift ("<" < "\\").
    Conflict between rule 116 and token ".\\" resolved as shift ("<" < ".\\").
    Conflict between rule 116 and token "\\." resolved as shift ("<" < "\\.").
    Conflict between rule 116 and token ".\\." resolved as shift ("<" < ".\\.").
    Conflict between rule 116 and token "** or ^" resolved as shift ("<" < "** or ^").
    Conflict between rule 116 and token ".^" resolved as shift ("<" < ".^").
    Conflict between rule 116 and token "==" resolved as reduce (%left "==").
    Conflict between rule 116 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 116 and token "<" resolved as reduce (%left "<").
    Conflict between rule 116 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 116 and token ">" resolved as reduce (%left ">").
    Conflict between rule 116 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 116 and token "&" resolved as reduce ("&" < "<").
    Conflict between rule 116 and token "&&" resolved as reduce ("&&" < "<").
    Conflict between rule 116 and token "|" resolved as reduce ("|" < "<").
    Conflict between rule 116 and token "||" resolved as reduce ("||" < "<").


State 317

  124 rightComparable: "<=" ":" •

    $default  reduce using rule 124 (rightComparable)


State 318

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  123                | "<=" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    ":"        shift, and go to state 122
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 123 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 123 and token "'" resolved as shift ("<=" < "'").
    Conflict between rule 123 and token ":" resolved as shift ("<=" < ":").
    Conflict between rule 123 and token "(" resolved as shift ("<=" < "(").
    Conflict between rule 123 and token "." resolved as shift ("<=" < ".").
    Conflict between rule 123 and token ".'" resolved as shift ("<=" < ".'").
    Conflict between rule 123 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 123 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 123 and token "*" resolved as shift ("<=" < "*").
    Conflict between rule 123 and token ".*" resolved as shift ("<=" < ".*").
    Conflict between rule 123 and token ".*." resolved as shift ("<=" < ".*.").
    Conflict between rule 123 and token "*." resolved as shift ("<=" < "*.").
    Conflict between rule 123 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 123 and token "./" resolved as shift ("<=" < "./").
    Conflict between rule 123 and token "/." resolved as shift ("<=" < "/.").
    Conflict between rule 123 and token "./." resolved as shift ("<=" < "./.").
    Conflict between rule 123 and token "\\" resolved as shift ("<=" < "\\").
    Conflict between rule 123 and token ".\\" resolved as shift ("<=" < ".\\").
    Conflict between rule 123 and token "\\." resolved as shift ("<=" < "\\.").
    Conflict between rule 123 and token ".\\." resolved as shift ("<=" < ".\\.").
    Conflict between rule 123 and token "** or ^" resolved as shift ("<=" < "** or ^").
    Conflict between rule 123 and token ".^" resolved as shift ("<=" < ".^").
    Conflict between rule 123 and token "==" resolved as reduce (%left "==").
    Conflict between rule 123 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 123 and token "<" resolved as reduce (%left "<").
    Conflict between rule 123 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 123 and token ">" resolved as reduce (%left ">").
    Conflict between rule 123 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 123 and token "&" resolved as reduce ("&" < "<=").
    Conflict between rule 123 and token "&&" resolved as reduce ("&&" < "<=").
    Conflict between rule 123 and token "|" resolved as reduce ("|" < "<=").
    Conflict between rule 123 and token "||" resolved as reduce ("||" < "<=").


State 319

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  122                | "<=" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    ":"        shift, and go to state 122
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 122 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 122 and token "'" resolved as shift ("<=" < "'").
    Conflict between rule 122 and token ":" resolved as shift ("<=" < ":").
    Conflict between rule 122 and token "(" resolved as shift ("<=" < "(").
    Conflict between rule 122 and token "." resolved as shift ("<=" < ".").
    Conflict between rule 122 and token ".'" resolved as shift ("<=" < ".'").
    Conflict between rule 122 and token "+" resolved as shift ("<=" < "+").
    Conflict between rule 122 and token "-" resolved as shift ("<=" < "-").
    Conflict between rule 122 and token "*" resolved as shift ("<=" < "*").
    Conflict between rule 122 and token ".*" resolved as shift ("<=" < ".*").
    Conflict between rule 122 and token ".*." resolved as shift ("<=" < ".*.").
    Conflict between rule 122 and token "*." resolved as shift ("<=" < "*.").
    Conflict between rule 122 and token "/" resolved as shift ("<=" < "/").
    Conflict between rule 122 and token "./" resolved as shift ("<=" < "./").
    Conflict between rule 122 and token "/." resolved as shift ("<=" < "/.").
    Conflict between rule 122 and token "./." resolved as shift ("<=" < "./.").
    Conflict between rule 122 and token "\\" resolved as shift ("<=" < "\\").
    Conflict between rule 122 and token ".\\" resolved as shift ("<=" < ".\\").
    Conflict between rule 122 and token "\\." resolved as shift ("<=" < "\\.").
    Conflict between rule 122 and token ".\\." resolved as shift ("<=" < ".\\.").
    Conflict between rule 122 and token "** or ^" resolved as shift ("<=" < "** or ^").
    Conflict between rule 122 and token ".^" resolved as shift ("<=" < ".^").
    Conflict between rule 122 and token "==" resolved as reduce (%left "==").
    Conflict between rule 122 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 122 and token "<" resolved as reduce (%left "<").
    Conflict between rule 122 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 122 and token ">" resolved as reduce (%left ">").
    Conflict between rule 122 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 122 and token "&" resolved as reduce ("&" < "<=").
    Conflict between rule 122 and token "&&" resolved as reduce ("&&" < "<=").
    Conflict between rule 122 and token "|" resolved as reduce ("|" < "<=").
    Conflict between rule 122 and token "||" resolved as reduce ("||" < "<=").


State 320

  115 rightComparable: ">" ":" •

    $default  reduce using rule 115 (rightComparable)


State 321

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  114                | ">" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    ":"        shift, and go to state 122
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 114 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 114 and token "'" resolved as shift (">" < "'").
    Conflict between rule 114 and token ":" resolved as shift (">" < ":").
    Conflict between rule 114 and token "(" resolved as shift (">" < "(").
    Conflict between rule 114 and token "." resolved as shift (">" < ".").
    Conflict between rule 114 and token ".'" resolved as shift (">" < ".'").
    Conflict between rule 114 and token "+" resolved as shift (">" < "+").
    Conflict between rule 114 and token "-" resolved as shift (">" < "-").
    Conflict between rule 114 and token "*" resolved as shift (">" < "*").
    Conflict between rule 114 and token ".*" resolved as shift (">" < ".*").
    Conflict between rule 114 and token ".*." resolved as shift (">" < ".*.").
    Conflict between rule 114 and token "*." resolved as shift (">" < "*.").
    Conflict between rule 114 and token "/" resolved as shift (">" < "/").
    Conflict between rule 114 and token "./" resolved as shift (">" < "./").
    Conflict between rule 114 and token "/." resolved as shift (">" < "/.").
    Conflict between rule 114 and token "./." resolved as shift (">" < "./.").
    Conflict between rule 114 and token "\\" resolved as shift (">" < "\\").
    Conflict between rule 114 and token ".\\" resolved as shift (">" < ".\\").
    Conflict between rule 114 and token "\\." resolved as shift (">" < "\\.").
    Conflict between rule 114 and token ".\\." resolved as shift (">" < ".\\.").
    Conflict between rule 114 and token "** or ^" resolved as shift (">" < "** or ^").
    Conflict between rule 114 and token ".^" resolved as shift (">" < ".^").
    Conflict between rule 114 and token "==" resolved as reduce (%left "==").
    Conflict between rule 114 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 114 and token "<" resolved as reduce (%left "<").
    Conflict between rule 114 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 114 and token ">" resolved as reduce (%left ">").
    Conflict between rule 114 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 114 and token "&" resolved as reduce ("&" < ">").
    Conflict between rule 114 and token "&&" resolved as reduce ("&&" < ">").
    Conflict between rule 114 and token "|" resolved as reduce ("|" < ">").
    Conflict between rule 114 and token "||" resolved as reduce ("||" < ">").


State 322

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  113                | ">" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    ":"        shift, and go to state 122
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 113 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 113 and token "'" resolved as shift (">" < "'").
    Conflict between rule 113 and token ":" resolved as shift (">" < ":").
    Conflict between rule 113 and token "(" resolved as shift (">" < "(").
    Conflict between rule 113 and token "." resolved as shift (">" < ".").
    Conflict between rule 113 and token ".'" resolved as shift (">" < ".'").
    Conflict between rule 113 and token "+" resolved as shift (">" < "+").
    Conflict between rule 113 and token "-" resolved as shift (">" < "-").
    Conflict between rule 113 and token "*" resolved as shift (">" < "*").
    Conflict between rule 113 and token ".*" resolved as shift (">" < ".*").
    Conflict between rule 113 and token ".*." resolved as shift (">" < ".*.").
    Conflict between rule 113 and token "*." resolved as shift (">" < "*.").
    Conflict between rule 113 and token "/" resolved as shift (">" < "/").
    Conflict between rule 113 and token "./" resolved as shift (">" < "./").
    Conflict between rule 113 and token "/." resolved as shift (">" < "/.").
    Conflict between rule 113 and token "./." resolved as shift (">" < "./.").
    Conflict between rule 113 and token "\\" resolved as shift (">" < "\\").
    Conflict between rule 113 and token ".\\" resolved as shift (">" < ".\\").
    Conflict between rule 113 and token "\\." resolved as shift (">" < "\\.").
    Conflict between rule 113 and token ".\\." resolved as shift (">" < ".\\.").
    Conflict between rule 113 and token "** or ^" resolved as shift (">" < "** or ^").
    Conflict between rule 113 and token ".^" resolved as shift (">" < ".^").
    Conflict between rule 113 and token "==" resolved as reduce (%left "==").
    Conflict between rule 113 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 113 and token "<" resolved as reduce (%left "<").
    Conflict between rule 113 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 113 and token ">" resolved as reduce (%left ">").
    Conflict between rule 113 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 113 and token "&" resolved as reduce ("&" < ">").
    Conflict between rule 113 and token "&&" resolved as reduce ("&&" < ">").
    Conflict between rule 113 and token "|" resolved as reduce ("|" < ">").
    Conflict between rule 113 and token "||" resolved as reduce ("||" < ">").


State 323

  121 rightComparable: ">=" ":" •

    $default  reduce using rule 121 (rightComparable)


State 324

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  120                | ">=" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    ":"        shift, and go to state 122
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 120 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 120 and token "'" resolved as shift (">=" < "'").
    Conflict between rule 120 and token ":" resolved as shift (">=" < ":").
    Conflict between rule 120 and token "(" resolved as shift (">=" < "(").
    Conflict between rule 120 and token "." resolved as shift (">=" < ".").
    Conflict between rule 120 and token ".'" resolved as shift (">=" < ".'").
    Conflict between rule 120 and token "+" resolved as shift (">=" < "+").
    Conflict between rule 120 and token "-" resolved as shift (">=" < "-").
    Conflict between rule 120 and token "*" resolved as shift (">=" < "*").
    Conflict between rule 120 and token ".*" resolved as shift (">=" < ".*").
    Conflict between rule 120 and token ".*." resolved as shift (">=" < ".*.").
    Conflict between rule 120 and token "*." resolved as shift (">=" < "*.").
    Conflict between rule 120 and token "/" resolved as shift (">=" < "/").
    Conflict between rule 120 and token "./" resolved as shift (">=" < "./").
    Conflict between rule 120 and token "/." resolved as shift (">=" < "/.").
    Conflict between rule 120 and token "./." resolved as shift (">=" < "./.").
    Conflict between rule 120 and token "\\" resolved as shift (">=" < "\\").
    Conflict between rule 120 and token ".\\" resolved as shift (">=" < ".\\").
    Conflict between rule 120 and token "\\." resolved as shift (">=" < "\\.").
    Conflict between rule 120 and token ".\\." resolved as shift (">=" < ".\\.").
    Conflict between rule 120 and token "** or ^" resolved as shift (">=" < "** or ^").
    Conflict between rule 120 and token ".^" resolved as shift (">=" < ".^").
    Conflict between rule 120 and token "==" resolved as reduce (%left "==").
    Conflict between rule 120 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 120 and token "<" resolved as reduce (%left "<").
    Conflict between rule 120 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 120 and token ">" resolved as reduce (%left ">").
    Conflict between rule 120 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 120 and token "&" resolved as reduce ("&" < ">=").
    Conflict between rule 120 and token "&&" resolved as reduce ("&&" < ">=").
    Conflict between rule 120 and token "|" resolved as reduce ("|" < ">=").
    Conflict between rule 120 and token "||" resolved as reduce ("||" < ">=").


State 325

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  119                | ">=" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    ":"        shift, and go to state 122
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 119 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 119 and token "'" resolved as shift (">=" < "'").
    Conflict between rule 119 and token ":" resolved as shift (">=" < ":").
    Conflict between rule 119 and token "(" resolved as shift (">=" < "(").
    Conflict between rule 119 and token "." resolved as shift (">=" < ".").
    Conflict between rule 119 and token ".'" resolved as shift (">=" < ".'").
    Conflict between rule 119 and token "+" resolved as shift (">=" < "+").
    Conflict between rule 119 and token "-" resolved as shift (">=" < "-").
    Conflict between rule 119 and token "*" resolved as shift (">=" < "*").
    Conflict between rule 119 and token ".*" resolved as shift (">=" < ".*").
    Conflict between rule 119 and token ".*." resolved as shift (">=" < ".*.").
    Conflict between rule 119 and token "*." resolved as shift (">=" < "*.").
    Conflict between rule 119 and token "/" resolved as shift (">=" < "/").
    Conflict between rule 119 and token "./" resolved as shift (">=" < "./").
    Conflict between rule 119 and token "/." resolved as shift (">=" < "/.").
    Conflict between rule 119 and token "./." resolved as shift (">=" < "./.").
    Conflict between rule 119 and token "\\" resolved as shift (">=" < "\\").
    Conflict between rule 119 and token ".\\" resolved as shift (">=" < ".\\").
    Conflict between rule 119 and token "\\." resolved as shift (">=" < "\\.").
    Conflict between rule 119 and token ".\\." resolved as shift (">=" < ".\\.").
    Conflict between rule 119 and token "** or ^" resolved as shift (">=" < "** or ^").
    Conflict between rule 119 and token ".^" resolved as shift (">=" < ".^").
    Conflict between rule 119 and token "==" resolved as reduce (%left "==").
    Conflict between rule 119 and token "<> or ~=" resolved as reduce (%left "<> or ~=").
    Conflict between rule 119 and token "<" resolved as reduce (%left "<").
    Conflict between rule 119 and token "<=" resolved as reduce (%left "<=").
    Conflict between rule 119 and token ">" resolved as reduce (%left ">").
    Conflict between rule 119 and token ">=" resolved as reduce (%left ">=").
    Conflict between rule 119 and token "&" resolved as reduce ("&" < ">=").
    Conflict between rule 119 and token "&&" resolved as reduce ("&&" < ">=").
    Conflict between rule 119 and token "|" resolved as reduce ("|" < ">=").
    Conflict between rule 119 and token "||" resolved as reduce ("||" < ">=").


State 326

   97 rightComparable: "&" ":" •

    $default  reduce using rule 97 (rightComparable)


State 327

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   96                | "&" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147

    $default  reduce using rule 96 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 96 and token "'" resolved as shift ("&" < "'").
    Conflict between rule 96 and token ":" resolved as shift ("&" < ":").
    Conflict between rule 96 and token "(" resolved as shift ("&" < "(").
    Conflict between rule 96 and token "." resolved as shift ("&" < ".").
    Conflict between rule 96 and token ".'" resolved as shift ("&" < ".'").
    Conflict between rule 96 and token "+" resolved as shift ("&" < "+").
    Conflict between rule 96 and token "-" resolved as shift ("&" < "-").
    Conflict between rule 96 and token "*" resolved as shift ("&" < "*").
    Conflict between rule 96 and token ".*" resolved as shift ("&" < ".*").
    Conflict between rule 96 and token ".*." resolved as shift ("&" < ".*.").
    Conflict between rule 96 and token "*." resolved as shift ("&" < "*.").
    Conflict between rule 96 and token "/" resolved as shift ("&" < "/").
    Conflict between rule 96 and token "./" resolved as shift ("&" < "./").
    Conflict between rule 96 and token "/." resolved as shift ("&" < "/.").
    Conflict between rule 96 and token "./." resolved as shift ("&" < "./.").
    Conflict between rule 96 and token "\\" resolved as shift ("&" < "\\").
    Conflict between rule 96 and token ".\\" resolved as shift ("&" < ".\\").
    Conflict between rule 96 and token "\\." resolved as shift ("&" < "\\.").
    Conflict between rule 96 and token ".\\." resolved as shift ("&" < ".\\.").
    Conflict between rule 96 and token "** or ^" resolved as shift ("&" < "** or ^").
    Conflict between rule 96 and token ".^" resolved as shift ("&" < ".^").
    Conflict between rule 96 and token "==" resolved as shift ("&" < "==").
    Conflict between rule 96 and token "<> or ~=" resolved as shift ("&" < "<> or ~=").
    Conflict between rule 96 and token "<" resolved as shift ("&" < "<").
    Conflict between rule 96 and token "<=" resolved as shift ("&" < "<=").
    Conflict between rule 96 and token ">" resolved as shift ("&" < ">").
    Conflict between rule 96 and token ">=" resolved as shift ("&" < ">=").
    Conflict between rule 96 and token "&" resolved as reduce (%left "&").
    Conflict between rule 96 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 96 and token "|" resolved as reduce ("|" < "&").
    Conflict between rule 96 and token "||" resolved as reduce ("||" < "&").


State 328

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   95                | "&" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147

    $default  reduce using rule 95 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 95 and token "'" resolved as shift ("&" < "'").
    Conflict between rule 95 and token ":" resolved as shift ("&" < ":").
    Conflict between rule 95 and token "(" resolved as shift ("&" < "(").
    Conflict between rule 95 and token "." resolved as shift ("&" < ".").
    Conflict between rule 95 and token ".'" resolved as shift ("&" < ".'").
    Conflict between rule 95 and token "+" resolved as shift ("&" < "+").
    Conflict between rule 95 and token "-" resolved as shift ("&" < "-").
    Conflict between rule 95 and token "*" resolved as shift ("&" < "*").
    Conflict between rule 95 and token ".*" resolved as shift ("&" < ".*").
    Conflict between rule 95 and token ".*." resolved as shift ("&" < ".*.").
    Conflict between rule 95 and token "*." resolved as shift ("&" < "*.").
    Conflict between rule 95 and token "/" resolved as shift ("&" < "/").
    Conflict between rule 95 and token "./" resolved as shift ("&" < "./").
    Conflict between rule 95 and token "/." resolved as shift ("&" < "/.").
    Conflict between rule 95 and token "./." resolved as shift ("&" < "./.").
    Conflict between rule 95 and token "\\" resolved as shift ("&" < "\\").
    Conflict between rule 95 and token ".\\" resolved as shift ("&" < ".\\").
    Conflict between rule 95 and token "\\." resolved as shift ("&" < "\\.").
    Conflict between rule 95 and token ".\\." resolved as shift ("&" < ".\\.").
    Conflict between rule 95 and token "** or ^" resolved as shift ("&" < "** or ^").
    Conflict between rule 95 and token ".^" resolved as shift ("&" < ".^").
    Conflict between rule 95 and token "==" resolved as shift ("&" < "==").
    Conflict between rule 95 and token "<> or ~=" resolved as shift ("&" < "<> or ~=").
    Conflict between rule 95 and token "<" resolved as shift ("&" < "<").
    Conflict between rule 95 and token "<=" resolved as shift ("&" < "<=").
    Conflict between rule 95 and token ">" resolved as shift ("&" < ">").
    Conflict between rule 95 and token ">=" resolved as shift ("&" < ">=").
    Conflict between rule 95 and token "&" resolved as reduce (%left "&").
    Conflict between rule 95 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 95 and token "|" resolved as reduce ("|" < "&").
    Conflict between rule 95 and token "||" resolved as reduce ("||" < "&").


State 329

  100 rightComparable: "&&" ":" •

    $default  reduce using rule 100 (rightComparable)


State 330

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
   99                | "&&" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147

    $default  reduce using rule 99 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 99 and token "'" resolved as shift ("&&" < "'").
    Conflict between rule 99 and token ":" resolved as shift ("&&" < ":").
    Conflict between rule 99 and token "(" resolved as shift ("&&" < "(").
    Conflict between rule 99 and token "." resolved as shift ("&&" < ".").
    Conflict between rule 99 and token ".'" resolved as shift ("&&" < ".'").
    Conflict between rule 99 and token "+" resolved as shift ("&&" < "+").
    Conflict between rule 99 and token "-" resolved as shift ("&&" < "-").
    Conflict between rule 99 and token "*" resolved as shift ("&&" < "*").
    Conflict between rule 99 and token ".*" resolved as shift ("&&" < ".*").
    Conflict between rule 99 and token ".*." resolved as shift ("&&" < ".*.").
    Conflict between rule 99 and token "*." resolved as shift ("&&" < "*.").
    Conflict between rule 99 and token "/" resolved as shift ("&&" < "/").
    Conflict between rule 99 and token "./" resolved as shift ("&&" < "./").
    Conflict between rule 99 and token "/." resolved as shift ("&&" < "/.").
    Conflict between rule 99 and token "./." resolved as shift ("&&" < "./.").
    Conflict between rule 99 and token "\\" resolved as shift ("&&" < "\\").
    Conflict between rule 99 and token ".\\" resolved as shift ("&&" < ".\\").
    Conflict between rule 99 and token "\\." resolved as shift ("&&" < "\\.").
    Conflict between rule 99 and token ".\\." resolved as shift ("&&" < ".\\.").
    Conflict between rule 99 and token "** or ^" resolved as shift ("&&" < "** or ^").
    Conflict between rule 99 and token ".^" resolved as shift ("&&" < ".^").
    Conflict between rule 99 and token "==" resolved as shift ("&&" < "==").
    Conflict between rule 99 and token "<> or ~=" resolved as shift ("&&" < "<> or ~=").
    Conflict between rule 99 and token "<" resolved as shift ("&&" < "<").
    Conflict between rule 99 and token "<=" resolved as shift ("&&" < "<=").
    Conflict between rule 99 and token ">" resolved as shift ("&&" < ">").
    Conflict between rule 99 and token ">=" resolved as shift ("&&" < ">=").
    Conflict between rule 99 and token "&" resolved as reduce (%left "&").
    Conflict between rule 99 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 99 and token "|" resolved as reduce ("|" < "&&").
    Conflict between rule 99 and token "||" resolved as reduce ("||" < "&&").


State 331

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   98                | "&&" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147

    $default  reduce using rule 98 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 98 and token "'" resolved as shift ("&&" < "'").
    Conflict between rule 98 and token ":" resolved as shift ("&&" < ":").
    Conflict between rule 98 and token "(" resolved as shift ("&&" < "(").
    Conflict between rule 98 and token "." resolved as shift ("&&" < ".").
    Conflict between rule 98 and token ".'" resolved as shift ("&&" < ".'").
    Conflict between rule 98 and token "+" resolved as shift ("&&" < "+").
    Conflict between rule 98 and token "-" resolved as shift ("&&" < "-").
    Conflict between rule 98 and token "*" resolved as shift ("&&" < "*").
    Conflict between rule 98 and token ".*" resolved as shift ("&&" < ".*").
    Conflict between rule 98 and token ".*." resolved as shift ("&&" < ".*.").
    Conflict between rule 98 and token "*." resolved as shift ("&&" < "*.").
    Conflict between rule 98 and token "/" resolved as shift ("&&" < "/").
    Conflict between rule 98 and token "./" resolved as shift ("&&" < "./").
    Conflict between rule 98 and token "/." resolved as shift ("&&" < "/.").
    Conflict between rule 98 and token "./." resolved as shift ("&&" < "./.").
    Conflict between rule 98 and token "\\" resolved as shift ("&&" < "\\").
    Conflict between rule 98 and token ".\\" resolved as shift ("&&" < ".\\").
    Conflict between rule 98 and token "\\." resolved as shift ("&&" < "\\.").
    Conflict between rule 98 and token ".\\." resolved as shift ("&&" < ".\\.").
    Conflict between rule 98 and token "** or ^" resolved as shift ("&&" < "** or ^").
    Conflict between rule 98 and token ".^" resolved as shift ("&&" < ".^").
    Conflict between rule 98 and token "==" resolved as shift ("&&" < "==").
    Conflict between rule 98 and token "<> or ~=" resolved as shift ("&&" < "<> or ~=").
    Conflict between rule 98 and token "<" resolved as shift ("&&" < "<").
    Conflict between rule 98 and token "<=" resolved as shift ("&&" < "<=").
    Conflict between rule 98 and token ">" resolved as shift ("&&" < ">").
    Conflict between rule 98 and token ">=" resolved as shift ("&&" < ">=").
    Conflict between rule 98 and token "&" resolved as reduce (%left "&").
    Conflict between rule 98 and token "&&" resolved as reduce (%left "&&").
    Conflict between rule 98 and token "|" resolved as reduce ("|" < "&&").
    Conflict between rule 98 and token "||" resolved as reduce ("||" < "&&").


State 332

  103 rightComparable: "|" ":" •

    $default  reduce using rule 103 (rightComparable)


State 333

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  102                | "|" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149

    $default  reduce using rule 102 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 102 and token "'" resolved as shift ("|" < "'").
    Conflict between rule 102 and token ":" resolved as shift ("|" < ":").
    Conflict between rule 102 and token "(" resolved as shift ("|" < "(").
    Conflict between rule 102 and token "." resolved as shift ("|" < ".").
    Conflict between rule 102 and token ".'" resolved as shift ("|" < ".'").
    Conflict between rule 102 and token "+" resolved as shift ("|" < "+").
    Conflict between rule 102 and token "-" resolved as shift ("|" < "-").
    Conflict between rule 102 and token "*" resolved as shift ("|" < "*").
    Conflict between rule 102 and token ".*" resolved as shift ("|" < ".*").
    Conflict between rule 102 and token ".*." resolved as shift ("|" < ".*.").
    Conflict between rule 102 and token "*." resolved as shift ("|" < "*.").
    Conflict between rule 102 and token "/" resolved as shift ("|" < "/").
    Conflict between rule 102 and token "./" resolved as shift ("|" < "./").
    Conflict between rule 102 and token "/." resolved as shift ("|" < "/.").
    Conflict between rule 102 and token "./." resolved as shift ("|" < "./.").
    Conflict between rule 102 and token "\\" resolved as shift ("|" < "\\").
    Conflict between rule 102 and token ".\\" resolved as shift ("|" < ".\\").
    Conflict between rule 102 and token "\\." resolved as shift ("|" < "\\.").
    Conflict between rule 102 and token ".\\." resolved as shift ("|" < ".\\.").
    Conflict between rule 102 and token "** or ^" resolved as shift ("|" < "** or ^").
    Conflict between rule 102 and token ".^" resolved as shift ("|" < ".^").
    Conflict between rule 102 and token "==" resolved as shift ("|" < "==").
    Conflict between rule 102 and token "<> or ~=" resolved as shift ("|" < "<> or ~=").
    Conflict between rule 102 and token "<" resolved as shift ("|" < "<").
    Conflict between rule 102 and token "<=" resolved as shift ("|" < "<=").
    Conflict between rule 102 and token ">" resolved as shift ("|" < ">").
    Conflict between rule 102 and token ">=" resolved as shift ("|" < ">=").
    Conflict between rule 102 and token "&" resolved as shift ("|" < "&").
    Conflict between rule 102 and token "&&" resolved as shift ("|" < "&&").
    Conflict between rule 102 and token "|" resolved as reduce (%left "|").
    Conflict between rule 102 and token "||" resolved as reduce (%left "||").


State 334

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  101                | "|" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149

    $default  reduce using rule 101 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 101 and token "'" resolved as shift ("|" < "'").
    Conflict between rule 101 and token ":" resolved as shift ("|" < ":").
    Conflict between rule 101 and token "(" resolved as shift ("|" < "(").
    Conflict between rule 101 and token "." resolved as shift ("|" < ".").
    Conflict between rule 101 and token ".'" resolved as shift ("|" < ".'").
    Conflict between rule 101 and token "+" resolved as shift ("|" < "+").
    Conflict between rule 101 and token "-" resolved as shift ("|" < "-").
    Conflict between rule 101 and token "*" resolved as shift ("|" < "*").
    Conflict between rule 101 and token ".*" resolved as shift ("|" < ".*").
    Conflict between rule 101 and token ".*." resolved as shift ("|" < ".*.").
    Conflict between rule 101 and token "*." resolved as shift ("|" < "*.").
    Conflict between rule 101 and token "/" resolved as shift ("|" < "/").
    Conflict between rule 101 and token "./" resolved as shift ("|" < "./").
    Conflict between rule 101 and token "/." resolved as shift ("|" < "/.").
    Conflict between rule 101 and token "./." resolved as shift ("|" < "./.").
    Conflict between rule 101 and token "\\" resolved as shift ("|" < "\\").
    Conflict between rule 101 and token ".\\" resolved as shift ("|" < ".\\").
    Conflict between rule 101 and token "\\." resolved as shift ("|" < "\\.").
    Conflict between rule 101 and token ".\\." resolved as shift ("|" < ".\\.").
    Conflict between rule 101 and token "** or ^" resolved as shift ("|" < "** or ^").
    Conflict between rule 101 and token ".^" resolved as shift ("|" < ".^").
    Conflict between rule 101 and token "==" resolved as shift ("|" < "==").
    Conflict between rule 101 and token "<> or ~=" resolved as shift ("|" < "<> or ~=").
    Conflict between rule 101 and token "<" resolved as shift ("|" < "<").
    Conflict between rule 101 and token "<=" resolved as shift ("|" < "<=").
    Conflict between rule 101 and token ">" resolved as shift ("|" < ">").
    Conflict between rule 101 and token ">=" resolved as shift ("|" < ">=").
    Conflict between rule 101 and token "&" resolved as shift ("|" < "&").
    Conflict between rule 101 and token "&&" resolved as shift ("|" < "&&").
    Conflict between rule 101 and token "|" resolved as reduce (%left "|").
    Conflict between rule 101 and token "||" resolved as reduce (%left "||").


State 335

  106 rightComparable: "||" ":" •

    $default  reduce using rule 106 (rightComparable)


State 336

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  105                | "||" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149

    $default  reduce using rule 105 (rightComparable)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 105 and token "'" resolved as shift ("||" < "'").
    Conflict between rule 105 and token ":" resolved as shift ("||" < ":").
    Conflict between rule 105 and token "(" resolved as shift ("||" < "(").
    Conflict between rule 105 and token "." resolved as shift ("||" < ".").
    Conflict between rule 105 and token ".'" resolved as shift ("||" < ".'").
    Conflict between rule 105 and token "+" resolved as shift ("||" < "+").
    Conflict between rule 105 and token "-" resolved as shift ("||" < "-").
    Conflict between rule 105 and token "*" resolved as shift ("||" < "*").
    Conflict between rule 105 and token ".*" resolved as shift ("||" < ".*").
    Conflict between rule 105 and token ".*." resolved as shift ("||" < ".*.").
    Conflict between rule 105 and token "*." resolved as shift ("||" < "*.").
    Conflict between rule 105 and token "/" resolved as shift ("||" < "/").
    Conflict between rule 105 and token "./" resolved as shift ("||" < "./").
    Conflict between rule 105 and token "/." resolved as shift ("||" < "/.").
    Conflict between rule 105 and token "./." resolved as shift ("||" < "./.").
    Conflict between rule 105 and token "\\" resolved as shift ("||" < "\\").
    Conflict between rule 105 and token ".\\" resolved as shift ("||" < ".\\").
    Conflict between rule 105 and token "\\." resolved as shift ("||" < "\\.").
    Conflict between rule 105 and token ".\\." resolved as shift ("||" < ".\\.").
    Conflict between rule 105 and token "** or ^" resolved as shift ("||" < "** or ^").
    Conflict between rule 105 and token ".^" resolved as shift ("||" < ".^").
    Conflict between rule 105 and token "==" resolved as shift ("||" < "==").
    Conflict between rule 105 and token "<> or ~=" resolved as shift ("||" < "<> or ~=").
    Conflict between rule 105 and token "<" resolved as shift ("||" < "<").
    Conflict between rule 105 and token "<=" resolved as shift ("||" < "<=").
    Conflict between rule 105 and token ">" resolved as shift ("||" < ">").
    Conflict between rule 105 and token ">=" resolved as shift ("||" < ">=").
    Conflict between rule 105 and token "&" resolved as shift ("||" < "&").
    Conflict between rule 105 and token "&&" resolved as shift ("||" < "&&").
    Conflict between rule 105 and token "|" resolved as reduce (%left "|").
    Conflict between rule 105 and token "||" resolved as reduce (%left "||").


State 337

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  104                | "||" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "]", "{", "}", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149

    $default  reduce using rule 104 (rightComparable)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 104 and token "'" resolved as shift ("||" < "'").
    Conflict between rule 104 and token ":" resolved as shift ("||" < ":").
    Conflict between rule 104 and token "(" resolved as shift ("||" < "(").
    Conflict between rule 104 and token "." resolved as shift ("||" < ".").
    Conflict between rule 104 and token ".'" resolved as shift ("||" < ".'").
    Conflict between rule 104 and token "+" resolved as shift ("||" < "+").
    Conflict between rule 104 and token "-" resolved as shift ("||" < "-").
    Conflict between rule 104 and token "*" resolved as shift ("||" < "*").
    Conflict between rule 104 and token ".*" resolved as shift ("||" < ".*").
    Conflict between rule 104 and token ".*." resolved as shift ("||" < ".*.").
    Conflict between rule 104 and token "*." resolved as shift ("||" < "*.").
    Conflict between rule 104 and token "/" resolved as shift ("||" < "/").
    Conflict between rule 104 and token "./" resolved as shift ("||" < "./").
    Conflict between rule 104 and token "/." resolved as shift ("||" < "/.").
    Conflict between rule 104 and token "./." resolved as shift ("||" < "./.").
    Conflict between rule 104 and token "\\" resolved as shift ("||" < "\\").
    Conflict between rule 104 and token ".\\" resolved as shift ("||" < ".\\").
    Conflict between rule 104 and token "\\." resolved as shift ("||" < "\\.").
    Conflict between rule 104 and token ".\\." resolved as shift ("||" < ".\\.").
    Conflict between rule 104 and token "** or ^" resolved as shift ("||" < "** or ^").
    Conflict between rule 104 and token ".^" resolved as shift ("||" < ".^").
    Conflict between rule 104 and token "==" resolved as shift ("||" < "==").
    Conflict between rule 104 and token "<> or ~=" resolved as shift ("||" < "<> or ~=").
    Conflict between rule 104 and token "<" resolved as shift ("||" < "<").
    Conflict between rule 104 and token "<=" resolved as shift ("||" < "<=").
    Conflict between rule 104 and token ">" resolved as shift ("||" < ">").
    Conflict between rule 104 and token ">=" resolved as shift ("||" < ">=").
    Conflict between rule 104 and token "&" resolved as shift ("||" < "&").
    Conflict between rule 104 and token "&&" resolved as shift ("||" < "&&").
    Conflict between rule 104 and token "|" resolved as reduce (%left "|").
    Conflict between rule 104 and token "||" resolved as reduce (%left "||").


State 338

  252 variableDeclaration: functionCall "=" ":" •

    $default  reduce using rule 252 (variableDeclaration)


State 339

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  250 variableDeclaration: functionCall "=" functionCall •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 250 (variableDeclaration)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 340

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  249 variableDeclaration: functionCall "=" variable •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 249 (variableDeclaration)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 341

  254 variableDeclaration: functionCall "=" returnControl •

    $default  reduce using rule 254 (variableDeclaration)


State 342

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  173 listableEnd: listableBegin ":" • variable
  174            | listableBegin ":" • functionCall
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 444
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 445
    cell                       go to state 46
    matrix                     go to state 47


State 343

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  201 variable: variable "(" functionArgs • ")"
  262 assignable: variable "(" functionArgs • ")"

    ","  shift, and go to state 438
    ")"  shift, and go to state 446


State 344

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   49             | "(" • functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"

    "("           shift, and go to state 344
    "identifier"  shift, and go to state 447

    functionCall        go to state 448
    simpleFunctionCall  go to state 40


State 345

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  178 variable: variable "." "identifier" •  ["end of file", "end of line", "'", ",", ":", ";", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  255 assignable: variable "." "identifier" •  ["="]

    "("  shift, and go to state 103
    "{"  shift, and go to state 104

    "="       reduce using rule 255 (assignable)
    $default  reduce using rule 178 (variable)

    Conflict between rule 178 and token "(" resolved as shift (UPLEVEL < "(").


State 346

  180 variable: variable "." functionCall •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  257 assignable: variable "." functionCall •  ["="]

    "="       reduce using rule 257 (assignable)
    $default  reduce using rule 180 (variable)


State 347

  179 variable: variable "." keywords •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  256 assignable: variable "." keywords •  ["="]

    "="       reduce using rule 256 (assignable)
    $default  reduce using rule 179 (variable)


State 348

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  132          | variable "** or ^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 132 (operation)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 132 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 132 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 132 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 132 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 132 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 132 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 132 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 132 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 132 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 132 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 132 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 132 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 132 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 132 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 132 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 132 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 132 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 132 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 132 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 132 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 132 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 132 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 132 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 132 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 132 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 132 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 132 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 132 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 132 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 132 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 132 and token "||" resolved as reduce ("||" < "** or ^").


State 349

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  131          | variable "** or ^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 131 (operation)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 131 and token "'" resolved as shift ("** or ^" < "'").
    Conflict between rule 131 and token ":" resolved as reduce (":" < "** or ^").
    Conflict between rule 131 and token "(" resolved as shift ("** or ^" < "(").
    Conflict between rule 131 and token "." resolved as shift ("** or ^" < ".").
    Conflict between rule 131 and token ".'" resolved as shift ("** or ^" < ".'").
    Conflict between rule 131 and token "+" resolved as reduce ("+" < "** or ^").
    Conflict between rule 131 and token "-" resolved as reduce ("-" < "** or ^").
    Conflict between rule 131 and token "*" resolved as reduce ("*" < "** or ^").
    Conflict between rule 131 and token ".*" resolved as reduce (".*" < "** or ^").
    Conflict between rule 131 and token ".*." resolved as reduce (".*." < "** or ^").
    Conflict between rule 131 and token "*." resolved as reduce ("*." < "** or ^").
    Conflict between rule 131 and token "/" resolved as reduce ("/" < "** or ^").
    Conflict between rule 131 and token "./" resolved as reduce ("./" < "** or ^").
    Conflict between rule 131 and token "/." resolved as reduce ("/." < "** or ^").
    Conflict between rule 131 and token "./." resolved as reduce ("./." < "** or ^").
    Conflict between rule 131 and token "\\" resolved as reduce ("\\" < "** or ^").
    Conflict between rule 131 and token ".\\" resolved as reduce (".\\" < "** or ^").
    Conflict between rule 131 and token "\\." resolved as reduce ("\\." < "** or ^").
    Conflict between rule 131 and token ".\\." resolved as reduce (".\\." < "** or ^").
    Conflict between rule 131 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 131 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 131 and token "==" resolved as reduce ("==" < "** or ^").
    Conflict between rule 131 and token "<> or ~=" resolved as reduce ("<> or ~=" < "** or ^").
    Conflict between rule 131 and token "<" resolved as reduce ("<" < "** or ^").
    Conflict between rule 131 and token "<=" resolved as reduce ("<=" < "** or ^").
    Conflict between rule 131 and token ">" resolved as reduce (">" < "** or ^").
    Conflict between rule 131 and token ">=" resolved as reduce (">=" < "** or ^").
    Conflict between rule 131 and token "&" resolved as reduce ("&" < "** or ^").
    Conflict between rule 131 and token "&&" resolved as reduce ("&&" < "** or ^").
    Conflict between rule 131 and token "|" resolved as reduce ("|" < "** or ^").
    Conflict between rule 131 and token "||" resolved as reduce ("||" < "** or ^").


State 350

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  136          | variable ".^" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 136 (operation)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 136 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 136 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 136 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 136 and token "." resolved as shift (".^" < ".").
    Conflict between rule 136 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 136 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 136 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 136 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 136 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 136 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 136 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 136 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 136 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 136 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 136 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 136 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 136 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 136 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 136 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 136 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 136 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 136 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 136 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 136 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 136 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 136 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 136 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 136 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 136 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 136 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 136 and token "||" resolved as reduce ("||" < ".^").


State 351

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  135          | variable ".^" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 135 (operation)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 135 and token "'" resolved as shift (".^" < "'").
    Conflict between rule 135 and token ":" resolved as reduce (":" < ".^").
    Conflict between rule 135 and token "(" resolved as shift (".^" < "(").
    Conflict between rule 135 and token "." resolved as shift (".^" < ".").
    Conflict between rule 135 and token ".'" resolved as shift (".^" < ".'").
    Conflict between rule 135 and token "+" resolved as reduce ("+" < ".^").
    Conflict between rule 135 and token "-" resolved as reduce ("-" < ".^").
    Conflict between rule 135 and token "*" resolved as reduce ("*" < ".^").
    Conflict between rule 135 and token ".*" resolved as reduce (".*" < ".^").
    Conflict between rule 135 and token ".*." resolved as reduce (".*." < ".^").
    Conflict between rule 135 and token "*." resolved as reduce ("*." < ".^").
    Conflict between rule 135 and token "/" resolved as reduce ("/" < ".^").
    Conflict between rule 135 and token "./" resolved as reduce ("./" < ".^").
    Conflict between rule 135 and token "/." resolved as reduce ("/." < ".^").
    Conflict between rule 135 and token "./." resolved as reduce ("./." < ".^").
    Conflict between rule 135 and token "\\" resolved as reduce ("\\" < ".^").
    Conflict between rule 135 and token ".\\" resolved as reduce (".\\" < ".^").
    Conflict between rule 135 and token "\\." resolved as reduce ("\\." < ".^").
    Conflict between rule 135 and token ".\\." resolved as reduce (".\\." < ".^").
    Conflict between rule 135 and token "** or ^" resolved as shift (%right "** or ^").
    Conflict between rule 135 and token ".^" resolved as shift (%right ".^").
    Conflict between rule 135 and token "==" resolved as reduce ("==" < ".^").
    Conflict between rule 135 and token "<> or ~=" resolved as reduce ("<> or ~=" < ".^").
    Conflict between rule 135 and token "<" resolved as reduce ("<" < ".^").
    Conflict between rule 135 and token "<=" resolved as reduce ("<=" < ".^").
    Conflict between rule 135 and token ">" resolved as reduce (">" < ".^").
    Conflict between rule 135 and token ">=" resolved as reduce (">=" < ".^").
    Conflict between rule 135 and token "&" resolved as reduce ("&" < ".^").
    Conflict between rule 135 and token "&&" resolved as reduce ("&&" < ".^").
    Conflict between rule 135 and token "|" resolved as reduce ("|" < ".^").
    Conflict between rule 135 and token "||" resolved as reduce ("||" < ".^").


State 352

  251 variableDeclaration: assignable "=" ":" •

    $default  reduce using rule 251 (variableDeclaration)


State 353

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  248 variableDeclaration: assignable "=" functionCall •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 248 (variableDeclaration)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 354

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  247 variableDeclaration: assignable "=" variable •  ["end of file", "end of line", ",", ";", ")", "}", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 247 (variableDeclaration)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 355

  253 variableDeclaration: assignable "=" returnControl •

    $default  reduce using rule 253 (variableDeclaration)


State 356

  324 selectConditionBreak: "end of line" •

    $default  reduce using rule 324 (selectConditionBreak)


State 357

  325 selectConditionBreak: "," • "end of line"
  327                     | "," •  ["case", "line comment"]

    "end of line"  shift, and go to state 449

    $default  reduce using rule 327 (selectConditionBreak)


State 358

  326 selectConditionBreak: ";" • "end of line"
  328                     | ";" •  ["case", "line comment"]

    "end of line"  shift, and go to state 450

    $default  reduce using rule 328 (selectConditionBreak)


State 359

  311 selectControl: select selectable "line comment" • selectConditionBreak casesControl "end"
  312              | select selectable "line comment" • selectConditionBreak casesControl defaultCase elseBody "end"
  324 selectConditionBreak: • "end of line"
  325                     | • "," "end of line"
  326                     | • ";" "end of line"
  327                     | • ","
  328                     | • ";"

    "end of line"  shift, and go to state 356
    ","            shift, and go to state 357
    ";"            shift, and go to state 358

    selectConditionBreak  go to state 451


State 360

  309 selectControl: select selectable selectConditionBreak • casesControl "end"
  310              | select selectable selectConditionBreak • casesControl defaultCase elseBody "end"
  329 casesControl: • "case" variable caseControlBreak caseBody
  330             | • "case" functionCall caseControlBreak caseBody
  331             | • comments "case" variable caseControlBreak caseBody
  332             | • comments "case" functionCall caseControlBreak caseBody
  333             | • casesControl "case" variable caseControlBreak caseBody
  334             | • casesControl "case" functionCall caseControlBreak caseBody
  395 comments: • "line comment" "end of line"
  396         | • comments "line comment" "end of line"

    "case"          shift, and go to state 452
    "line comment"  shift, and go to state 453

    casesControl  go to state 454
    comments      go to state 455


State 361

  222 matrix: "[" matrixOrCellColumns "]" •

    $default  reduce using rule 222 (matrix)


State 362

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  202 variable: functionCall "(" functionArgs • ")"

    ","  shift, and go to state 438
    ")"  shift, and go to state 456


State 363

  181 variable: functionCall "." "identifier" •

    $default  reduce using rule 181 (variable)


State 364

  182 variable: functionCall "." keywords •

    $default  reduce using rule 182 (variable)


State 365

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  201 variable: variable "(" functionArgs • ")"

    ","  shift, and go to state 438
    ")"  shift, and go to state 457


State 366

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"
  178 variable: variable "." "identifier" •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "'", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "("  shift, and go to state 103
    "{"  shift, and go to state 104

    $default  reduce using rule 178 (variable)

    Conflict between rule 178 and token "(" resolved as shift (UPLEVEL < "(").
    Conflict between rule 178 and token "{" resolved as shift (UPLEVEL < "{").


State 367

  180 variable: variable "." functionCall •

    $default  reduce using rule 180 (variable)


State 368

  179 variable: variable "." keywords •

    $default  reduce using rule 179 (variable)


State 369

   82 idList: idList "," • "identifier"

    "identifier"  shift, and go to state 458


State 370

   79 functionDeclarationArguments: "(" idList ")" •

    $default  reduce using rule 79 (functionDeclarationArguments)


State 371

   73 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "end of line" • "(" functionBody ")"
   75                          | "#" functionDeclarationArguments "->" "end of line" • "(" "end of line" functionBody ")"

    "("  shift, and go to state 459


State 372

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   72                          | "#" functionDeclarationArguments "->" "(" • functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   74                          | "#" functionDeclarationArguments "->" "(" • "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   89 functionBody: • expressions
   90             | ε •  [")"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 460
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    ")"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 462
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 373

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  207 variableFields: functionCall "," functionCall •  [",", ")"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 207 (variableFields)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 374

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  208 variableFields: functionCall "," variable •  [",", ")"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 208 (variableFields)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 375

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  209 variableFields: variable "," functionCall •  [",", ")"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 209 (variableFields)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 376

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  206 variableFields: variable "," variable •  [",", ")"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 206 (variableFields)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 377

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  205 variableFields: variableFields "," functionCall •  [",", ")"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 205 (variableFields)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 378

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  204 variableFields: variableFields "," variable •  [",", ")"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 204 (variableFields)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 379

  219 matrix: "[" "end of line" matrixOrCellLines "]" •

    $default  reduce using rule 219 (matrix)


State 380

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  221       | "[" "end of line" matrixOrCellLines matrixOrCellColumns • "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "]"               shift, and go to state 463
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 381

  223 matrix: "[" "end of line" matrixOrCellColumns "]" •

    $default  reduce using rule 223 (matrix)


State 382

  220 matrix: "[" matrixOrCellLines matrixOrCellColumns "]" •

    $default  reduce using rule 220 (matrix)


State 383

  230 matrixOrCellLineBreak: matrixOrCellLineBreak "end of line" •

    $default  reduce using rule 230 (matrixOrCellLineBreak)


State 384

  231 matrixOrCellLineBreak: matrixOrCellLineBreak ";" •

    $default  reduce using rule 231 (matrixOrCellLineBreak)


State 385

  244 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak "spaces" •

    $default  reduce using rule 244 (matrixOrCellColumnsBreak)


State 386

  243 matrixOrCellColumnsBreak: matrixOrCellColumnsBreak "," •

    $default  reduce using rule 243 (matrixOrCellColumnsBreak)


State 387

  239 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak "line comment" •

    $default  reduce using rule 239 (matrixOrCellColumns)


State 388

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  235 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak functionCall •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 235 (matrixOrCellColumns)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 235 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 235 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 235 and token "-" resolved as shift (HIGHLEVEL < "-").


State 389

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  234 matrixOrCellColumns: matrixOrCellColumns matrixOrCellColumnsBreak variable •  ["end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", "[", "]", "{", "}", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 234 (matrixOrCellColumns)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 234 and token "(" resolved as shift (HIGHLEVEL < "(").
    Conflict between rule 234 and token "+" resolved as shift (HIGHLEVEL < "+").
    Conflict between rule 234 and token "-" resolved as shift (HIGHLEVEL < "-").


State 390

  230 matrixOrCellLineBreak: matrixOrCellLineBreak • "end of line"
  231                      | matrixOrCellLineBreak • ";"
  233 matrixOrCellLine: matrixOrCellColumns matrixOrCellColumnsBreak matrixOrCellLineBreak •  ["%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "]", "{", "}", "+", "-", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 383
    ";"            shift, and go to state 384

    $default  reduce using rule 233 (matrixOrCellLine)


State 391

  211 cell: "{" "end of line" matrixOrCellLines "}" •

    $default  reduce using rule 211 (cell)


State 392

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  213     | "{" "end of line" matrixOrCellLines matrixOrCellColumns • "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  228 matrixOrCellLineBreak: • ";"
  229                      | • "end of line"
  230                      | • matrixOrCellLineBreak "end of line"
  231                      | • matrixOrCellLineBreak ";"
  232 matrixOrCellLine: matrixOrCellColumns • matrixOrCellLineBreak
  233                 | matrixOrCellColumns • matrixOrCellColumnsBreak matrixOrCellLineBreak
  234 matrixOrCellColumns: matrixOrCellColumns • matrixOrCellColumnsBreak variable
  235                    | matrixOrCellColumns • matrixOrCellColumnsBreak functionCall
  236                    | matrixOrCellColumns • variable
  237                    | matrixOrCellColumns • functionCall
  238                    | matrixOrCellColumns • "line comment"
  239                    | matrixOrCellColumns • matrixOrCellColumnsBreak "line comment"
  243 matrixOrCellColumnsBreak: • matrixOrCellColumnsBreak ","
  244                         | • matrixOrCellColumnsBreak "spaces"
  245                         | • ","
  246                         | • "spaces"

    "end of line"     shift, and go to state 191
    "spaces"          shift, and go to state 192
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 193
    ";"               shift, and go to state 194
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "}"               shift, and go to state 464
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 196

    functionCall               go to state 197
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 198
    cell                       go to state 46
    matrix                     go to state 47
    matrixOrCellLineBreak      go to state 199
    matrixOrCellColumnsBreak   go to state 200


State 393

  215 cell: "{" "end of line" matrixOrCellColumns "}" •

    $default  reduce using rule 215 (cell)


State 394

  212 cell: "{" matrixOrCellLines matrixOrCellColumns "}" •

    $default  reduce using rule 212 (cell)


State 395

  274 argumentName: "identifier" "." • "identifier"

    "identifier"  shift, and go to state 465


State 396

  270 argumentsDeclarations: "line comment" "end of line" •

    $default  reduce using rule 270 (argumentsDeclarations)


State 397

  265 argumentsControl: "arguments" "end of line" argumentsDeclarations "end" •

    $default  reduce using rule 265 (argumentsControl)


State 398

  268 argumentsDeclarations: argumentsDeclarations "line comment" • "end of line"

    "end of line"  shift, and go to state 466


State 399

  267 argumentsDeclarations: argumentsDeclarations argumentDeclaration • lineEnd
  397 lineEnd: • "end of line"
  398        | • "line comment" "end of line"

    "end of line"   shift, and go to state 400
    "line comment"  shift, and go to state 401

    lineEnd  go to state 467


State 400

  397 lineEnd: "end of line" •

    $default  reduce using rule 397 (lineEnd)


State 401

  398 lineEnd: "line comment" • "end of line"

    "end of line"  shift, and go to state 468


State 402

  269 argumentsDeclarations: argumentDeclaration lineEnd •

    $default  reduce using rule 269 (argumentsDeclarations)


State 403

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  275 argumentDimension: "(" • functionArgs ")"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 469
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 404

  271 argumentDeclaration: argumentName argumentDimension • argumentValidators argumentDefaultValue
  272                    | argumentName argumentDimension • "identifier" argumentValidators argumentDefaultValue
  277 argumentValidators: • "{" functionArgs "}"
  278                   | ε •  ["end of line", "=", "line comment"]

    "{"           shift, and go to state 470
    "identifier"  shift, and go to state 471

    $default  reduce using rule 278 (argumentValidators)

    argumentValidators  go to state 472


State 405

  292 ifConditionBreak: "," "end of line" •

    $default  reduce using rule 292 (ifConditionBreak)


State 406

  290 ifConditionBreak: ";" "end of line" •

    $default  reduce using rule 290 (ifConditionBreak)


State 407

  297 then: "then" ifConditionBreak •

    $default  reduce using rule 297 (then)


State 408

  295 then: ifConditionBreak "then" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  296     | ifConditionBreak "then" • "end of line"

    "end of line"  shift, and go to state 473

    $default  reduce using rule 295 (then)


State 409

  285 thenBody: expressions •

    $default  reduce using rule 285 (thenBody)


State 410

  282 ifControl: "if" condition then thenBody • "end"
  283          | "if" condition then thenBody • else elseBody "end"
  284          | "if" condition then thenBody • elseIfControl "end"
  300 else: • "else"
  301     | • "else" ","
  302     | • "else" ";"
  303     | • "else" "end of line"
  304     | • "else" "," "end of line"
  305     | • "else" ";" "end of line"
  306 elseIfControl: • "elseif" condition then thenBody
  307              | • "elseif" condition then thenBody else elseBody
  308              | • "elseif" condition then thenBody elseIfControl

    "else"    shift, and go to state 474
    "elseif"  shift, and go to state 475
    "end"     shift, and go to state 476

    else           go to state 477
    elseIfControl  go to state 478


State 411

   70 functionDeclaration: "function" "[" "]" "=" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "identifier"  shift, and go to state 479


State 412

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" • "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "="  shift, and go to state 480


State 413

   68 functionDeclaration: "function" "identifier" "=" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   79 functionDeclarationArguments: • "(" idList ")"
   80                             | • "(" ")"
   81                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 63

    $default  reduce using rule 81 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 481


State 414

   87 functionDeclarationBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "endfunction", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   88                         | "," • "end of line"

    "end of line"  shift, and go to state 482

    $default  reduce using rule 87 (functionDeclarationBreak)


State 415

   85 functionDeclarationBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "endfunction", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   86                         | ";" • "end of line"

    "end of line"  shift, and go to state 483

    $default  reduce using rule 85 (functionDeclarationBreak)


State 416

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | "function" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   89 functionBody: • expressions
   90             | ε •  ["end", "endfunction"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"          reduce using rule 90 (functionBody)
    "endfunction"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 484
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 417

   84 functionDeclarationBreak: lineEnd •

    $default  reduce using rule 84 (functionDeclarationBreak)


State 418

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  350 forControl: "for" "(" "identifier" "=" • forIterator ")" forConditionBreak forBody "end"
  351 forIterator: • functionCall
  352            | • variable

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 419
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 420
    cell                       go to state 46
    matrix                     go to state 47
    forIterator                go to state 485


State 419

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  351 forIterator: functionCall •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "{", "arguments", "if", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 351 (forIterator)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 351 and token "(" resolved as shift (UPLEVEL < "(").
    Conflict between rule 351 and token "+" resolved as shift (UPLEVEL < "+").
    Conflict between rule 351 and token "-" resolved as shift (UPLEVEL < "-").


State 420

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  352 forIterator: variable •  [error, "end of line", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ";", ")", "[", "{", "arguments", "if", "end", "select", "switch", "function", "for", "while", "do", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 352 (forIterator)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 352 and token "(" resolved as shift (UPLEVEL < "(").
    Conflict between rule 352 and token "+" resolved as shift (UPLEVEL < "+").
    Conflict between rule 352 and token "-" resolved as shift (UPLEVEL < "-").


State 421

  349 forControl: "for" "identifier" "=" forIterator • forConditionBreak forBody "end"
  353 forConditionBreak: • "end of line"
  354                  | • ";"
  355                  | • ";" "end of line"
  356                  | • ","
  357                  | • "," "end of line"
  358                  | • "do"
  359                  | • "do" "end of line"
  360                  | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 486
    ","            shift, and go to state 487
    ";"            shift, and go to state 488
    "do"           shift, and go to state 489

    $default  reduce using rule 360 (forConditionBreak)

    forConditionBreak  go to state 490


State 422

  376 whileConditionBreak: "," "end of line" •

    $default  reduce using rule 376 (whileConditionBreak)


State 423

  377 whileConditionBreak: ";" "end of line" •

    $default  reduce using rule 377 (whileConditionBreak)


State 424

  381 whileConditionBreak: "then" "end of line" •

    $default  reduce using rule 381 (whileConditionBreak)


State 425

  372 whileConditionBreak: "then" "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  382                    | "then" "," • "end of line"

    "end of line"  shift, and go to state 491

    $default  reduce using rule 372 (whileConditionBreak)


State 426

  373 whileConditionBreak: "then" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  383                    | "then" ";" • "end of line"

    "end of line"  shift, and go to state 492

    $default  reduce using rule 373 (whileConditionBreak)


State 427

  378 whileConditionBreak: "do" "end of line" •

    $default  reduce using rule 378 (whileConditionBreak)


State 428

  369 whileConditionBreak: "do" "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  379                    | "do" "," • "end of line"

    "end of line"  shift, and go to state 493

    $default  reduce using rule 369 (whileConditionBreak)


State 429

  370 whileConditionBreak: "do" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  380                    | "do" ";" • "end of line"

    "end of line"  shift, and go to state 494

    $default  reduce using rule 370 (whileConditionBreak)


State 430

  374 whileConditionBreak: "line comment" "end of line" •

    $default  reduce using rule 374 (whileConditionBreak)


State 431

  364 whileBody: expressions •

    $default  reduce using rule 364 (whileBody)


State 432

  363 whileControl: "while" condition whileConditionBreak whileBody • "end"

    "end"  shift, and go to state 495


State 433

  384 tryControl: "try" catchBody "catch" catchBody • "end"

    "end"  shift, and go to state 496


State 434

   61 functionArgs: "," ":" •

    $default  reduce using rule 61 (functionArgs)


State 435

   60 functionArgs: "," functionCall •  [",", ")", "}"]
   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  249 variableDeclaration: functionCall • "=" variable
  250                    | functionCall • "=" functionCall
  252                    | functionCall • "=" ":"
  254                    | functionCall • "=" returnControl
  258 assignable: functionCall • "." "identifier"
  259           | functionCall • "." keywords
  263           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 123
    "."         shift, and go to state 124
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151
    "="         shift, and go to state 152

    $default  reduce using rule 60 (functionArgs)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 436

   59 functionArgs: "," variable •  [",", ")", "}"]
   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  255 assignable: variable • "." "identifier"
  256           | variable • "." keywords
  257           | variable • "." functionCall
  262           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 158
    "."         shift, and go to state 159
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 59 (functionArgs)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 437

   62 functionArgs: "," variableDeclaration •

    $default  reduce using rule 62 (functionArgs)


State 438

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   63 functionArgs: functionArgs "," •  [",", ")", "}"]
   64             | functionArgs "," • variable
   65             | functionArgs "," • functionCall
   66             | functionArgs "," • ":"
   67             | functionArgs "," • variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ":"               shift, and go to state 497
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    $default  reduce using rule 63 (functionArgs)

    functionCall               go to state 498
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 499
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 500
    assignable                 go to state 49
    multipleResults            go to state 50


State 439

   50 simpleFunctionCall: "identifier" "(" functionArgs ")" •

    $default  reduce using rule 50 (simpleFunctionCall)


State 440

   51 simpleFunctionCall: "identifier" "{" functionArgs "}" •

    $default  reduce using rule 51 (simpleFunctionCall)


State 441

   46 implicitCallable: implicitCallable "." "identifier" •

    $default  reduce using rule 46 (implicitCallable)


State 442

   11 recursiveExpression: recursiveExpression expression "line comment" expressionLineBreak •  ["end of file", error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", ")", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
   17 expressionLineBreak: expressionLineBreak • ";"
   18                    | expressionLineBreak • ","
   19                    | expressionLineBreak • "end of line"

    "end of line"  shift, and go to state 114
    ","            shift, and go to state 115
    ";"            shift, and go to state 116

    $default  reduce using rule 11 (recursiveExpression)


State 443

  202 variable: functionCall "(" functionArgs ")" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  263 assignable: functionCall "(" functionArgs ")" •  ["="]

    "="       reduce using rule 263 (assignable)
    $default  reduce using rule 202 (variable)


State 444

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  174            | listableBegin ":" functionCall •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"

    "'"        shift, and go to state 121
    "("        shift, and go to state 171
    "."        shift, and go to state 172
    ".'"       shift, and go to state 125
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 140
    ".^"       shift, and go to state 141

    $default  reduce using rule 174 (listableEnd)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156

    Conflict between rule 174 and token "'" resolved as shift (":" < "'").
    Conflict between rule 174 and token ":" resolved as reduce (%left ":").
    Conflict between rule 174 and token "(" resolved as shift (":" < "(").
    Conflict between rule 174 and token "." resolved as shift (":" < ".").
    Conflict between rule 174 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 174 and token "+" resolved as shift (":" < "+").
    Conflict between rule 174 and token "-" resolved as shift (":" < "-").
    Conflict between rule 174 and token "*" resolved as shift (":" < "*").
    Conflict between rule 174 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 174 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 174 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 174 and token "/" resolved as shift (":" < "/").
    Conflict between rule 174 and token "./" resolved as shift (":" < "./").
    Conflict between rule 174 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 174 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 174 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 174 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 174 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 174 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 174 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 174 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 174 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 174 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 174 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 174 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 174 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 174 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 174 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 174 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 174 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 174 and token "||" resolved as reduce ("||" < ":").


State 445

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  173            | listableBegin ":" variable •  ["end of file", error, "end of line", "spaces", "%t or %T", "%f or %F", "~ or @", "#", "$", ",", ":", ";", ")", "[", "]", "{", "}", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "arguments", "if", "then", "else", "elseif", "end", "select", "switch", "case", "otherwise", "function", "endfunction", "for", "while", "do", "break", "continue", "try", "catch", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"

    "'"        shift, and go to state 157
    "("        shift, and go to state 173
    "."        shift, and go to state 174
    ".'"       shift, and go to state 160
    "+"        shift, and go to state 126
    "-"        shift, and go to state 127
    "*"        shift, and go to state 128
    ".*"       shift, and go to state 129
    ".*."      shift, and go to state 130
    "*."       shift, and go to state 131
    "/"        shift, and go to state 132
    "./"       shift, and go to state 133
    "/."       shift, and go to state 134
    "./."      shift, and go to state 135
    "\\"       shift, and go to state 136
    ".\\"      shift, and go to state 137
    "\\."      shift, and go to state 138
    ".\\."     shift, and go to state 139
    "** or ^"  shift, and go to state 161
    ".^"       shift, and go to state 162

    $default  reduce using rule 173 (listableEnd)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165

    Conflict between rule 173 and token "'" resolved as shift (":" < "'").
    Conflict between rule 173 and token ":" resolved as reduce (%left ":").
    Conflict between rule 173 and token "(" resolved as shift (":" < "(").
    Conflict between rule 173 and token "." resolved as shift (":" < ".").
    Conflict between rule 173 and token ".'" resolved as shift (":" < ".'").
    Conflict between rule 173 and token "+" resolved as shift (":" < "+").
    Conflict between rule 173 and token "-" resolved as shift (":" < "-").
    Conflict between rule 173 and token "*" resolved as shift (":" < "*").
    Conflict between rule 173 and token ".*" resolved as shift (":" < ".*").
    Conflict between rule 173 and token ".*." resolved as shift (":" < ".*.").
    Conflict between rule 173 and token "*." resolved as shift (":" < "*.").
    Conflict between rule 173 and token "/" resolved as shift (":" < "/").
    Conflict between rule 173 and token "./" resolved as shift (":" < "./").
    Conflict between rule 173 and token "/." resolved as shift (":" < "/.").
    Conflict between rule 173 and token "./." resolved as shift (":" < "./.").
    Conflict between rule 173 and token "\\" resolved as shift (":" < "\\").
    Conflict between rule 173 and token ".\\" resolved as shift (":" < ".\\").
    Conflict between rule 173 and token "\\." resolved as shift (":" < "\\.").
    Conflict between rule 173 and token ".\\." resolved as shift (":" < ".\\.").
    Conflict between rule 173 and token "** or ^" resolved as shift (":" < "** or ^").
    Conflict between rule 173 and token ".^" resolved as shift (":" < ".^").
    Conflict between rule 173 and token "==" resolved as reduce ("==" < ":").
    Conflict between rule 173 and token "<> or ~=" resolved as reduce ("<> or ~=" < ":").
    Conflict between rule 173 and token "<" resolved as reduce ("<" < ":").
    Conflict between rule 173 and token "<=" resolved as reduce ("<=" < ":").
    Conflict between rule 173 and token ">" resolved as reduce (">" < ":").
    Conflict between rule 173 and token ">=" resolved as reduce (">=" < ":").
    Conflict between rule 173 and token "&" resolved as reduce ("&" < ":").
    Conflict between rule 173 and token "&&" resolved as reduce ("&&" < ":").
    Conflict between rule 173 and token "|" resolved as reduce ("|" < ":").
    Conflict between rule 173 and token "||" resolved as reduce ("||" < ":").


State 446

  201 variable: variable "(" functionArgs ")" •  ["end of file", "end of line", "'", ",", ":", ";", "(", ")", "}", ".", ".'", "+", "-", "*", ".*", ".*.", "*.", "/", "./", "/.", "./.", "\\", ".\\", "\\.", ".\\.", "** or ^", ".^", "==", "<> or ~=", "<", "<=", ">", ">=", "&", "&&", "|", "||", "else", "elseif", "end", "case", "otherwise", "endfunction", "catch", "line comment"]
  262 assignable: variable "(" functionArgs ")" •  ["="]

    "="       reduce using rule 262 (assignable)
    $default  reduce using rule 201 (variable)


State 447

   50 simpleFunctionCall: "identifier" • "(" functionArgs ")"
   51                   | "identifier" • "{" functionArgs "}"
   52                   | "identifier" • "(" ")"
   53                   | "identifier" • "{" "}"

    "("  shift, and go to state 103
    "{"  shift, and go to state 104


State 448

   49 functionCall: "(" functionCall • ")"

    ")"  shift, and go to state 180


State 449

  325 selectConditionBreak: "," "end of line" •

    $default  reduce using rule 325 (selectConditionBreak)


State 450

  326 selectConditionBreak: ";" "end of line" •

    $default  reduce using rule 326 (selectConditionBreak)


State 451

  311 selectControl: select selectable "line comment" selectConditionBreak • casesControl "end"
  312              | select selectable "line comment" selectConditionBreak • casesControl defaultCase elseBody "end"
  329 casesControl: • "case" variable caseControlBreak caseBody
  330             | • "case" functionCall caseControlBreak caseBody
  331             | • comments "case" variable caseControlBreak caseBody
  332             | • comments "case" functionCall caseControlBreak caseBody
  333             | • casesControl "case" variable caseControlBreak caseBody
  334             | • casesControl "case" functionCall caseControlBreak caseBody
  395 comments: • "line comment" "end of line"
  396         | • comments "line comment" "end of line"

    "case"          shift, and go to state 452
    "line comment"  shift, and go to state 453

    casesControl  go to state 501
    comments      go to state 455


State 452

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  329 casesControl: "case" • variable caseControlBreak caseBody
  330             | "case" • functionCall caseControlBreak caseBody

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 502
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 503
    cell                       go to state 46
    matrix                     go to state 47


State 453

  395 comments: "line comment" • "end of line"

    "end of line"  shift, and go to state 504


State 454

  300 else: • "else"
  301     | • "else" ","
  302     | • "else" ";"
  303     | • "else" "end of line"
  304     | • "else" "," "end of line"
  305     | • "else" ";" "end of line"
  309 selectControl: select selectable selectConditionBreak casesControl • "end"
  310              | select selectable selectConditionBreak casesControl • defaultCase elseBody "end"
  315 defaultCase: • else
  316            | • "otherwise"
  317            | • "otherwise" ","
  318            | • "otherwise" ";"
  319            | • "otherwise" "end of line"
  320            | • "otherwise" "," "end of line"
  321            | • "otherwise" ";" "end of line"
  333 casesControl: casesControl • "case" variable caseControlBreak caseBody
  334             | casesControl • "case" functionCall caseControlBreak caseBody

    "else"       shift, and go to state 474
    "end"        shift, and go to state 505
    "case"       shift, and go to state 506
    "otherwise"  shift, and go to state 507

    else         go to state 508
    defaultCase  go to state 509


State 455

  331 casesControl: comments • "case" variable caseControlBreak caseBody
  332             | comments • "case" functionCall caseControlBreak caseBody
  396 comments: comments • "line comment" "end of line"

    "case"          shift, and go to state 510
    "line comment"  shift, and go to state 511


State 456

  202 variable: functionCall "(" functionArgs ")" •

    $default  reduce using rule 202 (variable)


State 457

  201 variable: variable "(" functionArgs ")" •

    $default  reduce using rule 201 (variable)


State 458

   82 idList: idList "," "identifier" •

    $default  reduce using rule 82 (idList)


State 459

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   73                          | "#" functionDeclarationArguments "->" "end of line" "(" • functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   75                          | "#" functionDeclarationArguments "->" "end of line" "(" • "end of line" functionBody ")"
   89 functionBody: • expressions
   90             | ε •  [")"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "end of line"     shift, and go to state 512
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    ")"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 513
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 460

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   74                          | "#" functionDeclarationArguments "->" "(" "end of line" • functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   89 functionBody: • expressions
   90             | ε •  [")"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    ")"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 514
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 461

   89 functionBody: expressions •

    $default  reduce using rule 89 (functionBody)


State 462

   72 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "(" functionBody • ")"

    ")"  shift, and go to state 515


State 463

  221 matrix: "[" "end of line" matrixOrCellLines matrixOrCellColumns "]" •

    $default  reduce using rule 221 (matrix)


State 464

  213 cell: "{" "end of line" matrixOrCellLines matrixOrCellColumns "}" •

    $default  reduce using rule 213 (cell)


State 465

  274 argumentName: "identifier" "." "identifier" •

    $default  reduce using rule 274 (argumentName)


State 466

  268 argumentsDeclarations: argumentsDeclarations "line comment" "end of line" •

    $default  reduce using rule 268 (argumentsDeclarations)


State 467

  267 argumentsDeclarations: argumentsDeclarations argumentDeclaration lineEnd •

    $default  reduce using rule 267 (argumentsDeclarations)


State 468

  398 lineEnd: "line comment" "end of line" •

    $default  reduce using rule 398 (lineEnd)


State 469

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  275 argumentDimension: "(" functionArgs • ")"

    ","  shift, and go to state 438
    ")"  shift, and go to state 516


State 470

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   54 functionArgs: • variable
   55             | • functionCall
   56             | • ":"
   57             | • variableDeclaration
   58             | • ","
   59             | • "," variable
   60             | • "," functionCall
   61             | • "," ":"
   62             | • "," variableDeclaration
   63             | • functionArgs ","
   64             | • functionArgs "," variable
   65             | • functionArgs "," functionCall
   66             | • functionArgs "," ":"
   67             | • functionArgs "," variableDeclaration
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  277 argumentValidators: "{" • functionArgs "}"

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    ","               shift, and go to state 238
    ":"               shift, and go to state 239
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 241
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 242
    simpleFunctionCall         go to state 40
    functionArgs               go to state 517
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 244
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 245
    assignable                 go to state 49
    multipleResults            go to state 50


State 471

  272 argumentDeclaration: argumentName argumentDimension "identifier" • argumentValidators argumentDefaultValue
  277 argumentValidators: • "{" functionArgs "}"
  278                   | ε •  ["end of line", "=", "line comment"]

    "{"  shift, and go to state 470

    $default  reduce using rule 278 (argumentValidators)

    argumentValidators  go to state 518


State 472

  271 argumentDeclaration: argumentName argumentDimension argumentValidators • argumentDefaultValue
  279 argumentDefaultValue: • "=" variable
  280                     | • "=" functionCall
  281                     | ε •  ["end of line", "line comment"]

    "="  shift, and go to state 519

    $default  reduce using rule 281 (argumentDefaultValue)

    argumentDefaultValue  go to state 520


State 473

  296 then: ifConditionBreak "then" "end of line" •

    $default  reduce using rule 296 (then)


State 474

  300 else: "else" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  301     | "else" • ","
  302     | "else" • ";"
  303     | "else" • "end of line"
  304     | "else" • "," "end of line"
  305     | "else" • ";" "end of line"

    "end of line"  shift, and go to state 521
    ","            shift, and go to state 522
    ";"            shift, and go to state 523

    $default  reduce using rule 300 (else)


State 475

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   91 condition: • functionCall
   92          | • variable
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  306 elseIfControl: "elseif" • condition then thenBody
  307              | "elseif" • condition then thenBody else elseBody
  308              | "elseif" • condition then thenBody elseIfControl

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 85
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    condition                  go to state 524
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 87
    cell                       go to state 46
    matrix                     go to state 47


State 476

  282 ifControl: "if" condition then thenBody "end" •

    $default  reduce using rule 282 (ifControl)


State 477

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  283          | "if" condition then thenBody else • elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  287 elseBody: • expressions
  288         | ε •  ["end"]
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 288 (elseBody)

    expressions                go to state 525
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    elseBody                   go to state 526
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 478

  284 ifControl: "if" condition then thenBody elseIfControl • "end"

    "end"  shift, and go to state 527


State 479

   70 functionDeclaration: "function" "[" "]" "=" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   79 functionDeclarationArguments: • "(" idList ")"
   80                             | • "(" ")"
   81                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 63

    $default  reduce using rule 81 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 528


State 480

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" • "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction

    "identifier"  shift, and go to state 529


State 481

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   84 functionDeclarationBreak: • lineEnd
   85                         | • ";"
   86                         | • ";" "end of line"
   87                         | • ","
   88                         | • "," "end of line"
  397 lineEnd: • "end of line"
  398        | • "line comment" "end of line"

    "end of line"   shift, and go to state 400
    ","             shift, and go to state 414
    ";"             shift, and go to state 415
    "line comment"  shift, and go to state 401

    functionDeclarationBreak  go to state 530
    lineEnd                   go to state 417


State 482

   88 functionDeclarationBreak: "," "end of line" •

    $default  reduce using rule 88 (functionDeclarationBreak)


State 483

   86 functionDeclarationBreak: ";" "end of line" •

    $default  reduce using rule 86 (functionDeclarationBreak)


State 484

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   76 endfunction: • "endfunction"
   77            | • "end"

    "end"          shift, and go to state 531
    "endfunction"  shift, and go to state 532

    endfunction  go to state 533


State 485

  350 forControl: "for" "(" "identifier" "=" forIterator • ")" forConditionBreak forBody "end"

    ")"  shift, and go to state 534


State 486

  353 forConditionBreak: "end of line" •

    $default  reduce using rule 353 (forConditionBreak)


State 487

  356 forConditionBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  357                  | "," • "end of line"

    "end of line"  shift, and go to state 535

    $default  reduce using rule 356 (forConditionBreak)


State 488

  354 forConditionBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  355                  | ";" • "end of line"

    "end of line"  shift, and go to state 536

    $default  reduce using rule 354 (forConditionBreak)


State 489

  358 forConditionBreak: "do" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  359                  | "do" • "end of line"

    "end of line"  shift, and go to state 537

    $default  reduce using rule 358 (forConditionBreak)


State 490

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  349           | "for" "identifier" "=" forIterator forConditionBreak • forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  361 forBody: • expressions
  362        | ε •  ["end"]
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 362 (forBody)

    expressions                go to state 538
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    forBody                    go to state 539
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 491

  382 whileConditionBreak: "then" "," "end of line" •

    $default  reduce using rule 382 (whileConditionBreak)


State 492

  383 whileConditionBreak: "then" ";" "end of line" •

    $default  reduce using rule 383 (whileConditionBreak)


State 493

  379 whileConditionBreak: "do" "," "end of line" •

    $default  reduce using rule 379 (whileConditionBreak)


State 494

  380 whileConditionBreak: "do" ";" "end of line" •

    $default  reduce using rule 380 (whileConditionBreak)


State 495

  363 whileControl: "while" condition whileConditionBreak whileBody "end" •

    $default  reduce using rule 363 (whileControl)


State 496

  384 tryControl: "try" catchBody "catch" catchBody "end" •

    $default  reduce using rule 384 (tryControl)


State 497

   66 functionArgs: functionArgs "," ":" •

    $default  reduce using rule 66 (functionArgs)


State 498

   65 functionArgs: functionArgs "," functionCall •  [",", ")", "}"]
   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  249 variableDeclaration: functionCall • "=" variable
  250                    | functionCall • "=" functionCall
  252                    | functionCall • "=" ":"
  254                    | functionCall • "=" returnControl
  258 assignable: functionCall • "." "identifier"
  259           | functionCall • "." keywords
  263           | functionCall • "(" functionArgs ")"

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 123
    "."         shift, and go to state 124
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151
    "="         shift, and go to state 152

    $default  reduce using rule 65 (functionArgs)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 499

   64 functionArgs: functionArgs "," variable •  [",", ")", "}"]
   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  255 assignable: variable • "." "identifier"
  256           | variable • "." keywords
  257           | variable • "." functionCall
  262           | variable • "(" functionArgs ")"

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 158
    "."         shift, and go to state 159
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 64 (functionArgs)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 500

   67 functionArgs: functionArgs "," variableDeclaration •

    $default  reduce using rule 67 (functionArgs)


State 501

  300 else: • "else"
  301     | • "else" ","
  302     | • "else" ";"
  303     | • "else" "end of line"
  304     | • "else" "," "end of line"
  305     | • "else" ";" "end of line"
  311 selectControl: select selectable "line comment" selectConditionBreak casesControl • "end"
  312              | select selectable "line comment" selectConditionBreak casesControl • defaultCase elseBody "end"
  315 defaultCase: • else
  316            | • "otherwise"
  317            | • "otherwise" ","
  318            | • "otherwise" ";"
  319            | • "otherwise" "end of line"
  320            | • "otherwise" "," "end of line"
  321            | • "otherwise" ";" "end of line"
  333 casesControl: casesControl • "case" variable caseControlBreak caseBody
  334             | casesControl • "case" functionCall caseControlBreak caseBody

    "else"       shift, and go to state 474
    "end"        shift, and go to state 540
    "case"       shift, and go to state 506
    "otherwise"  shift, and go to state 507

    else         go to state 508
    defaultCase  go to state 541


State 502

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  330 casesControl: "case" functionCall • caseControlBreak caseBody
  337 caseControlBreak: • "then"
  338                 | • ","
  339                 | • ";"
  340                 | • "end of line"
  341                 | • "then" "end of line"
  342                 | • "," "end of line"
  343                 | • ";" "end of line"
  344                 | • "then" ","
  345                 | • "then" "," "end of line"
  346                 | • "then" ";"
  347                 | • "then" ";" "end of line"
  348                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 542
    "'"            shift, and go to state 121
    ","            shift, and go to state 543
    ":"            shift, and go to state 122
    ";"            shift, and go to state 544
    "("            shift, and go to state 171
    "."            shift, and go to state 172
    ".'"           shift, and go to state 125
    "+"            shift, and go to state 126
    "-"            shift, and go to state 127
    "*"            shift, and go to state 128
    ".*"           shift, and go to state 129
    ".*."          shift, and go to state 130
    "*."           shift, and go to state 131
    "/"            shift, and go to state 132
    "./"           shift, and go to state 133
    "/."           shift, and go to state 134
    "./."          shift, and go to state 135
    "\\"           shift, and go to state 136
    ".\\"          shift, and go to state 137
    "\\."          shift, and go to state 138
    ".\\."         shift, and go to state 139
    "** or ^"      shift, and go to state 140
    ".^"           shift, and go to state 141
    "=="           shift, and go to state 142
    "<> or ~="     shift, and go to state 143
    "<"            shift, and go to state 144
    "<="           shift, and go to state 145
    ">"            shift, and go to state 146
    ">="           shift, and go to state 147
    "&"            shift, and go to state 148
    "&&"           shift, and go to state 149
    "|"            shift, and go to state 150
    "||"           shift, and go to state 151
    "then"         shift, and go to state 545

    $default  reduce using rule 348 (caseControlBreak)

    rightComparable   go to state 153
    rightOperand      go to state 154
    listableBegin     go to state 155
    listableEnd       go to state 156
    caseControlBreak  go to state 546

    Conflict between rule 348 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 348 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 348 and token "-" resolved as shift (CONTROLBREAK < "-").


State 503

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  329 casesControl: "case" variable • caseControlBreak caseBody
  337 caseControlBreak: • "then"
  338                 | • ","
  339                 | • ";"
  340                 | • "end of line"
  341                 | • "then" "end of line"
  342                 | • "," "end of line"
  343                 | • ";" "end of line"
  344                 | • "then" ","
  345                 | • "then" "," "end of line"
  346                 | • "then" ";"
  347                 | • "then" ";" "end of line"
  348                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 542
    "'"            shift, and go to state 157
    ","            shift, and go to state 543
    ":"            shift, and go to state 122
    ";"            shift, and go to state 544
    "("            shift, and go to state 173
    "."            shift, and go to state 174
    ".'"           shift, and go to state 160
    "+"            shift, and go to state 126
    "-"            shift, and go to state 127
    "*"            shift, and go to state 128
    ".*"           shift, and go to state 129
    ".*."          shift, and go to state 130
    "*."           shift, and go to state 131
    "/"            shift, and go to state 132
    "./"           shift, and go to state 133
    "/."           shift, and go to state 134
    "./."          shift, and go to state 135
    "\\"           shift, and go to state 136
    ".\\"          shift, and go to state 137
    "\\."          shift, and go to state 138
    ".\\."         shift, and go to state 139
    "** or ^"      shift, and go to state 161
    ".^"           shift, and go to state 162
    "=="           shift, and go to state 142
    "<> or ~="     shift, and go to state 143
    "<"            shift, and go to state 144
    "<="           shift, and go to state 145
    ">"            shift, and go to state 146
    ">="           shift, and go to state 147
    "&"            shift, and go to state 148
    "&&"           shift, and go to state 149
    "|"            shift, and go to state 150
    "||"           shift, and go to state 151
    "then"         shift, and go to state 545

    $default  reduce using rule 348 (caseControlBreak)

    rightComparable   go to state 163
    rightOperand      go to state 164
    listableBegin     go to state 155
    listableEnd       go to state 165
    caseControlBreak  go to state 547

    Conflict between rule 348 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 348 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 348 and token "-" resolved as shift (CONTROLBREAK < "-").


State 504

  395 comments: "line comment" "end of line" •

    $default  reduce using rule 395 (comments)


State 505

  309 selectControl: select selectable selectConditionBreak casesControl "end" •

    $default  reduce using rule 309 (selectControl)


State 506

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  333 casesControl: casesControl "case" • variable caseControlBreak caseBody
  334             | casesControl "case" • functionCall caseControlBreak caseBody

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 548
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 549
    cell                       go to state 46
    matrix                     go to state 47


State 507

  316 defaultCase: "otherwise" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  317            | "otherwise" • ","
  318            | "otherwise" • ";"
  319            | "otherwise" • "end of line"
  320            | "otherwise" • "," "end of line"
  321            | "otherwise" • ";" "end of line"

    "end of line"  shift, and go to state 550
    ","            shift, and go to state 551
    ";"            shift, and go to state 552

    $default  reduce using rule 316 (defaultCase)


State 508

  315 defaultCase: else •

    $default  reduce using rule 315 (defaultCase)


State 509

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  287 elseBody: • expressions
  288         | ε •  ["end"]
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  310              | select selectable selectConditionBreak casesControl defaultCase • elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 288 (elseBody)

    expressions                go to state 525
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    elseBody                   go to state 553
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 510

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  331 casesControl: comments "case" • variable caseControlBreak caseBody
  332             | comments "case" • functionCall caseControlBreak caseBody

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 554
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 555
    cell                       go to state 46
    matrix                     go to state 47


State 511

  396 comments: comments "line comment" • "end of line"

    "end of line"  shift, and go to state 556


State 512

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   75                          | "#" functionDeclarationArguments "->" "end of line" "(" "end of line" • functionBody ")"
   89 functionBody: • expressions
   90             | ε •  [")"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    ")"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 557
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 513

   73 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "end of line" "(" functionBody • ")"

    ")"  shift, and go to state 558


State 514

   74 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "(" "end of line" functionBody • ")"

    ")"  shift, and go to state 559


State 515

   72 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "(" functionBody ")" •

    $default  reduce using rule 72 (lambdaFunctionDeclaration)


State 516

  275 argumentDimension: "(" functionArgs ")" •

    $default  reduce using rule 275 (argumentDimension)


State 517

   63 functionArgs: functionArgs • ","
   64             | functionArgs • "," variable
   65             | functionArgs • "," functionCall
   66             | functionArgs • "," ":"
   67             | functionArgs • "," variableDeclaration
  277 argumentValidators: "{" functionArgs • "}"

    ","  shift, and go to state 438
    "}"  shift, and go to state 560


State 518

  272 argumentDeclaration: argumentName argumentDimension "identifier" argumentValidators • argumentDefaultValue
  279 argumentDefaultValue: • "=" variable
  280                     | • "=" functionCall
  281                     | ε •  ["end of line", "line comment"]

    "="  shift, and go to state 519

    $default  reduce using rule 281 (argumentDefaultValue)

    argumentDefaultValue  go to state 561


State 519

   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  279 argumentDefaultValue: "=" • variable
  280                     | "=" • functionCall

    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 59
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 60
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31

    functionCall               go to state 562
    simpleFunctionCall         go to state 40
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 563
    cell                       go to state 46
    matrix                     go to state 47


State 520

  271 argumentDeclaration: argumentName argumentDimension argumentValidators argumentDefaultValue •

    $default  reduce using rule 271 (argumentDeclaration)


State 521

  303 else: "else" "end of line" •

    $default  reduce using rule 303 (else)


State 522

  301 else: "else" "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  304     | "else" "," • "end of line"

    "end of line"  shift, and go to state 564

    $default  reduce using rule 301 (else)


State 523

  302 else: "else" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  305     | "else" ";" • "end of line"

    "end of line"  shift, and go to state 565

    $default  reduce using rule 302 (else)


State 524

  289 ifConditionBreak: • ";"
  290                 | • ";" "end of line"
  291                 | • ","
  292                 | • "," "end of line"
  293                 | • "end of line"
  294 then: • "then"
  295     | • ifConditionBreak "then"
  296     | • ifConditionBreak "then" "end of line"
  297     | • "then" ifConditionBreak
  298     | • ifConditionBreak
  299     | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "elseif", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  306 elseIfControl: "elseif" condition • then thenBody
  307              | "elseif" condition • then thenBody else elseBody
  308              | "elseif" condition • then thenBody elseIfControl

    "end of line"  shift, and go to state 213
    ","            shift, and go to state 214
    ";"            shift, and go to state 215
    "then"         shift, and go to state 216

    $default  reduce using rule 299 (then)

    ifConditionBreak  go to state 217
    then              go to state 566


State 525

  287 elseBody: expressions •

    $default  reduce using rule 287 (elseBody)


State 526

  283 ifControl: "if" condition then thenBody else elseBody • "end"

    "end"  shift, and go to state 567


State 527

  284 ifControl: "if" condition then thenBody elseIfControl "end" •

    $default  reduce using rule 284 (ifControl)


State 528

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   84 functionDeclarationBreak: • lineEnd
   85                         | • ";"
   86                         | • ";" "end of line"
   87                         | • ","
   88                         | • "," "end of line"
  397 lineEnd: • "end of line"
  398        | • "line comment" "end of line"

    "end of line"   shift, and go to state 400
    ","             shift, and go to state 414
    ";"             shift, and go to state 415
    "line comment"  shift, and go to state 401

    functionDeclarationBreak  go to state 568
    lineEnd                   go to state 417


State 529

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" • functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   79 functionDeclarationArguments: • "(" idList ")"
   80                             | • "(" ")"
   81                             | ε •  ["end of line", ",", ";", "line comment"]

    "("  shift, and go to state 63

    $default  reduce using rule 81 (functionDeclarationArguments)

    functionDeclarationArguments  go to state 569


State 530

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   68                    | "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   89 functionBody: • expressions
   90             | ε •  ["end", "endfunction"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"          reduce using rule 90 (functionBody)
    "endfunction"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 570
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 531

   77 endfunction: "end" •

    $default  reduce using rule 77 (endfunction)


State 532

   76 endfunction: "endfunction" •

    $default  reduce using rule 76 (endfunction)


State 533

   71 functionDeclaration: "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 71 (functionDeclaration)


State 534

  350 forControl: "for" "(" "identifier" "=" forIterator ")" • forConditionBreak forBody "end"
  353 forConditionBreak: • "end of line"
  354                  | • ";"
  355                  | • ";" "end of line"
  356                  | • ","
  357                  | • "," "end of line"
  358                  | • "do"
  359                  | • "do" "end of line"
  360                  | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 486
    ","            shift, and go to state 487
    ";"            shift, and go to state 488
    "do"           shift, and go to state 489

    $default  reduce using rule 360 (forConditionBreak)

    forConditionBreak  go to state 571


State 535

  357 forConditionBreak: "," "end of line" •

    $default  reduce using rule 357 (forConditionBreak)


State 536

  355 forConditionBreak: ";" "end of line" •

    $default  reduce using rule 355 (forConditionBreak)


State 537

  359 forConditionBreak: "do" "end of line" •

    $default  reduce using rule 359 (forConditionBreak)


State 538

  361 forBody: expressions •

    $default  reduce using rule 361 (forBody)


State 539

  349 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody • "end"

    "end"  shift, and go to state 572


State 540

  311 selectControl: select selectable "line comment" selectConditionBreak casesControl "end" •

    $default  reduce using rule 311 (selectControl)


State 541

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  287 elseBody: • expressions
  288         | ε •  ["end"]
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  312              | select selectable "line comment" selectConditionBreak casesControl defaultCase • elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 288 (elseBody)

    expressions                go to state 525
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    elseBody                   go to state 573
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 542

  340 caseControlBreak: "end of line" •

    $default  reduce using rule 340 (caseControlBreak)


State 543

  338 caseControlBreak: "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  342                 | "," • "end of line"

    "end of line"  shift, and go to state 574

    $default  reduce using rule 338 (caseControlBreak)


State 544

  339 caseControlBreak: ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  343                 | ";" • "end of line"

    "end of line"  shift, and go to state 575

    $default  reduce using rule 339 (caseControlBreak)


State 545

  337 caseControlBreak: "then" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  341                 | "then" • "end of line"
  344                 | "then" • ","
  345                 | "then" • "," "end of line"
  346                 | "then" • ";"
  347                 | "then" • ";" "end of line"

    "end of line"  shift, and go to state 576
    ","            shift, and go to state 577
    ";"            shift, and go to state 578

    $default  reduce using rule 337 (caseControlBreak)


State 546

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  330 casesControl: "case" functionCall caseControlBreak • caseBody
  335 caseBody: • expressions
  336         | ε •  ["else", "end", "case", "otherwise"]
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"       reduce using rule 336 (caseBody)
    "end"        reduce using rule 336 (caseBody)
    "case"       reduce using rule 336 (caseBody)
    "otherwise"  reduce using rule 336 (caseBody)

    expressions                go to state 579
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    caseBody                   go to state 580
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 547

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  329 casesControl: "case" variable caseControlBreak • caseBody
  335 caseBody: • expressions
  336         | ε •  ["else", "end", "case", "otherwise"]
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"       reduce using rule 336 (caseBody)
    "end"        reduce using rule 336 (caseBody)
    "case"       reduce using rule 336 (caseBody)
    "otherwise"  reduce using rule 336 (caseBody)

    expressions                go to state 579
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    caseBody                   go to state 581
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 548

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  334 casesControl: casesControl "case" functionCall • caseControlBreak caseBody
  337 caseControlBreak: • "then"
  338                 | • ","
  339                 | • ";"
  340                 | • "end of line"
  341                 | • "then" "end of line"
  342                 | • "," "end of line"
  343                 | • ";" "end of line"
  344                 | • "then" ","
  345                 | • "then" "," "end of line"
  346                 | • "then" ";"
  347                 | • "then" ";" "end of line"
  348                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 542
    "'"            shift, and go to state 121
    ","            shift, and go to state 543
    ":"            shift, and go to state 122
    ";"            shift, and go to state 544
    "("            shift, and go to state 171
    "."            shift, and go to state 172
    ".'"           shift, and go to state 125
    "+"            shift, and go to state 126
    "-"            shift, and go to state 127
    "*"            shift, and go to state 128
    ".*"           shift, and go to state 129
    ".*."          shift, and go to state 130
    "*."           shift, and go to state 131
    "/"            shift, and go to state 132
    "./"           shift, and go to state 133
    "/."           shift, and go to state 134
    "./."          shift, and go to state 135
    "\\"           shift, and go to state 136
    ".\\"          shift, and go to state 137
    "\\."          shift, and go to state 138
    ".\\."         shift, and go to state 139
    "** or ^"      shift, and go to state 140
    ".^"           shift, and go to state 141
    "=="           shift, and go to state 142
    "<> or ~="     shift, and go to state 143
    "<"            shift, and go to state 144
    "<="           shift, and go to state 145
    ">"            shift, and go to state 146
    ">="           shift, and go to state 147
    "&"            shift, and go to state 148
    "&&"           shift, and go to state 149
    "|"            shift, and go to state 150
    "||"           shift, and go to state 151
    "then"         shift, and go to state 545

    $default  reduce using rule 348 (caseControlBreak)

    rightComparable   go to state 153
    rightOperand      go to state 154
    listableBegin     go to state 155
    listableEnd       go to state 156
    caseControlBreak  go to state 582

    Conflict between rule 348 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 348 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 348 and token "-" resolved as shift (CONTROLBREAK < "-").


State 549

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  333 casesControl: casesControl "case" variable • caseControlBreak caseBody
  337 caseControlBreak: • "then"
  338                 | • ","
  339                 | • ";"
  340                 | • "end of line"
  341                 | • "then" "end of line"
  342                 | • "," "end of line"
  343                 | • ";" "end of line"
  344                 | • "then" ","
  345                 | • "then" "," "end of line"
  346                 | • "then" ";"
  347                 | • "then" ";" "end of line"
  348                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 542
    "'"            shift, and go to state 157
    ","            shift, and go to state 543
    ":"            shift, and go to state 122
    ";"            shift, and go to state 544
    "("            shift, and go to state 173
    "."            shift, and go to state 174
    ".'"           shift, and go to state 160
    "+"            shift, and go to state 126
    "-"            shift, and go to state 127
    "*"            shift, and go to state 128
    ".*"           shift, and go to state 129
    ".*."          shift, and go to state 130
    "*."           shift, and go to state 131
    "/"            shift, and go to state 132
    "./"           shift, and go to state 133
    "/."           shift, and go to state 134
    "./."          shift, and go to state 135
    "\\"           shift, and go to state 136
    ".\\"          shift, and go to state 137
    "\\."          shift, and go to state 138
    ".\\."         shift, and go to state 139
    "** or ^"      shift, and go to state 161
    ".^"           shift, and go to state 162
    "=="           shift, and go to state 142
    "<> or ~="     shift, and go to state 143
    "<"            shift, and go to state 144
    "<="           shift, and go to state 145
    ">"            shift, and go to state 146
    ">="           shift, and go to state 147
    "&"            shift, and go to state 148
    "&&"           shift, and go to state 149
    "|"            shift, and go to state 150
    "||"           shift, and go to state 151
    "then"         shift, and go to state 545

    $default  reduce using rule 348 (caseControlBreak)

    rightComparable   go to state 163
    rightOperand      go to state 164
    listableBegin     go to state 155
    listableEnd       go to state 165
    caseControlBreak  go to state 583

    Conflict between rule 348 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 348 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 348 and token "-" resolved as shift (CONTROLBREAK < "-").


State 550

  319 defaultCase: "otherwise" "end of line" •

    $default  reduce using rule 319 (defaultCase)


State 551

  317 defaultCase: "otherwise" "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  320            | "otherwise" "," • "end of line"

    "end of line"  shift, and go to state 584

    $default  reduce using rule 317 (defaultCase)


State 552

  318 defaultCase: "otherwise" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "end", "select", "switch", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  321            | "otherwise" ";" • "end of line"

    "end of line"  shift, and go to state 585

    $default  reduce using rule 318 (defaultCase)


State 553

  310 selectControl: select selectable selectConditionBreak casesControl defaultCase elseBody • "end"

    "end"  shift, and go to state 586


State 554

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  332 casesControl: comments "case" functionCall • caseControlBreak caseBody
  337 caseControlBreak: • "then"
  338                 | • ","
  339                 | • ";"
  340                 | • "end of line"
  341                 | • "then" "end of line"
  342                 | • "," "end of line"
  343                 | • ";" "end of line"
  344                 | • "then" ","
  345                 | • "then" "," "end of line"
  346                 | • "then" ";"
  347                 | • "then" ";" "end of line"
  348                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 542
    "'"            shift, and go to state 121
    ","            shift, and go to state 543
    ":"            shift, and go to state 122
    ";"            shift, and go to state 544
    "("            shift, and go to state 171
    "."            shift, and go to state 172
    ".'"           shift, and go to state 125
    "+"            shift, and go to state 126
    "-"            shift, and go to state 127
    "*"            shift, and go to state 128
    ".*"           shift, and go to state 129
    ".*."          shift, and go to state 130
    "*."           shift, and go to state 131
    "/"            shift, and go to state 132
    "./"           shift, and go to state 133
    "/."           shift, and go to state 134
    "./."          shift, and go to state 135
    "\\"           shift, and go to state 136
    ".\\"          shift, and go to state 137
    "\\."          shift, and go to state 138
    ".\\."         shift, and go to state 139
    "** or ^"      shift, and go to state 140
    ".^"           shift, and go to state 141
    "=="           shift, and go to state 142
    "<> or ~="     shift, and go to state 143
    "<"            shift, and go to state 144
    "<="           shift, and go to state 145
    ">"            shift, and go to state 146
    ">="           shift, and go to state 147
    "&"            shift, and go to state 148
    "&&"           shift, and go to state 149
    "|"            shift, and go to state 150
    "||"           shift, and go to state 151
    "then"         shift, and go to state 545

    $default  reduce using rule 348 (caseControlBreak)

    rightComparable   go to state 153
    rightOperand      go to state 154
    listableBegin     go to state 155
    listableEnd       go to state 156
    caseControlBreak  go to state 587

    Conflict between rule 348 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 348 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 348 and token "-" resolved as shift (CONTROLBREAK < "-").


State 555

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  331 casesControl: comments "case" variable • caseControlBreak caseBody
  337 caseControlBreak: • "then"
  338                 | • ","
  339                 | • ";"
  340                 | • "end of line"
  341                 | • "then" "end of line"
  342                 | • "," "end of line"
  343                 | • ";" "end of line"
  344                 | • "then" ","
  345                 | • "then" "," "end of line"
  346                 | • "then" ";"
  347                 | • "then" ";" "end of line"
  348                 | ε •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "[", "{", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]

    "end of line"  shift, and go to state 542
    "'"            shift, and go to state 157
    ","            shift, and go to state 543
    ":"            shift, and go to state 122
    ";"            shift, and go to state 544
    "("            shift, and go to state 173
    "."            shift, and go to state 174
    ".'"           shift, and go to state 160
    "+"            shift, and go to state 126
    "-"            shift, and go to state 127
    "*"            shift, and go to state 128
    ".*"           shift, and go to state 129
    ".*."          shift, and go to state 130
    "*."           shift, and go to state 131
    "/"            shift, and go to state 132
    "./"           shift, and go to state 133
    "/."           shift, and go to state 134
    "./."          shift, and go to state 135
    "\\"           shift, and go to state 136
    ".\\"          shift, and go to state 137
    "\\."          shift, and go to state 138
    ".\\."         shift, and go to state 139
    "** or ^"      shift, and go to state 161
    ".^"           shift, and go to state 162
    "=="           shift, and go to state 142
    "<> or ~="     shift, and go to state 143
    "<"            shift, and go to state 144
    "<="           shift, and go to state 145
    ">"            shift, and go to state 146
    ">="           shift, and go to state 147
    "&"            shift, and go to state 148
    "&&"           shift, and go to state 149
    "|"            shift, and go to state 150
    "||"           shift, and go to state 151
    "then"         shift, and go to state 545

    $default  reduce using rule 348 (caseControlBreak)

    rightComparable   go to state 163
    rightOperand      go to state 164
    listableBegin     go to state 155
    listableEnd       go to state 165
    caseControlBreak  go to state 588

    Conflict between rule 348 and token "(" resolved as shift (CONTROLBREAK < "(").
    Conflict between rule 348 and token "+" resolved as shift (CONTROLBREAK < "+").
    Conflict between rule 348 and token "-" resolved as shift (CONTROLBREAK < "-").


State 556

  396 comments: comments "line comment" "end of line" •

    $default  reduce using rule 396 (comments)


State 557

   75 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody • ")"

    ")"  shift, and go to state 589


State 558

   73 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")" •

    $default  reduce using rule 73 (lambdaFunctionDeclaration)


State 559

   74 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")" •

    $default  reduce using rule 74 (lambdaFunctionDeclaration)


State 560

  277 argumentValidators: "{" functionArgs "}" •

    $default  reduce using rule 277 (argumentValidators)


State 561

  272 argumentDeclaration: argumentName argumentDimension "identifier" argumentValidators argumentDefaultValue •

    $default  reduce using rule 272 (argumentDeclaration)


State 562

   94 comparison: functionCall • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  126 operation: functionCall • rightOperand
  133          | functionCall • "** or ^" variable
  134          | functionCall • "** or ^" functionCall
  137          | functionCall • ".^" variable
  138          | functionCall • ".^" functionCall
  141          | functionCall • "'"
  142          | functionCall • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  181 variable: functionCall • "." "identifier"
  182         | functionCall • "." keywords
  184         | functionCall • listableEnd
  202         | functionCall • "(" functionArgs ")"
  203         | functionCall • "(" ")"
  280 argumentDefaultValue: "=" functionCall •  ["end of line", "line comment"]

    "'"         shift, and go to state 121
    ":"         shift, and go to state 122
    "("         shift, and go to state 171
    "."         shift, and go to state 172
    ".'"        shift, and go to state 125
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 140
    ".^"        shift, and go to state 141
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 280 (argumentDefaultValue)

    rightComparable  go to state 153
    rightOperand     go to state 154
    listableBegin    go to state 155
    listableEnd      go to state 156


State 563

   93 comparison: variable • rightComparable
   95 rightComparable: • "&" variable
   96                | • "&" functionCall
   97                | • "&" ":"
   98                | • "&&" variable
   99                | • "&&" functionCall
  100                | • "&&" ":"
  101                | • "|" variable
  102                | • "|" functionCall
  103                | • "|" ":"
  104                | • "||" variable
  105                | • "||" functionCall
  106                | • "||" ":"
  107                | • "==" variable
  108                | • "==" functionCall
  109                | • "==" ":"
  110                | • "<> or ~=" variable
  111                | • "<> or ~=" functionCall
  112                | • "<> or ~=" ":"
  113                | • ">" variable
  114                | • ">" functionCall
  115                | • ">" ":"
  116                | • "<" variable
  117                | • "<" functionCall
  118                | • "<" ":"
  119                | • ">=" variable
  120                | • ">=" functionCall
  121                | • ">=" ":"
  122                | • "<=" variable
  123                | • "<=" functionCall
  124                | • "<=" ":"
  125 operation: variable • rightOperand
  131          | variable • "** or ^" variable
  132          | variable • "** or ^" functionCall
  135          | variable • ".^" variable
  136          | variable • ".^" functionCall
  139          | variable • "'"
  140          | variable • ".'"
  143 rightOperand: • "+" variable
  144             | • "+" functionCall
  145             | • "-" variable
  146             | • "-" functionCall
  147             | • "*" variable
  148             | • "*" functionCall
  149             | • ".*" variable
  150             | • ".*" functionCall
  151             | • ".*." variable
  152             | • ".*." functionCall
  153             | • "*." variable
  154             | • "*." functionCall
  155             | • "/" variable
  156             | • "/" functionCall
  157             | • "./" variable
  158             | • "./" functionCall
  159             | • "./." variable
  160             | • "./." functionCall
  161             | • "/." variable
  162             | • "/." functionCall
  163             | • "\\" variable
  164             | • "\\" functionCall
  165             | • ".\\" variable
  166             | • ".\\" functionCall
  167             | • ".\\." variable
  168             | • ".\\." functionCall
  169             | • "\\." variable
  170             | • "\\." functionCall
  171 listableBegin: • ":" variable
  172              | • ":" functionCall
  173 listableEnd: • listableBegin ":" variable
  174            | • listableBegin ":" functionCall
  175            | • listableBegin
  178 variable: variable • "." "identifier"
  179         | variable • "." keywords
  180         | variable • "." functionCall
  183         | variable • listableEnd
  201         | variable • "(" functionArgs ")"
  279 argumentDefaultValue: "=" variable •  ["end of line", "line comment"]

    "'"         shift, and go to state 157
    ":"         shift, and go to state 122
    "("         shift, and go to state 173
    "."         shift, and go to state 174
    ".'"        shift, and go to state 160
    "+"         shift, and go to state 126
    "-"         shift, and go to state 127
    "*"         shift, and go to state 128
    ".*"        shift, and go to state 129
    ".*."       shift, and go to state 130
    "*."        shift, and go to state 131
    "/"         shift, and go to state 132
    "./"        shift, and go to state 133
    "/."        shift, and go to state 134
    "./."       shift, and go to state 135
    "\\"        shift, and go to state 136
    ".\\"       shift, and go to state 137
    "\\."       shift, and go to state 138
    ".\\."      shift, and go to state 139
    "** or ^"   shift, and go to state 161
    ".^"        shift, and go to state 162
    "=="        shift, and go to state 142
    "<> or ~="  shift, and go to state 143
    "<"         shift, and go to state 144
    "<="        shift, and go to state 145
    ">"         shift, and go to state 146
    ">="        shift, and go to state 147
    "&"         shift, and go to state 148
    "&&"        shift, and go to state 149
    "|"         shift, and go to state 150
    "||"        shift, and go to state 151

    $default  reduce using rule 279 (argumentDefaultValue)

    rightComparable  go to state 163
    rightOperand     go to state 164
    listableBegin    go to state 155
    listableEnd      go to state 165


State 564

  304 else: "else" "," "end of line" •

    $default  reduce using rule 304 (else)


State 565

  305 else: "else" ";" "end of line" •

    $default  reduce using rule 305 (else)


State 566

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  285 thenBody: • expressions
  286         | ε •  ["else", "elseif", "end"]
  306 elseIfControl: "elseif" condition then • thenBody
  307              | "elseif" condition then • thenBody else elseBody
  308              | "elseif" condition then • thenBody elseIfControl
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"    reduce using rule 286 (thenBody)
    "elseif"  reduce using rule 286 (thenBody)
    "end"     reduce using rule 286 (thenBody)

    expressions                go to state 409
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    thenBody                   go to state 590
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 567

  283 ifControl: "if" condition then thenBody else elseBody "end" •

    $default  reduce using rule 283 (ifControl)


State 568

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   89 functionBody: • expressions
   90             | ε •  ["end", "endfunction"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"          reduce using rule 90 (functionBody)
    "endfunction"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 591
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 569

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments • functionDeclarationBreak functionBody endfunction
   84 functionDeclarationBreak: • lineEnd
   85                         | • ";"
   86                         | • ";" "end of line"
   87                         | • ","
   88                         | • "," "end of line"
  397 lineEnd: • "end of line"
  398        | • "line comment" "end of line"

    "end of line"   shift, and go to state 400
    ","             shift, and go to state 414
    ";"             shift, and go to state 415
    "line comment"  shift, and go to state 401

    functionDeclarationBreak  go to state 592
    lineEnd                   go to state 417


State 570

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   76 endfunction: • "endfunction"
   77            | • "end"

    "end"          shift, and go to state 531
    "endfunction"  shift, and go to state 532

    endfunction  go to state 593


State 571

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  350           | "for" "(" "identifier" "=" forIterator ")" forConditionBreak • forBody "end"
  361 forBody: • expressions
  362        | ε •  ["end"]
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 362 (forBody)

    expressions                go to state 538
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    forBody                    go to state 594
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 572

  349 forControl: "for" "identifier" "=" forIterator forConditionBreak forBody "end" •

    $default  reduce using rule 349 (forControl)


State 573

  312 selectControl: select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody • "end"

    "end"  shift, and go to state 595


State 574

  342 caseControlBreak: "," "end of line" •

    $default  reduce using rule 342 (caseControlBreak)


State 575

  343 caseControlBreak: ";" "end of line" •

    $default  reduce using rule 343 (caseControlBreak)


State 576

  341 caseControlBreak: "then" "end of line" •

    $default  reduce using rule 341 (caseControlBreak)


State 577

  344 caseControlBreak: "then" "," •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  345                 | "then" "," • "end of line"

    "end of line"  shift, and go to state 596

    $default  reduce using rule 344 (caseControlBreak)


State 578

  346 caseControlBreak: "then" ";" •  [error, "%t or %T", "%f or %F", "~ or @", "#", "$", "(", "[", "{", "+", "-", "arguments", "if", "else", "end", "select", "switch", "case", "otherwise", "function", "for", "while", "break", "continue", "try", "return", "string", "identifier", "integer", "float", "complex number", "number", "line comment"]
  347                 | "then" ";" • "end of line"

    "end of line"  shift, and go to state 597

    $default  reduce using rule 346 (caseControlBreak)


State 579

  335 caseBody: expressions •

    $default  reduce using rule 335 (caseBody)


State 580

  330 casesControl: "case" functionCall caseControlBreak caseBody •

    $default  reduce using rule 330 (casesControl)


State 581

  329 casesControl: "case" variable caseControlBreak caseBody •

    $default  reduce using rule 329 (casesControl)


State 582

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  334 casesControl: casesControl "case" functionCall caseControlBreak • caseBody
  335 caseBody: • expressions
  336         | ε •  ["else", "end", "case", "otherwise"]
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"       reduce using rule 336 (caseBody)
    "end"        reduce using rule 336 (caseBody)
    "case"       reduce using rule 336 (caseBody)
    "otherwise"  reduce using rule 336 (caseBody)

    expressions                go to state 579
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    caseBody                   go to state 598
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 583

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  333 casesControl: casesControl "case" variable caseControlBreak • caseBody
  335 caseBody: • expressions
  336         | ε •  ["else", "end", "case", "otherwise"]
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"       reduce using rule 336 (caseBody)
    "end"        reduce using rule 336 (caseBody)
    "case"       reduce using rule 336 (caseBody)
    "otherwise"  reduce using rule 336 (caseBody)

    expressions                go to state 579
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    caseBody                   go to state 599
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 584

  320 defaultCase: "otherwise" "," "end of line" •

    $default  reduce using rule 320 (defaultCase)


State 585

  321 defaultCase: "otherwise" ";" "end of line" •

    $default  reduce using rule 321 (defaultCase)


State 586

  310 selectControl: select selectable selectConditionBreak casesControl defaultCase elseBody "end" •

    $default  reduce using rule 310 (selectControl)


State 587

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  332 casesControl: comments "case" functionCall caseControlBreak • caseBody
  335 caseBody: • expressions
  336         | ε •  ["else", "end", "case", "otherwise"]
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"       reduce using rule 336 (caseBody)
    "end"        reduce using rule 336 (caseBody)
    "case"       reduce using rule 336 (caseBody)
    "otherwise"  reduce using rule 336 (caseBody)

    expressions                go to state 579
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    caseBody                   go to state 600
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 588

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  331 casesControl: comments "case" variable caseControlBreak • caseBody
  335 caseBody: • expressions
  336         | ε •  ["else", "end", "case", "otherwise"]
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "else"       reduce using rule 336 (caseBody)
    "end"        reduce using rule 336 (caseBody)
    "case"       reduce using rule 336 (caseBody)
    "otherwise"  reduce using rule 336 (caseBody)

    expressions                go to state 579
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    caseBody                   go to state 601
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 589

   75 lambdaFunctionDeclaration: "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")" •

    $default  reduce using rule 75 (lambdaFunctionDeclaration)


State 590

  300 else: • "else"
  301     | • "else" ","
  302     | • "else" ";"
  303     | • "else" "end of line"
  304     | • "else" "," "end of line"
  305     | • "else" ";" "end of line"
  306 elseIfControl: • "elseif" condition then thenBody
  306              | "elseif" condition then thenBody •  ["end"]
  307              | • "elseif" condition then thenBody else elseBody
  307              | "elseif" condition then thenBody • else elseBody
  308              | • "elseif" condition then thenBody elseIfControl
  308              | "elseif" condition then thenBody • elseIfControl

    "else"    shift, and go to state 474
    "elseif"  shift, and go to state 475

    $default  reduce using rule 306 (elseIfControl)

    else           go to state 602
    elseIfControl  go to state 603


State 591

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   76 endfunction: • "endfunction"
   77            | • "end"

    "end"          shift, and go to state 531
    "endfunction"  shift, and go to state 532

    endfunction  go to state 604


State 592

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak • functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   89 functionBody: • expressions
   90             | ε •  ["end", "endfunction"]
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"          reduce using rule 90 (functionBody)
    "endfunction"  reduce using rule 90 (functionBody)

    expressions                go to state 461
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    functionBody               go to state 605
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 593

   68 functionDeclaration: "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 68 (functionDeclaration)


State 594

  350 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody • "end"

    "end"  shift, and go to state 606


State 595

  312 selectControl: select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end" •

    $default  reduce using rule 312 (selectControl)


State 596

  345 caseControlBreak: "then" "," "end of line" •

    $default  reduce using rule 345 (caseControlBreak)


State 597

  347 caseControlBreak: "then" ";" "end of line" •

    $default  reduce using rule 347 (caseControlBreak)


State 598

  334 casesControl: casesControl "case" functionCall caseControlBreak caseBody •

    $default  reduce using rule 334 (casesControl)


State 599

  333 casesControl: casesControl "case" variable caseControlBreak caseBody •

    $default  reduce using rule 333 (casesControl)


State 600

  332 casesControl: comments "case" functionCall caseControlBreak caseBody •

    $default  reduce using rule 332 (casesControl)


State 601

  331 casesControl: comments "case" variable caseControlBreak caseBody •

    $default  reduce using rule 331 (casesControl)


State 602

    5 expressions: • recursiveExpression
    6            | • recursiveExpression expression
    7            | • recursiveExpression expression "line comment"
    8            | • expression
    9            | • expression "line comment"
   10 recursiveExpression: • recursiveExpression expression expressionLineBreak
   11                    | • recursiveExpression expression "line comment" expressionLineBreak
   12                    | • expression "line comment" expressionLineBreak
   13                    | • expression expressionLineBreak
   20 expression: • functionDeclaration
   21           | • functionCall
   22           | • variableDeclaration
   23           | • argumentsControl
   24           | • ifControl
   25           | • selectControl
   26           | • forControl
   27           | • whileControl
   28           | • tryControl
   29           | • variable
   30           | • implicitFunctionCall
   31           | • "break"
   32           | • "continue"
   33           | • returnControl
   34           | • "line comment"
   35           | • error
   36 implicitFunctionCall: • implicitFunctionCall implicitCallable
   37                     | • "identifier" implicitCallable
   48 functionCall: • simpleFunctionCall
   49             | • "(" functionCall ")"
   50 simpleFunctionCall: • "identifier" "(" functionArgs ")"
   51                   | • "identifier" "{" functionArgs "}"
   52                   | • "identifier" "(" ")"
   53                   | • "identifier" "{" "}"
   68 functionDeclaration: • "function" "identifier" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   69                    | • "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   70                    | • "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   71                    | • "function" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction
   72 lambdaFunctionDeclaration: • "#" functionDeclarationArguments "->" "(" functionBody ")"
   73                          | • "#" functionDeclarationArguments "->" "end of line" "(" functionBody ")"
   74                          | • "#" functionDeclarationArguments "->" "(" "end of line" functionBody ")"
   75                          | • "#" functionDeclarationArguments "->" "end of line" "(" "end of line" functionBody ")"
   93 comparison: • variable rightComparable
   94           | • functionCall rightComparable
  125 operation: • variable rightOperand
  126          | • functionCall rightOperand
  127          | • "-" variable
  128          | • "-" functionCall
  129          | • "+" variable
  130          | • "+" functionCall
  131          | • variable "** or ^" variable
  132          | • variable "** or ^" functionCall
  133          | • functionCall "** or ^" variable
  134          | • functionCall "** or ^" functionCall
  135          | • variable ".^" variable
  136          | • variable ".^" functionCall
  137          | • functionCall ".^" variable
  138          | • functionCall ".^" functionCall
  139          | • variable "'"
  140          | • variable ".'"
  141          | • functionCall "'"
  142          | • functionCall ".'"
  176 variable: • "~ or @" variable
  177         | • "~ or @" functionCall
  178         | • variable "." "identifier"
  179         | • variable "." keywords
  180         | • variable "." functionCall
  181         | • functionCall "." "identifier"
  182         | • functionCall "." keywords
  183         | • variable listableEnd
  184         | • functionCall listableEnd
  185         | • lambdaFunctionDeclaration
  186         | • matrix
  187         | • cell
  188         | • operation
  189         | • "identifier"
  190         | • "integer"
  191         | • "number"
  192         | • "float"
  193         | • "complex number"
  194         | • "string"
  195         | • "$"
  196         | • "%t or %T"
  197         | • "%f or %F"
  198         | • "(" variable ")"
  199         | • "(" variableFields ")"
  200         | • comparison
  201         | • variable "(" functionArgs ")"
  202         | • functionCall "(" functionArgs ")"
  203         | • functionCall "(" ")"
  210 cell: • "{" matrixOrCellLines "}"
  211     | • "{" "end of line" matrixOrCellLines "}"
  212     | • "{" matrixOrCellLines matrixOrCellColumns "}"
  213     | • "{" "end of line" matrixOrCellLines matrixOrCellColumns "}"
  214     | • "{" matrixOrCellColumns "}"
  215     | • "{" "end of line" matrixOrCellColumns "}"
  216     | • "{" "end of line" "}"
  217     | • "{" "}"
  218 matrix: • "[" matrixOrCellLines "]"
  219       | • "[" "end of line" matrixOrCellLines "]"
  220       | • "[" matrixOrCellLines matrixOrCellColumns "]"
  221       | • "[" "end of line" matrixOrCellLines matrixOrCellColumns "]"
  222       | • "[" matrixOrCellColumns "]"
  223       | • "[" "end of line" matrixOrCellColumns "]"
  224       | • "[" "end of line" "]"
  225       | • "[" "]"
  247 variableDeclaration: • assignable "=" variable
  248                    | • assignable "=" functionCall
  249                    | • functionCall "=" variable
  250                    | • functionCall "=" functionCall
  251                    | • assignable "=" ":"
  252                    | • functionCall "=" ":"
  253                    | • assignable "=" returnControl
  254                    | • functionCall "=" returnControl
  255 assignable: • variable "." "identifier"
  256           | • variable "." keywords
  257           | • variable "." functionCall
  258           | • functionCall "." "identifier"
  259           | • functionCall "." keywords
  260           | • "identifier"
  261           | • multipleResults
  262           | • variable "(" functionArgs ")"
  263           | • functionCall "(" functionArgs ")"
  264 multipleResults: • "[" matrixOrCellColumns "]"
  265 argumentsControl: • "arguments" "end of line" argumentsDeclarations "end"
  266                 | • "arguments" "end of line" "end"
  282 ifControl: • "if" condition then thenBody "end"
  283          | • "if" condition then thenBody else elseBody "end"
  284          | • "if" condition then thenBody elseIfControl "end"
  287 elseBody: • expressions
  288         | ε •  ["end"]
  307 elseIfControl: "elseif" condition then thenBody else • elseBody
  309 selectControl: • select selectable selectConditionBreak casesControl "end"
  310              | • select selectable selectConditionBreak casesControl defaultCase elseBody "end"
  311              | • select selectable "line comment" selectConditionBreak casesControl "end"
  312              | • select selectable "line comment" selectConditionBreak casesControl defaultCase elseBody "end"
  313 select: • "select"
  314       | • "switch"
  349 forControl: • "for" "identifier" "=" forIterator forConditionBreak forBody "end"
  350           | • "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end"
  363 whileControl: • "while" condition whileConditionBreak whileBody "end"
  384 tryControl: • "try" catchBody "catch" catchBody "end"
  385           | • "try" catchBody "end"
  392 returnControl: • "return"
  393              | • "return" variable
  394              | • "return" functionCall

    error             shift, and go to state 1
    "%t or %T"        shift, and go to state 3
    "%f or %F"        shift, and go to state 4
    "~ or @"          shift, and go to state 5
    "#"               shift, and go to state 6
    "$"               shift, and go to state 7
    "("               shift, and go to state 10
    "["               shift, and go to state 11
    "{"               shift, and go to state 12
    "+"               shift, and go to state 13
    "-"               shift, and go to state 14
    "arguments"       shift, and go to state 15
    "if"              shift, and go to state 16
    "select"          shift, and go to state 17
    "switch"          shift, and go to state 18
    "function"        shift, and go to state 19
    "for"             shift, and go to state 20
    "while"           shift, and go to state 21
    "break"           shift, and go to state 22
    "continue"        shift, and go to state 23
    "try"             shift, and go to state 24
    "return"          shift, and go to state 25
    "string"          shift, and go to state 26
    "identifier"      shift, and go to state 27
    "integer"         shift, and go to state 28
    "float"           shift, and go to state 29
    "complex number"  shift, and go to state 30
    "number"          shift, and go to state 31
    "line comment"    shift, and go to state 32

    "end"  reduce using rule 288 (elseBody)

    expressions                go to state 525
    recursiveExpression        go to state 35
    expression                 go to state 37
    implicitFunctionCall       go to state 38
    functionCall               go to state 39
    simpleFunctionCall         go to state 40
    functionDeclaration        go to state 41
    lambdaFunctionDeclaration  go to state 42
    comparison                 go to state 43
    operation                  go to state 44
    variable                   go to state 45
    cell                       go to state 46
    matrix                     go to state 47
    variableDeclaration        go to state 48
    assignable                 go to state 49
    multipleResults            go to state 50
    argumentsControl           go to state 51
    ifControl                  go to state 52
    elseBody                   go to state 607
    selectControl              go to state 53
    select                     go to state 54
    forControl                 go to state 55
    whileControl               go to state 56
    tryControl                 go to state 57
    returnControl              go to state 58


State 603

  308 elseIfControl: "elseif" condition then thenBody elseIfControl •

    $default  reduce using rule 308 (elseIfControl)


State 604

   70 functionDeclaration: "function" "[" "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 70 (functionDeclaration)


State 605

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody • endfunction
   76 endfunction: • "endfunction"
   77            | • "end"

    "end"          shift, and go to state 531
    "endfunction"  shift, and go to state 532

    endfunction  go to state 608


State 606

  350 forControl: "for" "(" "identifier" "=" forIterator ")" forConditionBreak forBody "end" •

    $default  reduce using rule 350 (forControl)


State 607

  307 elseIfControl: "elseif" condition then thenBody else elseBody •

    $default  reduce using rule 307 (elseIfControl)


State 608

   69 functionDeclaration: "function" "[" functionDeclarationReturns "]" "=" "identifier" functionDeclarationArguments functionDeclarationBreak functionBody endfunction •

    $default  reduce using rule 69 (functionDeclaration)
